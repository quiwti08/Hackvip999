-- Load the Venyx UI library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zxciaz/VenyxUI/main/Reuploaded"))()

-- Custom themes (you can adjust these)
local themes = {
    Background = Color3.fromRGB(24, 24, 24),
    Glow = Color3.fromRGB(255, 179, 186),
    Accent = Color3.fromRGB(10, 10, 10),
    LightContrast = Color3.fromRGB(20, 20, 20),
    DarkContrast = Color3.fromRGB(14, 14, 14),
    TextColor = Color3.fromRGB(255, 179, 186)
}

local venyx = library.new("nigga.lol(vhuydeptraivl)", 11351620355)

-- Make background images visible (set transparency to 0)
venyx.container.Main.ImageTransparency = 0  -- Main background visible
venyx.container.Main.Glow.ImageTransparency = 0  -- Glow visible
venyx.container.Main.Pages.ImageTransparency = 0  -- Pages background visible
venyx.container.Main.TopBar.ImageTransparency = 0  -- TopBar visible

-- Adjust title and add icon next to title on the right
local titleLabel = venyx.container.Main.TopBar.Title
titleLabel.Size = UDim2.new(0.7, 0, 0, 16)  -- Adjust size for icon
titleLabel.Position = UDim2.new(0, 12, 0.5, -8)  -- Center vertically, align left
titleLabel.TextXAlignment = Enum.TextXAlignment.Left  -- Keep text left-aligned
local icon = venyx.container.Main.TopBar:FindFirstChild("Icon") or Instance.new("ImageLabel")
icon.Name = "Icon"
icon.BackgroundTransparency = 1
icon.Position = UDim2.new(0.85, -24, 0.5, -8)  -- Right of title
icon.Size = UDim2.new(0, 16, 0, 16)
icon.Image = "rbxassetid://11351620355"  -- Specified title icon
icon.ImageTransparency = 0  -- Ensure icon is visible
icon.ZIndex = 5  -- Above other elements
icon.Parent = venyx.container.Main.TopBar

-- Pages (4 pages: Combat, Visual, Misc, Movement, Settings)
-- All pages have built-in scrolling (Venyx supports CanvasSize auto-adjust)
-- Selected icons for thematic relevance

-- Page 1: Combat (Icon: Sword, 5012540623)
local combatPage = venyx:addPage("Combat", 5012540623)
local combatSection = combatPage:addSection("Combat Features")
local utility = {}
getgenv().config = { enable = false, delay = 0.01 }
getgenv().is_firing = false
utility.get_gun = function()
    local char = game.Players.LocalPlayer.Character
    if not char then return end
    for _, tool in next, char:GetChildren() do
        if tool:IsA("Tool") and tool:FindFirstChild("Ammo") then
            return tool
        end
    end
end
utility.rapid = function(tool)
    tool:Activate()
end
combatSection:addToggle("RapidFire", false, function(value)
    config.enable = value
    venyx:Notify("RapidFire", value and "ON" or "OFF")
end)
local UIS = game:GetService("UserInputService")
UIS.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
        local gun = utility.get_gun()
        if config.enable and gun and not is_firing then
            is_firing = true
            while is_firing do
                utility.rapid(gun)
                task.wait(config.delay)
            end
        end
    end
end)
UIS.InputEnded:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
        is_firing = false
    end
end)
local tbEnabled = false
local fovRadius = 20
local hitParts = {
    "Head", "HumanoidRootPart", "UpperTorso", "LowerTorso", "LeftUpperArm", "LeftLowerArm", "LeftHand",
    "RightUpperArm", "RightLowerArm", "RightHand", "LeftUpperLeg", "LeftLowerLeg", "LeftFoot",
    "RightUpperLeg", "RightLowerLeg", "RightFoot", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"
}

getgenv().GetNearestTarget = function()
    local AimlockTarget, Closest = nil, 1 / 0
 
    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) then
            local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
            local Distance = (Vec2(Position.X, Position.Y) - Vec2(Mouse.X, Mouse.Y)).Magnitude
            if Settings.Main.CheckForWalls then
                if
                    (Circle.Radius > Distance and Distance < Closest and OnScreen and
                        getgenv().WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}))
                 then
                    Closest = Distance
                    AimlockTarget = v
                end
            elseif Settings.Main.UseCircleRadius then
                if
                    (Circle.Radius > Distance and Distance < Closest and OnScreen and
                        getgenv().WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}))
                 then
                    Closest = Distance
                    AimlockTarget = v
                end
            else
                if (Circle.Radius > Distance and Distance < Closest and OnScreen) then
                    Closest = Distance
                    AimlockTarget = v
                end
            end
        end
    end
    return AimlockTarget
end
local function distToCursor(part)
    local v, vis = game.Workspace.CurrentCamera:WorldToViewportPoint(part.Position)
    if not vis then return math.huge end
    local m = UIS.TouchEnabled and Vector2.new(game.Workspace.CurrentCamera.ViewportSize.X / 2, game.Workspace.CurrentCamera.ViewportSize.Y / 2) or UIS:GetMouseLocation()
    return (Vector2.new(v.X, v.Y) - Vector2.new(m.X, m.Y)).Magnitude
end
local function GetBestTargetPart(targetChar)
    local bestPart, bestDist = nil, fovRadius
    if targetChar then
        for _, partName in ipairs(hitParts) do
            local part = targetChar:FindFirstChild(partName)
            if part and part:IsA("BasePart") then
                local dist = distToCursor(part)
                if dist < bestDist then
                    bestPart = part
                    bestDist = dist
                end
            end
        end
    end
    return bestPart
end
combatSection:addToggle("TriggerBot", false, function(value)
    tbEnabled = value
    venyx:Notify("TriggerBot", value and "ON" or "OFF")
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local selectedPlayer = nil

-- Tạo danh sách player (trừ bản thân)
local function getPlayerList()
    local list = {}
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            table.insert(list, plr.Name)
        end
    end
    return list
end

-- Dropdown chọn player
combatSection:addDropdown("Select Player", getPlayerList(), function(value)
    selectedPlayer = Players:FindFirstChild(value)
end)

-- Biến lưu trạng thái View
local viewing = false
local lastSubject = Camera.CameraSubject

-- Nút View: toggle góc nhìn
combatSection:addButton("View", function()
    if not selectedPlayer then return end
    if not selectedPlayer.Character or not selectedPlayer.Character:FindFirstChild("Head") then return end

    if not viewing then
        -- Bắt đầu view
        lastSubject = Camera.CameraSubject
        Camera.CameraSubject = selectedPlayer.Character.Head
        viewing = true
        venyx:Notify("View", "Đang view: " .. selectedPlayer.Name)
    else
        -- Tắt view, trả về camera gốc
        Camera.CameraSubject = lastSubject or LocalPlayer.Character:FindFirstChild("Humanoid")
        viewing = false
        venyx:Notify("View", "Tắt view")
    end
end)

-- Nút Go To: teleport đến player
combatSection:addButton("Go To", function()
    if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
        end
    end
end)

-- Tự động update danh sách player khi có người join/leave
Players.PlayerAdded:Connect(function()
end)
Players.PlayerRemoving:Connect(function()
end)

getgenv().HitboxEnabled = false
getgenv().HitboxTransparency = 0.9
getgenv().HitboxSize = 15
combatSection:addToggle("Hitbox", false, function(value)
    getgenv().HitboxEnabled = value
    venyx:Notify("Hitbox", value and "ON" or "OFF")
end)
combatSection:addSlider("Hitbox Transparency", 0.9, 0, 1, function(value)
    getgenv().HitboxTransparency = value
end)
combatSection:addSlider("Hitbox Size", 15, 5, 50, function(value)
    getgenv().HitboxSize = value
end)
local function isAlive(plr)
    if not plr or not plr.Character then return false end
    local hum = plr.Character:FindFirstChildOfClass("Humanoid")
    if not hum or hum.Health <= 0 then
        return false
    end
    local be = plr.Character:FindFirstChild("BodyEffects")
    if be then
        local ko = be:FindFirstChild("K.O")
        local grabbed = be:FindFirstChild("GRABBING_CONSTRAINT")
        if (ko and ko.Value) or (grabbed and grabbed.Value) then
            return false
        end
    end
    return true
end
local hitEffects = {}
game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    local hum = char:WaitForChild("Humanoid")
    hum.HealthChanged:Connect(function(health)
        if health < hum.MaxHealth then
            local highlight = Instance.new("Highlight")
            highlight.Adornee = char
            highlight.FillTransparency = 1
            highlight.OutlineTransparency = 0
            highlight.OutlineColor = Color3.fromHSV(tick() % 1, 1, 1)
            highlight.Parent = game.CoreGui
            table.insert(hitEffects, highlight)
            task.delay(1, function()
                highlight:Destroy()
            end)
        end
    end)
end)
local VirtualInputManager = game:GetService("VirtualInputManager")
local function click()
    if UIS.TouchEnabled then
        local touchPos = UIS:GetMouseLocation()
        VirtualInputManager:SendTouchEvent(0, Enum.UserInputState.Begin, touchPos)
        task.wait()
        VirtualInputManager:SendTouchEvent(0, Enum.UserInputState.End, touchPos)
    else
        if mouse1press then
            mouse1press()
            mouse1release()
        elseif mouse1click then
            mouse1click()
        end
    end
end
game:GetService("RunService").RenderStepped:Connect(function()
    if getgenv().HitboxEnabled then
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    player.Character.HumanoidRootPart.Size = Vector3.new(getgenv().HitboxSize, getgenv().HitboxSize, getgenv().HitboxSize)
                    player.Character.HumanoidRootPart.Transparency = getgenv().HitboxTransparency
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    player.Character.HumanoidRootPart.Material = "Neon"
                    player.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    else
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    player.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                    player.Character.HumanoidRootPart.Transparency = 1
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                    player.Character.HumanoidRootPart.Material = "Plastic"
                    player.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    end
    if tbEnabled then
        local AimlockTarget = GetNearestTarget()
        local part = GetBestTargetPart(AimlockTarget and AimlockTarget.Character)
        if part then
            task.spawn(function()
                local cap = part
                task.wait(0)
                if tbEnabled and distToCursor(cap) <= fovRadius then
                    local origin = game.Workspace.CurrentCamera.CFrame.Position
                    local direction = (cap.Position - origin)
                    local rayParams = RaycastParams.new()
                    rayParams.FilterType = Enum.RaycastFilterType.Blacklist
                    rayParams.FilterDescendantsInstances = {game.Players.LocalPlayer.Character}
                    local result = game.Workspace:Raycast(origin, direction, rayParams)
                    if not result or result.Instance:IsDescendantOf(cap.Parent) then
                        if UIS.TouchEnabled and not UIS.MouseEnabled then
                            local char = game.Players.LocalPlayer.Character
                            local fired = false
                            if char then
                                for _, tool in ipairs(char:GetChildren()) do
                                    if tool:IsA("Tool") then
                                        pcall(function() tool:Activate() end)
                                        fired = true
                                        break
                                    end
                                end
                            end
                            if not fired then
                                click()
                            end
                        else
                            click()
                        end
                    end
                end
            end)
        end
    end
end)

combatSection:addToggle("Aimlock", true, function(value)
    getgenv().Settings.Main.Enable = value
    venyx:Notify("Aimlock", value and "ON" or "OFF")
end)
combatSection:addKeybind("Target Lock", Enum.KeyCode.Q, function()
    -- the input began for Q
end, function()
    print("Target Lock key changed")
end)
combatSection:addToggle("Desync Resolver", false, function(value)
    getgenv().Settings.Resolver.UnderGround = value
    venyx:Notify("UnderGround Resolver", value and "ON" or "OFF")
end)
combatSection:addToggle("DetectDesync Resolver", true, function(value)
    getgenv().Settings.Resolver.DetectDesync = true
    venyx:Notify("DetectDesync Resolver", value and "ON" or "OFF")
end)
combatSection:addDropdown("Aim Part", {"Head", "HumanoidRootPart", "UpperTorso"}, function(value)
    getgenv().Settings.Part.AimPart = value
end)
combatSection:addToggle("FOV Circle", false, function(value)
    getgenv().Settings.Visual.Fov = value
    venyx:Notify("FOV Circle", value and "ON" or "OFF")
end)
combatSection:addSlider("FOV Radius", 200, 0, 1000, function(value)
    getgenv().Settings.Visual.FovRadius = value
end)
combatSection:addColorPicker("FOV Color", Color3.fromRGB(255, 179, 186), function(color)
    getgenv().Settings.Visual.FovColor = color
end)

-- Page 2: Visual (Icon: Eye, 5012541386)
local visualPage = venyx:addPage("Visual", 5012541386)
local visualSection = visualPage:addSection("Visual Features")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Config lấy từ UI toggle của bạn
local Config = {
    TracerColor = Color3.fromRGB(255, 0, 0),
}

-- === ESP Config ===
_G.FriendColor = Color3.fromRGB(0, 0, 255)
_G.EnemyColor = Color3.fromRGB(255, 0, 0)
_G.UseTeamColor = true

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local ESPEnabled = false
local SkeletonEnabled = false
local NameEnabled = false
local ESPColor = Color3.fromRGB(255, 179, 186)
local SkeletonColor = Color3.fromRGB(255, 255, 255)
local NameColor = Color3.fromRGB(255, 179, 186)

local ESPs = {}
local espGui = Instance.new("ScreenGui")  -- Nếu chưa có, tạo ScreenGui để chứa label/highlight
espGui.Parent = game.CoreGui  -- Hoặc game.Players.LocalPlayer.PlayerGui nếu muốn
espGui.IgnoreGuiInset = true

local function CreateESP(player)
    if ESPs[player] or player == LocalPlayer then return end
    local label = Instance.new("TextLabel")
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 179, 186)
    label.TextSize = 16
    label.Font = Enum.Font.GothamBold
    label.Text = player.DisplayName
    label.TextStrokeTransparency = 0.5
    label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    label.Size = UDim2.new(0, 200, 0, 20)
    label.AnchorPoint = Vector2.new(0.5, 0.5)
    label.Position = UDim2.new(0.5, 0, 0.5, 0)
    label.Visible = false
    label.Parent = espGui

    local highlight = Instance.new("Highlight")
    highlight.Enabled = false
    highlight.FillTransparency = 0.6
    highlight.OutlineTransparency = 0.2
    highlight.FillColor = Color3.fromRGB(255, 179, 186)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.Adornee = player.Character
    highlight.Parent = espGui

    ESPs[player] = { label = label, highlight = highlight }
end

local function RemoveESP(player)
    if ESPs[player] then
        pcall(function()
            ESPs[player].label:Destroy()
            ESPs[player].highlight:Destroy()
        end)
        ESPs[player] = nil
    end
end

local function UpdateESP()
    if not ESPEnabled then  -- Sử dụng ESPEnabled (hoặc NameEnabled nếu riêng)
        for _, v in pairs(ESPs) do
            v.label.Visible = false
            v.highlight.Enabled = false
        end
        return
    end
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local head = player.Character:FindFirstChild("Head")
            if head then
                CreateESP(player)
                local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                local esp = ESPs[player]
                if esp then
                    if onScreen then
                        esp.label.Visible = true
                        esp.label.Position = UDim2.new(0, screenPos.X, 0, screenPos.Y - 20)
                        esp.highlight.Enabled = true
                    else
                        esp.label.Visible = false
                        esp.highlight.Enabled = false
                    end
                end
            else
                RemoveESP(player)
            end
        else
            RemoveESP(player)
        end
    end
end

local skeletonLines = {}  -- Đã có, giữ
local function drawSkeleton(plr, color)
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then return end
    local hum = plr.Character:FindFirstChildOfClass("Humanoid")
    if not hum or hum.Health <= 0 then return end

    local parts = {
        Head = plr.Character:FindFirstChild("Head"),
        Torso = plr.Character:FindFirstChild("UpperTorso") or plr.Character:FindFirstChild("Torso"),
        LeftArm = plr.Character:FindFirstChild("LeftUpperArm") or plr.Character:FindFirstChild("Left Arm"),
        RightArm = plr.Character:FindFirstChild("RightUpperArm") or plr.Character:FindFirstChild("Right Arm"),
        LeftLeg = plr.Character:FindFirstChild("LeftUpperLeg") or plr.Character:FindFirstChild("Left Leg"),
        RightLeg = plr.Character:FindFirstChild("RightUpperLeg") or plr.Character:FindFirstChild("Right Leg")
    }

    local cam = workspace.CurrentCamera
    local function wts(part)
        local vec, vis = cam:WorldToViewportPoint(part.Position)
        return Vector2.new(vec.X, vec.Y), vis
    end

    -- Chỉ update nếu on-screen (giảm lag)
    local rootPos, onScreen = wts(plr.Character.HumanoidRootPart)
    if not onScreen then return end

    local function drawLine(a, b, tag)
        if not a or not b then return end
        local posA, visA = wts(a)
        local posB, visB = wts(b)
        if not visA or not visB then return end

        local line = skeletonLines[tag] or Drawing.new("Line")
        line.Thickness = 2
        line.From = posA
        line.To = posB
        line.Color = color
        line.Visible = true
        skeletonLines[tag] = line  -- Reuse
    end

    drawLine(parts.Head, parts.Torso, plr.Name .. "_neck")
    drawLine(parts.Torso, parts.LeftArm, plr.Name .. "_larm")
    drawLine(parts.Torso, parts.RightArm, plr.Name .. "_rarm")
    drawLine(parts.Torso, parts.LeftLeg, plr.Name .. "_lleg")
    drawLine(parts.Torso, parts.RightLeg, plr.Name .. "_rleg")
end

-- Fix ESP, Name, Skeleton in RenderStepped (remove undefined espHighlight and espName, integrate logic)
RunService.RenderStepped:Connect(function()
    for _, line in pairs(skeletonLines) do
        line.Visible = false
    end

    for _, v in ipairs(Players:GetPlayers()) do
        if v ~= LocalPlayer then
            local color = ESPColor
            if _G.UseTeamColor then
                color = v.TeamColor.Color
            elseif v.Team == LocalPlayer.Team then
                color = _G.FriendColor
            else
                color = _G.EnemyColor
            end

            if ESPEnabled or NameEnabled or SkeletonEnabled then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 then
                    local head = v.Character:FindFirstChild("Head")
                    if head then
                        CreateESP(v)
                        local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                        local esp = ESPs[v]
                        if esp then
                            if onScreen then
                                if ESPEnabled then
                                    esp.highlight.Enabled = true
                                    esp.highlight.FillColor = color
                                    esp.highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                                    esp.highlight.Adornee = v.Character
                                else
                                    esp.highlight.Enabled = false
                                end
                                if NameEnabled then
                                    esp.label.Visible = true
                                    esp.label.Position = UDim2.new(0, screenPos.X, 0, screenPos.Y - 20)
                                    esp.label.TextColor3 = NameColor
                                else
                                    esp.label.Visible = false
                                end
                            else
                                esp.label.Visible = false
                                esp.highlight.Enabled = false
                            end
                        end
                    else
                        RemoveESP(v)
                    end
                else
                    RemoveESP(v)
                end
            end

            if SkeletonEnabled then
                drawSkeleton(v, SkeletonColor)
            end
        end
    end
end)

-- xoá khi player thoát
Players.PlayerRemoving:Connect(function(plr)
    RemoveESP(plr)
end)

-- === UI Buttons ===
visualSection:addToggle("ESP Highlight", false, function(value)
    ESPEnabled = value
    venyx:Notify("ESP Highlight", value and "ON" or "OFF")
    if not value then
        for _, v in ipairs(Players:GetPlayers()) do
            if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("GetReal") then
                v.Character.GetReal:Destroy()
            end
        end
    end
end)
visualSection:addColorPicker("ESP Color", ESPColor, function(color)
    ESPColor = color
end)

visualSection:addToggle("ESP Name", false, function(value)
    NameEnabled = value
    venyx:Notify("ESP Name", value and "ON" or "OFF")
    if not value then
        for _, v in ipairs(Players:GetPlayers()) do
            if v ~= LocalPlayer and v.Character and v.Character.Head:FindFirstChild("ESPName") then
                v.Character.Head.ESPName:Destroy()
            end
        end
    end
end)
visualSection:addColorPicker("Name Color", NameColor, function(color)
    NameColor = color
end)

visualSection:addToggle("Skeleton ESP", false, function(value)
    SkeletonEnabled = value
    venyx:Notify("Skeleton ESP", value and "ON" or "OFF")
    if not value then
        for _, line in pairs(skeletonLines) do line:Remove() end
        skeletonLines = {}
    end
end)
visualSection:addColorPicker("Skeleton Color", SkeletonColor, function(color)
    SkeletonColor = color
end)

local tracerEnabled = false
local tracerColor = Color3.fromRGB(255, 179, 186)
local tracerLines = {}

local function UpdateTracers()
    for _, line in pairs(tracerLines) do
        line:Remove()
    end
    tracerLines = {}
    if not tracerEnabled then return end
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local root = player.Character.HumanoidRootPart
            local screenPos, onScreen = Camera:WorldToViewportPoint(root.Position)
            if onScreen then
                local tracer = Drawing.new("Line")
                tracer.Visible = true
                tracer.Color = tracerColor
                tracer.Thickness = 2
                tracer.Transparency = 1
                tracer.From = screenCenter
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                table.insert(tracerLines, tracer)
            end
        end
    end
end

RunService.RenderStepped:Connect(UpdateTracers)

-- UI for Tracer
visualSection:addToggle("Tracer", false, function(value)
    tracerEnabled = value
    venyx:Notify("Tracer", value and "ON" or "OFF")
end)
visualSection:addColorPicker("Tracer Color", tracerColor, function(color)
    tracerColor = color
end)

-- Page 3: Misc (Icon: Gear, 5012543246)
local miscPage = venyx:addPage("Misc", 5012543246)
local miscSection = miscPage:addSection("Miscellaneous")
local CurrentFOV = 70

miscSection:addSlider("FOV", 70, 70, 120, function(value)
    CurrentFOV = value
    workspace.CurrentCamera.FieldOfView = value
end)

-- khi nhân vật respawn → giữ FOV cũ
game.Players.LocalPlayer.CharacterAdded:Connect(function()
    task.wait(0.5) -- chờ camera load
    workspace.CurrentCamera.FieldOfView = CurrentFOV
end)

-- Time Control
local Lighting = game:GetService("Lighting")
local timeEnabled = false
local currentTime = Lighting.ClockTime

-- Toggle bật/tắt chỉnh giờ
miscSection:addToggle("Custom Time", false, function(value)
    timeEnabled = value
    if value then
        venyx:Notify("Custom Time", "ON")
        Lighting.ClockTime = currentTime
    else
        venyx:Notify("Custom Time", "OFF")
        -- Khi tắt trả lại đồng hồ thật (optional, bạn có thể bỏ)
        Lighting.ClockTime = os.date("*t").hour + (os.date("*t").min / 60)
    end
end)

-- Slider chỉnh thời gian (0h - 24h)
miscSection:addSlider("Set Time", 12, 0, 24, function(value)
    currentTime = value
    if timeEnabled then
        Lighting.ClockTime = value
    end
end)

local Lighting = game:GetService("Lighting")

-- Lưu config sky
local skyConfigs = {
    galaxy = {
        SkyboxBk = "rbxassetid://15938368922",
        SkyboxDn = "rbxassetid://15938369825",
        SkyboxFt = "rbxassetid://15938369052",
        SkyboxLf = "rbxassetid://15938367420",
        SkyboxRt = "rbxassetid://15938366249",
        SkyboxUp = "rbxassetid://15938364248",
        MoonTextureId = "rbxassetid://sky/moon.jpg",
        SunTextureId = "rbxassetid://sky/sun.jpg",
        StarCount = 3000,
        SunAngularSize = 21,
    },
    pinksky = {
        SkyboxBk = "rbxassetid://271072456",
        SkyboxDn = "rbxassetid://271072463",
        SkyboxFt = "rbxassetid://271042510",
        SkyboxLf = "rbxassetid://271042536",
        SkyboxRt = "rbxassetid://271042467",
        SkyboxUp = "rbxassetid://271077958",
        MoonTextureId = "rbxassetid://sky/moon.jpg",
        SunTextureId = "rbxassetid://sky/sun.jpg",
        StarCount = 1334,
        SunAngularSize = 21,
    },
    rainsky = {
        SkyboxBk = "rbxassetid://4495864450",
        SkyboxDn = "rbxassetid://449586487",
        SkyboxFt = "rbxassetid://449586458",
        SkyboxLf = "rbxassetid://4495865035",
        SkyboxRt = "rbxassetid://4495864786",
        SkyboxUp = "rbxassetid://449586476",
        StarCount = 3000,
        SunAngularSize = 1,
    },
    minecraftsky = {
        SkyboxBk = "rbxassetid://873516687",
        SkyboxDn = "rbxassetid://873516707",
        SkyboxFt = "rbxassetid://873521608",
        SkyboxLf = "rbxassetid://873516708",
        SkyboxRt = "rbxassetid://873516751",
        SkyboxUp = "rbxassetid://873516729",
        MoonTextureId = "rbxassetid://sky/moon.jpg",
        SunTextureId = "rbxassetid://sky/sun.jpg",
        StarCount = 3000,
        SunAngularSize = 11,
    },
    summersky = {
        SkyboxBk = "rbxassetid://16648590964",
        SkyboxDn = "rbxassetid://16648617436",
        SkyboxFt = "rbxassetid://16648595424",
        SkyboxLf = "rbxassetid://16648566370",
        SkyboxRt = "rbxassetid://16648577071",
        SkyboxUp = "rbxassetid://16648598180",
        MoonTextureId = "rbxassetid://sky/moon.jpg",
        StarCount = 3000,
        SunAngularSize = 21,
    }
}

local selectedSky = "galaxy"

-- Hàm áp dụng sky
local function applySky(name)
    if Lighting:FindFirstChildOfClass("Sky") then
        Lighting:FindFirstChildOfClass("Sky"):Destroy()
    end
    local sky = Instance.new("Sky")
    sky.Name = name
    for k,v in pairs(skyConfigs[name]) do
        sky[k] = v
    end
    sky.Parent = Lighting
end

-- UI ở trang 3
local skyPage = window:addPage("Sky Settings", 3)

skyPage:addDropdown("Select Sky", {"galaxy","pinksky","rainsky","minecraftsky","summersky"}, function(choice)
    selectedSky = choice
end)

skyPage:addButton("Apply Sky", function()
    applySky(selectedSky)
end)

skyPage:addSlider("Fog End", 500, 5000, Lighting.FogEnd, function(val)
    Lighting.FogEnd = val
end)

skyPage:addColorPicker("Fog Color", Lighting.FogColor, function(color)
    Lighting.FogColor = color
end)

-- 🗨️ Show Chat Toggle
local TextChatService = game:GetService("TextChatService")
local chatWindow = TextChatService:FindFirstChild("ChatWindowConfiguration")

-- Mặc định bật
local ChatEnabled = true
if chatWindow then
    chatWindow.Enabled = ChatEnabled
end

miscSection:addToggle("Show Chat", ChatEnabled, function(state)
    ChatEnabled = state
    if chatWindow then
        chatWindow.Enabled = state
    end
end)

-- Aura Heal setup (add or replace the aura heal section)
-- Thêm vào đầu script (sau local Players = ...)
local HitEffectModule = {
    Locals = {
        HitEffect = {
            Type = {}
        }
    }
}

local Attachment = Instance.new("Attachment")
HitEffectModule.Locals.HitEffect.Type["Skibidi RedRizz"] = Attachment

local MainColor = Color3.fromRGB(255, 179, 186)

local HealingWave1 = Instance.new("ParticleEmitter")
HealingWave1.Name = "Healing Wave 1"
HealingWave1.Lifetime = NumberRange.new(1.5, 1.5)
HealingWave1.SpreadAngle = Vector2.new(10, -10)
HealingWave1.LockedToPart = true
HealingWave1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1702454, 0.7, 0.014881), NumberSequenceKeypoint.new(0.2254601, 0.03125, 0.03125), NumberSequenceKeypoint.new(0.2852761, 0), NumberSequenceKeypoint.new(0.702454, 0), NumberSequenceKeypoint.new(0.8374233, 0.9125, 0.0601461), NumberSequenceKeypoint.new(1, 1)})
HealingWave1.LightEmission = 0.4
HealingWave1.Color = ColorSequence.new(Color3.fromRGB(234, 8, 255))
HealingWave1.VelocitySpread = 10
HealingWave1.Speed = NumberRange.new(3, 6)
HealingWave1.Brightness = 10
HealingWave1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 3.0624998, 1.8805969), NumberSequenceKeypoint.new(0.6420546, 1.9999999, 1.7619393), NumberSequenceKeypoint.new(1, 0.7499999, 0.7499999)})
HealingWave1.Rate = 20
HealingWave1.Texture = "rbxassetid://8047533775"
HealingWave1.RotSpeed = NumberRange.new(200, 400)
HealingWave1.Rotation = NumberRange.new(-180, 180)
HealingWave1.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
HealingWave1.Parent = Attachment

local HealingWave2 = Instance.new("ParticleEmitter")
HealingWave2.Name = "Healing Wave 2"
HealingWave2.Lifetime = NumberRange.new(1.5, 1.5)
HealingWave2.SpreadAngle = Vector2.new(10, -10)
HealingWave2.LockedToPart = true
HealingWave2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.2254601, 0.03125, 0.03125), NumberSequenceKeypoint.new(0.6288344, 0.25625, 0.0593491), NumberSequenceKeypoint.new(0.8374233, 0.9125, 0.0601461), NumberSequenceKeypoint.new(1, 1)})
HealingWave2.LightEmission = 1
HealingWave2.Color = ColorSequence.new(Color3.fromRGB(238, 3, 255))
HealingWave2.VelocitySpread = 10
HealingWave2.Speed = NumberRange.new(3, 5)
HealingWave2.Brightness = 10
HealingWave2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 3.125), NumberSequenceKeypoint.new(0.4165329, 1.3749999, 1.3749999), NumberSequenceKeypoint.new(1, 0.9375, 0.9375)})
HealingWave2.Rate = 20
HealingWave2.Texture = "rbxassetid://8047796070"
HealingWave2.RotSpeed = NumberRange.new(100, 300)
HealingWave2.Rotation = NumberRange.new(-180, 180)
HealingWave2.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
HealingWave2.Parent = Attachment

local Sparks = Instance.new("ParticleEmitter")
Sparks.Name = "Sparks"
Sparks.Lifetime = NumberRange.new(0.5, 2)
Sparks.SpreadAngle = Vector2.new(180, -180)
Sparks.LightEmission = 1
Sparks.Color = ColorSequence.new(Color3.fromRGB(255, 21, 255))
Sparks.Drag = 3
Sparks.VelocitySpread = 180
Sparks.Speed = NumberRange.new(5, 15)
Sparks.Brightness = 10
Sparks.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.14687, 0.4374999, 0.1875001), NumberSequenceKeypoint.new(1, 0)})
Sparks.Acceleration = Vector3.new(0, 3, 0)
Sparks.ZOffset = -1
Sparks.Rate = 40
Sparks.Texture = "rbxassetid://8611887361"
Sparks.RotSpeed = NumberRange.new(-30, 30)
Sparks.Orientation = Enum.ParticleOrientation.VelocityParallel
Sparks.Parent = Attachment

local StarSparks = Instance.new("ParticleEmitter")
StarSparks.Name = "Star Sparks"
StarSparks.Lifetime = NumberRange.new(1.5, 1.5)
StarSparks.SpreadAngle = Vector2.new(180, -180)
StarSparks.LightEmission = 1
StarSparks.Color = ColorSequence.new(Color3.fromRGB(226, 60, 255))
StarSparks.Drag = 3
StarSparks.VelocitySpread = 180
StarSparks.Speed = NumberRange.new(5, 10)
StarSparks.Brightness = 10
StarSparks.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.1492777, 0.6874996, 0.6874996), NumberSequenceKeypoint.new(1, 0)})
StarSparks.Acceleration = Vector3.new(0, 3, 0)
StarSparks.ZOffset = 2
StarSparks.Texture = "rbxassetid://8611887703"
StarSparks.RotSpeed = NumberRange.new(-30, 30)
StarSparks.Rotation = NumberRange.new(-30, 30)
StarSparks.Parent = Attachment

-- Function to spawn aura (attach to LowerTorso and enable/disable)
local function setupAuraHeal(char)
    local lowerTorso = char:WaitForChild("LowerTorso", 5)
    if lowerTorso then
        Attachment.Parent = lowerTorso
    end
end

local AuraHealEnabled = false
local lastHealth = 0

-- Toggle Aura Heal (add to miscSection or appropriate section)
miscSection:addToggle("Aura Heal", false, function(value)
    AuraHealEnabled = value
    venyx:Notify("Aura Heal", value and "ON" or "OFF")
    if value and LocalPlayer.Character then
        setupAuraHeal(LocalPlayer.Character)
    end
    if not value then
        -- Disable when off
        StarSparks.Enabled = false
        Sparks.Enabled = false
        HealingWave1.Enabled = false
        HealingWave2.Enabled = false
        if Attachment.Parent then Attachment.Parent = nil end
    end
end)

miscSection:addColorPicker("Aura Color", Color3.fromRGB((255, 179, 186)), function(color)
    HealingWave1.Color = ColorSequence.new(color)
    HealingWave2.Color = ColorSequence.new(color)
    Sparks.Color = ColorSequence.new(color)
    StarSparks.Color = ColorSequence.new(color)
end)

-- Track health and respawn (add after miscPage definition or appropriate place)
local LocalPlayer = Players.LocalPlayer
local function connectAuraHeal(char)
    if not char then return end
    local hum = char:WaitForChild("Humanoid", 5)
    if not hum then return end
    lastHealth = hum.Health
    hum.HealthChanged:Connect(function(currentHealth)
        if AuraHealEnabled then
            if currentHealth > lastHealth then  -- Healing (apply aura when health increases)
                StarSparks.Enabled = true
                Sparks.Enabled = true
                HealingWave1.Enabled = true
                HealingWave2.Enabled = true
            end
            if currentHealth >= hum.MaxHealth then  -- Full health (remove aura)
                StarSparks.Enabled = false
                Sparks.Enabled = false
                HealingWave1.Enabled = false
                HealingWave2.Enabled = false
            end
            lastHealth = currentHealth
        end
    end)
end

LocalPlayer.CharacterAdded:Connect(function(char)
    if AuraHealEnabled then
        setupAuraHeal(char)
        connectAuraHeal(char)
    end
end)

-- Initial setup if char exists
if LocalPlayer.Character and AuraHealEnabled then
    setupAuraHeal(LocalPlayer.Character)
    connectAuraHeal(LocalPlayer.Character)
end

-- 🌌 Full Goku Aura (giữ Color gốc, cho phép override bằng ColorPicker)
local auraEnabled = false
local auraColor = nil -- nil = dùng màu gốc, còn Color3 = override

local function createEmitter(name, props)
    local e = Instance.new("ParticleEmitter")
    e.Name = name
    for k,v in pairs(props) do
        if k ~= "Color" then -- để xử lý Color riêng
            e[k] = v
        end
    end
    -- xử lý Color: nếu auraColor có giá trị -> override
    if auraColor then
        e.Color = ColorSequence.new(auraColor)
    else
        e.Color = props.Color
    end
    return e
end

-- dữ liệu chuẩn từ aura.rbxmx
local auraConfigs = {
    small = {
        Texture = "rbxassetid://243740013",
        Rate = 10,
        Lifetime = NumberRange.new(2,2),
        Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.01), NumberSequenceKeypoint.new(1,0)}),
        Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0), NumberSequenceKeypoint.new(1,0)}),
        Color = ColorSequence.new(Color3.new(1,1,1)),
        RotSpeed = NumberRange.new(-100,100),
        Speed = NumberRange.new(0.5,0.5),
        SpreadAngle = Vector2.new(7,7),
        ZOffset = 2,
        LightEmission = 0.5,
        LockedToPart = true,
        Enabled = true,
    },
    aura3 = {
        Texture = "rbxassetid://833874434",
        Rate = 30,
        Lifetime = NumberRange.new(1,1),
        Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.9), NumberSequenceKeypoint.new(1,0)}),
        Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0,1),
            NumberSequenceKeypoint.new(0.116564,0.704918),
            NumberSequenceKeypoint.new(0.654908,0.73224),
            NumberSequenceKeypoint.new(1,0)
        }),
        Color = ColorSequence.new(Color3.new(1,1,1)),
        RotSpeed = NumberRange.new(-100,100),
        Speed = NumberRange.new(0.5,0.5),
        ZOffset = -1,
        LightEmission = 0.3,
        LightInfluence = 1,
        LockedToPart = true,
        Enabled = true,
    },
    aura2 = {
        Texture = "rbxassetid://833874434",
        Rate = 50,
        Lifetime = NumberRange.new(1,1),
        Size = NumberSequence.new({NumberSequenceKeypoint.new(0,1), NumberSequenceKeypoint.new(1,0)}),
        Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0,1),
            NumberSequenceKeypoint.new(0.116564,0.704918),
            NumberSequenceKeypoint.new(0.654908,0.73224),
            NumberSequenceKeypoint.new(1,0)
        }),
        Color = ColorSequence.new(Color3.fromRGB(0,85,0), Color3.fromRGB(255,85,0)), -- gốc xanh lá/đỏ cam
        RotSpeed = NumberRange.new(-100,100),
        Speed = NumberRange.new(0.5,0.5),
        ZOffset = -3,
        LightEmission = 0.3,
        LightInfluence = 1,
        LockedToPart = true,
        Enabled = true,
    },
    aura = {
        Texture = "rbxassetid://833874434",
        Rate = 50,
        Lifetime = NumberRange.new(1,1),
        Size = NumberSequence.new({NumberSequenceKeypoint.new(0,1), NumberSequenceKeypoint.new(1,0)}),
        Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0,1),
            NumberSequenceKeypoint.new(0.116564,0.704918),
            NumberSequenceKeypoint.new(0.654908,0.73224),
            NumberSequenceKeypoint.new(1,0)
        }),
        Color = ColorSequence.new(Color3.fromRGB(0,0,170), Color3.fromRGB(255,0,170)), -- gốc xanh dương/tím
        RotSpeed = NumberRange.new(-100,100),
        Speed = NumberRange.new(0.5,0.5),
        ZOffset = -2,
        LightEmission = 0.3,
        LightInfluence = 1,
        LockedToPart = true,
        Enabled = true,
    },
    ParticleEmitter1 = {
        Texture = "http://www.roblox.com/asset/?id=242102147",
        Rate = 100,
        Lifetime = NumberRange.new(0.6,0.6),
        Size = NumberSequence.new({NumberSequenceKeypoint.new(0,1), NumberSequenceKeypoint.new(1,0)}),
        Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0,0.96),
            NumberSequenceKeypoint.new(1,0.96)
        }),
        Color = ColorSequence.new(Color3.fromRGB(195,12,12), Color3.fromRGB(255,200,0)), -- gốc vàng cam
        Speed = NumberRange.new(4,4),
        Rotation = NumberRange.new(3660,3660),
        LightEmission = 4,
        LightInfluence = 4,
        ZOffset = 1,
        Enabled = true,
    },
    ParticleEmitter2 = {
        Texture = "http://www.roblox.com/asset/?id=242102147",
        Rate = 100,
        Lifetime = NumberRange.new(0.6,0.6),
        Size = NumberSequence.new({NumberSequenceKeypoint.new(0,1), NumberSequenceKeypoint.new(1,0)}),
        Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0,0.96),
            NumberSequenceKeypoint.new(1,0.96)
        }),
        Color = ColorSequence.new(Color3.fromRGB(98,200,255), Color3.fromRGB(0,255,180)), -- gốc xanh ngọc
        Speed = NumberRange.new(4,4),
        Rotation = NumberRange.new(3660,3660),
        LightEmission = 4,
        LightInfluence = 4,
        ZOffset = 1,
        Enabled = true,
    },
}

-- attach aura
local function attachAura(char)
    for _, part in ipairs(char:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            for name, props in pairs(auraConfigs) do
                local emitter = createEmitter(name, props)
                emitter.Parent = part
            end
        end
    end
end

-- remove aura
local function removeAura(char)
    for _, part in ipairs(char:GetChildren()) do
        if part:IsA("BasePart") then
            for _, child in ipairs(part:GetChildren()) do
                if child:IsA("ParticleEmitter") and auraConfigs[child.Name] then
                    child:Destroy()
                end
            end
        end
    end
end

-- Toggle
miscSection:addToggle("Goku Aura Infinity", false, function(state)
    auraEnabled = state
    local char = game.Players.LocalPlayer.Character
    if char then
        if auraEnabled then
            attachAura(char)
        else
            removeAura(char)
        end
    end
end)

-- ColorPicker (override màu)
miscSection:addColorPicker("Aura Color", Color3.fromRGB(255,255,0), function(color)
    auraColor = color
    if auraEnabled and game.Players.LocalPlayer.Character then
        removeAura(game.Players.LocalPlayer.Character)
        task.wait()
        attachAura(game.Players.LocalPlayer.Character)
    end
end)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local currentTrack = nil
local jumpHappierEnabled = false
local jumpHappierKey = Enum.KeyCode.C -- mặc định C
local jumpHappierAnim = "http://www.roblox.com/asset/?id=15609995579"

-- Dừng animation
local function stopAnimation()
    if currentTrack then
        currentTrack:Stop()
        currentTrack = nil
    end
end

-- Phát animation
local function playAnimation(animId)
    local char = LocalPlayer.Character
    if not char then return end

    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    -- Nếu đang di chuyển thì không phát
    if hum.MoveDirection.Magnitude > 0 then return end

    -- Ngừng track cũ
    stopAnimation()

    -- Luôn tạo animator mới nếu chưa có (fix sau khi chết)
    local animator = hum:FindFirstChildOfClass("Animator")
    if not animator then
        animator = Instance.new("Animator")
        animator.Parent = hum
    end

    local anim = Instance.new("Animation")
    anim.AnimationId = animId
    local track = animator:LoadAnimation(anim)
    track:Play()
    currentTrack = track
end

-- Khi respawn reset lại
LocalPlayer.CharacterAdded:Connect(function(char)
    currentTrack = nil
    -- auto tạo Animator cho humanoid mới
    task.wait(0.5)
    local hum = char:FindFirstChildOfClass("Humanoid")
    if hum and not hum:FindFirstChildOfClass("Animator") then
        Instance.new("Animator", hum)
    end
end)

-- Dừng nếu di chuyển
RunService.RenderStepped:Connect(function()
    local char = LocalPlayer.Character
    if char and currentTrack then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum and hum.MoveDirection.Magnitude > 0 then
            stopAnimation()
        end
    end
end)

-- Nhấn phím để chơi animation
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if jumpHappierEnabled and input.KeyCode == jumpHappierKey then
        playAnimation(jumpHappierAnim)
    end
end)

-- Toggle UI
miscSection:addToggle("Jump Happier", false, function(state)
    jumpHappierEnabled = state
    if not state then
        stopAnimation()
    end
end)

-- Keybind UI
miscSection:addKeybind("Jump Happier Key", jumpHappierKey, function(newKey)
    jumpHappierKey = newKey
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Config
getgenv().Time = 1
getgenv().RightUpperLegAccessories = {
    {id = 18457575895}, 
}

local korbloxEnabled = true
local addedAccessories = {}
local runServiceConn

-- Ẩn chân và gắn accessories
local function hideRightLegAndAddAccessories(character)
    local rightUpperLeg = character:FindFirstChild("RightUpperLeg")

    if rightUpperLeg then
        rightUpperLeg.Transparency = 1
        local rightLowerLeg = character:FindFirstChild("RightLowerLeg")
        local rightFoot = character:FindFirstChild("RightFoot")
        if rightLowerLeg then rightLowerLeg:Destroy() end
        if rightFoot then rightFoot:Destroy() end

        for _, accessory in ipairs(getgenv().RightUpperLegAccessories) do
            local obj = game:GetObjects("rbxassetid://" .. tostring(accessory.id))[1]
            if obj then
                obj.Parent = game.Workspace
                local handle = obj:FindFirstChild("Handle")
                if handle then
                    handle.CFrame = rightUpperLeg.CFrame
                    local weld = Instance.new("Weld")
                    weld.Part0 = handle
                    weld.Part1 = rightUpperLeg
                    weld.C0 = CFrame.new(0, -0.12, 0)
                    weld.Parent = handle
                    obj.Parent = character
                    table.insert(addedAccessories, obj)
                end
            end
        end
    end
end

-- Khôi phục chân và xoá accessories
local function restoreRightLeg(character)
    local rightUpperLeg = character:FindFirstChild("RightUpperLeg")
    if rightUpperLeg then
        rightUpperLeg.Transparency = 0
    end
    for _, acc in ipairs(addedAccessories) do
        if acc and acc.Parent then
            acc:Destroy()
        end
    end
    addedAccessories = {}
end

-- Apply Korblox animations (liên tục ép lại bằng RunService)
local function applyKorbloxAnimations()
    if runServiceConn then runServiceConn:Disconnect() end
    runServiceConn = RunService.Stepped:Connect(function()
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("Animate") then
            local animate = char.Animate
            animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
            animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=10921242013"
            animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
        end
    end)
end

-- Restore animations (ngắt RunService)
local function restoreAnimations()
    if runServiceConn then
        runServiceConn:Disconnect()
        runServiceConn = nil
    end
    -- Animate sẽ tự revert về default do script gốc của Roblox
end

-- Enable Korblox
local function enableKorblox(character)
    task.wait(getgenv().Time)
    hideRightLegAndAddAccessories(character)
    applyKorbloxAnimations()
end

-- Disable Korblox
local function disableKorblox(character)
    restoreRightLeg(character)
    restoreAnimations()
end

-- Respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    if korbloxEnabled then
        task.wait(1)
        enableKorblox(char)
    else
        disableKorblox(char)
    end
end)

-- Toggle UI
miscSection:addToggle("Korblox", true, function(state)
    korbloxEnabled = state
    local char = LocalPlayer.Character
    if char then
        if korbloxEnabled then
            enableKorblox(char)
        else
            disableKorblox(char)
        end
    end
end)

-- Page 4: Movement (Icon: Specified, 16181398286)
local movementPage = venyx:addPage("Movement", 16181398286)
local movementSection = movementPage:addSection("Movement Features")
Config.SpeedEnabled = false
Config.SpeedAmount = 20
local function UpdateSpeed()
    if Config.SpeedEnabled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local root = game.Players.LocalPlayer.Character.HumanoidRootPart
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        local moveDirection = humanoid.MoveDirection
        local speedAmount = Config.SpeedAmount / 8
        root.CFrame = root.CFrame + moveDirection * speedAmount
    end
end
game:GetService("RunService").RenderStepped:Connect(UpdateSpeed)
movementSection:addToggle("Speed CFrame", false, function(value)
    Config.SpeedEnabled = value
    venyx:Notify("Speed CFrame", value and "ON" or "OFF")
end)
movementSection:addKeybind("Speed Key", Enum.KeyCode.Z, function()
    Config.SpeedEnabled = not Config.SpeedEnabled
    venyx:Notify("Speed CFrame", Config.SpeedEnabled and "ON" or "OFF")
end, function()
    print("Speed key changed")
end)
movementSection:addSlider("Speed CFrame Value", 20, 1, 100, function(value)
    Config.SpeedAmount = value
end)
Config.FlyEnabled = false
Config.FlySpeed = 35
local function UpdateFly(deltaTime)
    if Config.FlyEnabled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local root = game.Players.LocalPlayer.Character.HumanoidRootPart
        local moveDirection = game.Players.LocalPlayer.Character.Humanoid.MoveDirection
        local flySpeed = Config.FlySpeed
        local vertical = game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space) and flySpeed / 8 or game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) and -flySpeed / 8 or 0
        root.CFrame = root.CFrame + moveDirection * deltaTime * flySpeed * 10
        root.CFrame = root.CFrame + Vector3.new(0, vertical, 0)
        root.Velocity = root.Velocity * Vector3.new(1, 0, 1) + Vector3.new(0, 1.9, 0)
    end
end
game:GetService("RunService").RenderStepped:Connect(UpdateFly)
movementSection:addToggle("Fly", false, function(value)
    Config.FlyEnabled = value
    venyx:Notify("Fly", value and "ON" or "OFF")
end)
movementSection:addKeybind("Fly Key", Enum.KeyCode.F, function()
    Config.FlyEnabled = not Config.FlyEnabled
    venyx:Notify("Fly", Config.FlyEnabled and "ON" or "OFF")
end, function()
end)
movementSection:addSlider("Fly Speed", 35, 1, 100, function(value)
    Config.FlySpeed = value
end)
Config.NoSlowdownEnabled = true
-- Logic No Slowdown: Dùng CFrame để di chuyển thay vì WalkSpeed
local function applyNoSlowdown()
    if not Config.NoSlowdownEnabled then return end

    local char = LocalPlayer.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if not (hrp and hum) then return end

    -- Kiểm tra trạng thái giảm tốc (reload, punch, v.v.)
    local bodyEffects = char:FindFirstChild("BodyEffects")
    local isSlowed = false
    if bodyEffects then
        local reload = bodyEffects:FindFirstChild("Reload")
        local movement = bodyEffects:FindFirstChild("Movement")
        -- Kiểm tra trạng thái reload hoặc movement bị giới hạn
        isSlowed = (reload and reload.Value) or (movement and movement.Value < 1)
    end

    -- Nếu đang bị giảm tốc hoặc tốc độ nhỏ hơn bình thường
    if isSlowed or hum.WalkSpeed < 16 then
        local moveDirection = hum.MoveDirection
        if moveDirection.Magnitude > 0 then
            -- Di chuyển nhân vật bằng CFrame với tốc độ tương đương WalkSpeed 16
            local speed = 20 / 60 -- Tốc độ 16 stud/s, chia cho 60 frame/s
            hrp.CFrame = hrp.CFrame + moveDirection * speed
        end
    end
end

-- Chạy logic No Slowdown mỗi frame
local noSlowConnection
if noSlowConnection then noSlowConnection:Disconnect() end
noSlowConnection = RunService.Heartbeat:Connect(applyNoSlowdown)

-- Đảm bảo No Slowdown hoạt động sau khi respawn
LocalPlayer.CharacterAdded:Connect(function(newChar)
    if Config.NoSlowdownEnabled then
        task.wait(0.5) -- Đợi nhân vật load đầy đủ
        applyNoSlowdown()
    end
end)
movementSection:addToggle("No Slowdown", true, function(value)
    Config.NoSlowdownEnabled = value
    venyx:Notify("No Slowdown", value and "ON" or "OFF")
end)

-- Page 5: Settings (Icon: Settings Cog, 5012544103)
local settingsPage = venyx:addPage("Settings", 5012544103)
local settingsSection = settingsPage:addSection("UI Settings")
local configSection = settingsPage:addSection("Config")
local themeSection = settingsPage:addSection("Theme")

-- Toggle GUI keybind
settingsSection:addKeybind("Toggle GUI", Enum.KeyCode.RightShift, function()
    venyx:toggle()
end, function()
    print("Toggle key changed")
end)

-- Watermark (as a toggle with notification)
settingsSection:addToggle("Watermark", false, function(value)
    if value then
        venyx:Notify("Watermark", "nigga.lol - Enabled")
    else
        venyx:Notify("Watermark", "Disabled")
    end
end)

-- Theme editing (color pickers for each theme)
for themeName, defaultColor in pairs(themes) do
    themeSection:addColorPicker(themeName, defaultColor, function(color)
        venyx:setTheme(themeName, color)
    end)
end

-- Config system with dropdown to select saved configs
local savedConfigs = {"default", "config1", "config2"}  -- Example saved configs
local selectedConfig = "default"

configSection:addDropdown("Select Config", savedConfigs, function(value)
    selectedConfig = value
    venyx:Notify("Config", "Selected: " .. value)
end)

configSection:addButton("Load Selected Config", function()
    venyx:Notify("Config", "Loaded: " .. selectedConfig)
end)

configSection:addTextbox("New Config Name", "new_config", function(value)
    table.insert(savedConfigs, value)
    configSection:updateDropdown(configSection:getModule("Select Config"), nil, savedConfigs)
    venyx:Notify("Config", "Saved new: " .. value)
end)

configSection:addButton("Save Current Config", function()
    venyx:Notify("Config", "Saved current settings")
end)

-- Mobile toggle button
if game:GetService("UserInputService").TouchEnabled then
    settingsSection:addButton("Toggle GUI (Mobile)", function()
        venyx:toggle()
    end)
end

getgenv().Settings = {
    Main = {
        Enable = true,
 
        HoldKey = false,
        ToggleKey = true,
 
        UseKeyBoardKey = true,
        KeyBoardKey = Enum.KeyCode.Q,
 
        UseMouseKey = false,
        ThirdPerson = true,
        FirstPerson = true,
 
        AutoPingSets = true,
 
        UseCircleRadius = true,
        DisableOutSideCircle = true,
 
        UseShake = true,
        ShakePower = 1,
 
        CheckForWalls = true
    },
    Check = {
        CheckIfKo = true, -- This Is For Da Hood
        DisableOnTargetDeath = true,
        DisableOnPlayerDeath = true
    },
    Horizontal = {
        PredictMovement = true,
        PredictionVelocity = 0.17221418
    },
    Smooth = {
        Smoothness = true,
        SmoothnessAmount = 1,
        SmoothMethod = Enum.EasingStyle.Circular,
        SmoothMethodV2 = Enum.EasingDirection.InOut
    },
    Part = {
        AimPart = "Head",
        CheckIfJumpedAimPart = "HumanoidRootPart",
        CheckIfJumped = true,
        GetClosestPart = false
    },
    Resolver = {
        UnderGround = false,
        UseUnderGroundKeybind = true,
        UnderGroundKey = Enum.KeyCode.C,
        DetectDesync = true,
        Detection = 75,
 
        UseDetectDesyncKeybind = true,
        DetectDesyncKey = Enum.KeyCode.V,
        SendNotification = true
    },
    Visual = {
        Fov = true,
        FovTransparency = 1,
        FovThickness = 1,
        FovColor = Color3.fromRGB(255, 179, 186),
        FovRadius = 200
    },
    Spoofer = {
        MemorySpoofer = true,
        MemoryTabColor = Color3.fromRGB(211, 88, 33),
        MemoryMost = 85000,
        MemoryLeast = 80000,
 
        PingSpoofer = true,
        PingTabColor = Color3.fromRGB(211, 88, 33),
        PingMost = 2000,
        PingLeast = 1000
    }
}
 
-- // Locals
 
local Players, Uis, RService, Inset, CurrentCamera = 
game:GetService("Players"), 
game:GetService("UserInputService"), 
game:GetService("RunService"),
game:GetService("GuiService"):GetGuiInset().Y,
game:GetService("Workspace").CurrentCamera
 
local Client = Players.LocalPlayer;
 
local Mouse, Camera = Client:GetMouse(), workspace.CurrentCamera
 
local Circle = Drawing.new("Circle")
 
local CF, RNew, Vec3, Vec2 = CFrame.new, Ray.new, Vector3.new, Vector2.new
 
local OldAimPart = getgenv().Settings.Part.AimPart
 
local AimlockTarget, MousePressed, CanNotify = nil, false, false
 
getgenv().UpdateFOV = function()
    if (not Circle) then
        return (Circle)
    end
    Circle.Color = Settings.Visual.FovColor
    Circle.Visible = Settings.Visual.Fov
    Circle.Radius = Settings.Visual.FovRadius
    Circle.Thickness = Settings.Visual.FovThickness
    Circle.Position = Vec2(Mouse.X, Mouse.Y + Inset)
    return (Circle)
end
 
RService.Heartbeat:Connect(UpdateFOV)
 
-- // Functions
 
getgenv().WallCheck = function(destination, ignore)
    local Origin = Camera.CFrame.p
    local CheckRay = RNew(Origin, destination - Origin)
    local Hit = game.workspace:FindPartOnRayWithIgnoreList(CheckRay, ignore)
    return Hit == nil
end
 
getgenv().WTS = function(Object)
    local ObjectVector = Camera:WorldToScreenPoint(Object.Position)
    return Vec2(ObjectVector.X, ObjectVector.Y)
end
 
getgenv().IsOnScreen = function(Object)
    local IsOnScreen = Camera:WorldToScreenPoint(Object.Position)
    return IsOnScreen
end
 
getgenv().FilterObjs = function(Object)
    if string.find(Object.Name, "Gun") then
        return
    end
    if table.find({"Part", "MeshPart", "BasePart"}, Object.ClassName) then
        return true
    end
end
 
getgenv().GetClosestBodyPart = function(character)
    local ClosestDistance = 1 / 0
    local BodyPart = nil
    if (character and character:GetChildren()) then
        for _, x in next, character:GetChildren() do
            if FilterObjs(x) and IsOnScreen(x) then
                local Distance = (WTS(x) - Vec2(Mouse.X, Mouse.Y)).Magnitude
                if (Circle.Radius > Distance and Distance < ClosestDistance) then
                    ClosestDistance = Distance
                    BodyPart = x
                end
            end
        end
    end
    return BodyPart
end
 
getgenv().WorldToViewportPoint = function(P)
    return Camera:WorldToViewportPoint(P)
end
 
getgenv().WorldToScreenPoint = function(P)
    return Camera.WorldToScreenPoint(Camera, P)
end
 
getgenv().GetObscuringObjects = function(T)
    if T and T:FindFirstChild(getgenv().Settings.Part.AimPart) and Client and Client.Character:FindFirstChild("Head") then
        local RayPos =
            workspace:FindPartOnRay(RNew(T[getgenv().Settings.Part.AimPart].Position, Client.Character.Head.Position))
        if RayPos then
            return RayPos:IsDescendantOf(T)
        end
    end
end
 
getgenv().GetNearestTarget = function()
    local AimlockTarget, Closest = nil, 1 / 0
 
    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) then
            local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
            local Distance = (Vec2(Position.X, Position.Y) - Vec2(Mouse.X, Mouse.Y)).Magnitude
            if Settings.Main.CheckForWalls then
                if
                    (Circle.Radius > Distance and Distance < Closest and OnScreen and
                        getgenv().WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}))
                 then
                    Closest = Distance
                    AimlockTarget = v
                end
            elseif Settings.Main.UseCircleRadius then
                if
                    (Circle.Radius > Distance and Distance < Closest and OnScreen and
                        getgenv().WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}))
                 then
                    Closest = Distance
                    AimlockTarget = v
                end
            else
                if (Circle.Radius > Distance and Distance < Closest and OnScreen) then
                    Closest = Distance
                    AimlockTarget = v
                end
            end
        end
    end
    return AimlockTarget
end
 
-- // Use KeyBoardKey Function
 
Uis.InputBegan:connect(
    function(input)
        if
            input.KeyCode == Settings.Main.KeyBoardKey and Settings.Main.UseKeyBoardKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget == nil and
                getgenv().Settings.Main.HoldKey == true
         then
            pcall(
                function()
                    MousePressed = true
                    AimlockTarget = GetNearestTarget()
                end
            )
        end
    end
)Uis.InputEnded:connect(
    function(input)
        if
            input.KeyCode == Settings.Main.KeyBoardKey and getgenv().Settings.Main.HoldKey == true and
                Settings.Main.UseKeyBoardKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget ~= nil
         then
            AimlockTarget = nil
            MousePressed = false
        end
    end
)

 
Uis.InputBegan:Connect(
    function(keyinput, stupid)
        if
            keyinput.KeyCode == Settings.Main.KeyBoardKey and Settings.Main.UseKeyBoardKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget == nil and
                getgenv().Settings.Main.ToggleKey == true
         then
            pcall(
                function()
                    MousePressed = true
                    AimlockTarget = GetNearestTarget()
                end
            )
        elseif
            keyinput.KeyCode == Settings.Main.KeyBoardKey and Settings.Main.UseKeyBoardKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget ~= nil
         then
            AimlockTarget = nil
            MousePressed = false
        end
    end
)
 
-- // Use MouseKey Function
 
Uis.InputBegan:connect(
    function(input)
        if
            input.UserInputType == Settings.Main.MouseKey and Settings.Main.UseMouseKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget == nil and
                getgenv().Settings.Main.HoldKey == true
         then
            pcall(
                function()
                    MousePressed = true
                    AimlockTarget = GetNearestTarget()
                end
            )
        end
    end
)Uis.InputEnded:connect(
    function(input)
        if
            input.UserInputType == Settings.Main.MouseKey and getgenv().Settings.Main.HoldKey == true and
                Settings.Main.UseMouseKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget ~= nil
         then
            AimlockTarget = nil
            MousePressed = false
        end
    end
)
 
Uis.InputBegan:Connect(
    function(keyinput, stupid)
        if
            keyinput.UserInputType == Settings.Main.MouseKey and Settings.Main.UseMouseKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget == nil and
                getgenv().Settings.Main.ToggleKey == true
         then
            pcall(
                function()
                    MousePressed = true
                    AimlockTarget = GetNearestTarget()
                end
            )
        elseif
            keyinput.UserInputType == Settings.Main.MouseKey and Settings.Main.UseMouseKey == true and
                getgenv().Settings.Main.Enable == true and
                AimlockTarget ~= nil
         then
            AimlockTarget = nil
            MousePressed = false
        end
    end
)
 
-- // Main Functions. RunService HeartBeat.
 
task.spawn(
    function()
        while task.wait() do
            if MousePressed == true and getgenv().Settings.Main.Enable == true then
                if AimlockTarget and AimlockTarget.Character then
                    if getgenv().Settings.Part.GetClosestPart == true then
                        getgenv().Settings.Part.AimPart = tostring(GetClosestBodyPart(AimlockTarget.Character))
                    end
                end
                if getgenv().Settings.Main.DisableOutSideCircle == true and AimlockTarget and AimlockTarget.Character then
                    if
                        Circle.Radius <
                            (Vec2(
                                Camera:WorldToScreenPoint(AimlockTarget.Character.HumanoidRootPart.Position).X,
                                Camera:WorldToScreenPoint(AimlockTarget.Character.HumanoidRootPart.Position).Y
                            ) - Vec2(Mouse.X, Mouse.Y)).Magnitude
                     then
                        AimlockTarget = nil
                    end
                end
            end
        end
    end
)
 
RService.Heartbeat:Connect(
    function()
        if getgenv().Settings.Main.Enable == true and MousePressed == true then
            if getgenv().Settings.Main.UseShake == true and AimlockTarget and AimlockTarget.Character then
                pcall(
                    function()
                        local TargetVelv1 = AimlockTarget.Character[getgenv().Settings.Part.AimPart]
                        TargetVelv1.Velocity =
                            Vec3(TargetVelv1.Velocity.X, TargetVelv1.Velocity.Y, TargetVelv1.Velocity.Z) +
                            Vec3(
                                math.random(-getgenv().Settings.Main.ShakePower, getgenv().Settings.Main.ShakePower),
                                math.random(-getgenv().Settings.Main.ShakePower, getgenv().Settings.Main.ShakePower),
                                math.random(-getgenv().Settings.Main.ShakePower, getgenv().Settings.Main.ShakePower)
                            ) *
                                0.1
                        TargetVelv1.AssemblyLinearVelocity =
                            Vec3(TargetVelv1.Velocity.X, TargetVelv1.Velocity.Y, TargetVelv1.Velocity.Z) +
                            Vec3(
                                math.random(-getgenv().Settings.Main.ShakePower, getgenv().Settings.Main.ShakePower),
                                math.random(-getgenv().Settings.Main.ShakePower, getgenv().Settings.Main.ShakePower),
                                math.random(-getgenv().Settings.Main.ShakePower, getgenv().Settings.Main.ShakePower)
                            ) *
                                0.1
                    end
                )
            end
            if getgenv().Settings.Resolver.UnderGround == true and AimlockTarget and AimlockTarget.Character then
                pcall(
                    function()
                        local TargetVelv2 = AimlockTarget.Character[getgenv().Settings.Part.AimPart]
                        TargetVelv2.Velocity = Vec3(TargetVelv2.Velocity.X, 0, TargetVelv2.Velocity.Z)
                        TargetVelv2.AssemblyLinearVelocity = Vec3(TargetVelv2.Velocity.X, 0, TargetVelv2.Velocity.Z)
                    end
                )
            end
            if
                getgenv().Settings.Resolver.DetectDesync == true and AimlockTarget and AimlockTarget.Character and
                    AimlockTarget.Character:WaitForChild("HumanoidRootPart").Velocity.magnitude >
                        getgenv().Settings.Resolver.Detection
             then
                pcall(
                    function()
                        local TargetVel = AimlockTarget.Character[getgenv().Settings.Part.AimPart]
                        TargetVel.Velocity = Vec3(0, 0, 0)
                        TargetVel.AssemblyLinearVelocity = Vec3(0, 0, 0)
                    end
                )
            end
            if getgenv().Settings.Main.ThirdPerson == true and getgenv().Settings.Main.FirstPerson == true then
                if
                    (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 or
                        (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1
                 then
                    CanNotify = true
                else
                    CanNotify = false
                end
            elseif getgenv().Settings.Main.ThirdPerson == true and getgenv().Settings.Main.FirstPerson == false then
                if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 then
                    CanNotify = true
                else
                    CanNotify = false
                end
            elseif getgenv().Settings.Main.ThirdPerson == false and getgenv().Settings.Main.FirstPerson == true then
                if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then
                    CanNotify = true
                else
                    CanNotify = false
                end
            end
            if getgenv().Settings.Main.AutoPingSets == true and getgenv().Settings.Horizontal.PredictionVelocity then
                local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                local split = string.split(pingvalue, "(")
                local ping = tonumber(split[1])
                if ping > 190 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.206547
                elseif ping > 180 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.19284
                elseif ping > 170 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.1923111
                elseif ping > 160 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.1823111
                elseif ping > 150 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.171
                elseif ping > 140 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.165773
                elseif ping > 130 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.1223333
                elseif ping > 120 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.143765
                elseif ping > 110 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.1455
                elseif ping > 100 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.130340
                elseif ping > 90 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.136
                elseif ping > 80 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.1347
                elseif ping > 70 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.119
                elseif ping > 60 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.12731
                elseif ping > 50 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.127668
                elseif ping > 40 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.125
                elseif ping > 30 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.11
                elseif ping > 20 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.12588
                elseif ping > 10 then
                    getgenv().Settings.Horizontal.PredictionVelocity = 0.9
                end
            end
            if getgenv().Settings.Check.CheckIfKo == true and AimlockTarget and AimlockTarget.Character then
                local KOd = AimlockTarget.Character:WaitForChild("BodyEffects")["K.O"].Value
                local Grabbed = AimlockTarget.Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
                if AimlockTarget.Character.Humanoid.health < 1 or KOd or Grabbed then
                    if MousePressed == true then
                        AimlockTarget = nil
                        MousePressed = false
                    end
                end
            end
            if
                getgenv().Settings.Check.DisableOnTargetDeath == true and AimlockTarget and
                    AimlockTarget.Character:FindFirstChild("Humanoid")
             then
                if AimlockTarget.Character.Humanoid.health < 1 then
                    if MousePressed == true then
                        AimlockTarget = nil
                        MousePressed = false
                    end
                end
            end
            if
                getgenv().Settings.Check.DisableOnPlayerDeath == true and Client.Character and
                    Client.Character:FindFirstChild("Humanoid") and
                    Client.Character.Humanoid.health < 1
             then
                if MousePressed == true then
                    AimlockTarget = nil
                    MousePressed = false
                end
            end
            if getgenv().Settings.Part.CheckIfJumped == true and getgenv().Settings.Part.GetClosestPart == false then
                if AimlockTarget and AimlockTarget.Character then
                    if AimlockTarget.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                        getgenv().Settings.Part.AimPart = getgenv().Settings.Part.CheckIfJumpedAimPart
                    else
                        getgenv().Settings.Part.AimPart = OldAimPart
                    end
                end
            end
            if
                AimlockTarget and AimlockTarget.Character and
                    AimlockTarget.Character:FindFirstChild(getgenv().Settings.Part.AimPart)
             then
                if getgenv().Settings.Main.FirstPerson == true then
                    if CanNotify == true then
                        if getgenv().Settings.Horizontal.PredictMovement == true then
                            if getgenv().Settings.Smooth.Smoothness == true then
                                local Main =
                                    CF(
                                    Camera.CFrame.p,
                                    AimlockTarget.Character[getgenv().Settings.Part.AimPart].Position +
                                        AimlockTarget.Character[getgenv().Settings.Part.AimPart].Velocity *
                                            getgenv().Settings.Horizontal.PredictionVelocity
                                )
 
                                Camera.CFrame =
                                    Camera.CFrame:Lerp(
                                    Main,
                                    getgenv().Settings.Smooth.SmoothnessAmount,
                                    Enum.EasingStyle.Elastic,
                                    Enum.EasingDirection.InOut
                                )
                            else
                                Camera.CFrame =
                                    CF(
                                    Camera.CFrame.p,
                                    AimlockTarget.Character[getgenv().Settings.Part.AimPart].Position +
                                        AimlockTarget.Character[getgenv().Settings.Part.AimPart].Velocity *
                                            getgenv().Settings.Horizontal.PredictionVelocity + Vector3
                                )
                            end
                        elseif getgenv().Settings.Horizontal.PredictMovement == false then
                            if getgenv().Settings.Smooth.Smoothness == true then
                                local Main =
                                    CF(
                                    Camera.CFrame.p,
                                    AimlockTarget.Character[getgenv().Settings.Part.AimPart].Position
                                )
                                Camera.CFrame =
                                    Camera.CFrame:Lerp(
                                    Main,
                                    getgenv().Settings.Smooth.SmoothnessAmount,
                                    getgenv().Settings.Smooth.SmoothMethod,
                                    getgenv().Settings.Smooth.SmoothMethodV2
                                )
                            else
                                Camera.CFrame =
                                    CF(
                                    Camera.CFrame.p,
                                    AimlockTarget.Character[getgenv().Settings.Part.AimPart].Position
                                )
                            end
                        end
                    end
                end
            end
        end
    end
)
 
-- IK THIS IS SHITTY BRUH
 
local PerformanceStats = game:GetService("CoreGui"):WaitForChild("RobloxGui"):WaitForChild("PerformanceStats")
 
local MemLabel
local color,
    color1,
    color2,
    color3,
    color4,
    color5,
    color6,
    color7,
    color8,
    color9,
    color10,
    color11,
    color12,
    color13,
    color14,
    color15,
    color16,
    color17,
    color18,
    color19
for I, Child in next, PerformanceStats:GetChildren() do
    if Child.StatsMiniTextPanelClass.TitleLabel.Text == "Mem" then
        MemLabel = Child.StatsMiniTextPanelClass.ValueLabel
        color = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_0
        color1 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_1
        color2 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_2
        color3 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_3
        color4 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_4
        color5 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_5
        color6 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_6
        color7 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_7
        color8 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_8
        color9 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_9
        color10 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_10
        color11 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_11
        color12 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_12
        color13 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_13
        color14 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_14
        color15 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_15
        color16 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_16
        color17 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_17
        color18 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_18
        color19 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_19
        break
    end
end
MemLabel:GetPropertyChangedSignal("Text"):Connect(
    function()
        if Settings.Spoofer.MemorySpoofer == true then
            MemLabel.Text = math.random(Settings.Spoofer.MemoryLeast, Settings.Spoofer.MemoryMost) / 100 .. " MB"
            color.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color1.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color2.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color3.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color4.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color5.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color6.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color7.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color8.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color9.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color10.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color11.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color12.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color13.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color14.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color15.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color16.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color17.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color18.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
            color19.BackgroundColor3 = Settings.Spoofer.MemoryTabColor
        end
    end
)
 
local PingLabel
for I, Child in next, PerformanceStats:GetChildren() do
    if Child.StatsMiniTextPanelClass.TitleLabel.Text == "Ping" then
        PingLabel = Child.StatsMiniTextPanelClass.ValueLabel
        color = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_0
        color1 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_1
        color2 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_2
        color3 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_3
        color4 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_4
        color5 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_5
        color6 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_6
        color7 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_7
        color8 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_8
        color9 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_9
        color10 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_10
        color11 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_11
        color12 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_12
        color13 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_13
        color14 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_14
        color15 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_15
        color16 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_16
        color17 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_17
        color18 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_18
        color19 = Child.PS_AnnotatedGraph.PS_BarFrame.Bar_19
        break
    end
end
PingLabel:GetPropertyChangedSignal("Text"):Connect(
    function()
        if Settings.Spoofer.PingSpoofer == true then
            local textrandom = math.random(Settings.Spoofer.PingLeast, Settings.Spoofer.PingMost) / 100
            PingLabel.Text = textrandom .. " ms"
            color.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color1.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color2.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color3.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color4.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color5.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color6.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color7.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color8.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color9.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color10.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color11.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color12.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color13.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color14.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color15.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color16.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color17.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color18.BackgroundColor3 = Settings.Spoofer.PingTabColor
            color19.BackgroundColor3 = Settings.Spoofer.PingTabColor
            if game.PlaceId == 9825515356 then
                game:GetService("ReplicatedStorage").MainEvent:FireServer("GetPing", textrandom)
            end
        end
    end
)

-- Select first page on load
venyx:SelectPage(venyx.pages[1], true)
