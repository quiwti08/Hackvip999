-- Services
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local localplayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- Configuration
local ESP_ENABLED = false
local SHOOT_OFFSET = 2.8
local OFFSET_TO_PING_MULT = 1
local UPDATE_INTERVAL = 0.5
local RANDOM_DELAY = 0.1
local MAX_COIN_DISTANCE = 100
local ANTI_CHEAT_DELAY = 0.05

-- Variables
local playerData = {}
local espActive = ESP_ENABLED
local lastUpdate = tick()
local autoFarm = false
local lastShot = tick()
local isScriptRunning = false

-- ESP Container
local espcontainer = {
    objects = {},
    Add = function(self, object, config)
        if not espActive then return end
        pcall(function()
            if self.objects[object] then
                self.objects[object].highlight:Destroy()
                self.objects[object] = nil
            end
            local highlight = Instance.new("Highlight")
            highlight.Parent = object
            highlight.FillColor = config.AccentColor
            highlight.OutlineColor = config.AccentColor
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            self.objects[object] = { highlight = highlight }
            if config.ShowLabel then
                local billboard = Instance.new("BillboardGui")
                billboard.Parent = object
                billboard.Size = UDim2.new(0, 100, 0, 30)
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.AlwaysOnTop = true
                local textLabel = Instance.new("TextLabel")
                textLabel.Parent = billboard
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.Text = config.LabelText
                textLabel.TextColor3 = config.AccentColor
                textLabel.TextScaled = true
            end
        end)
    end,
    RemoveGroup = function(self, groupName)
        for object, data in pairs(self.objects) do
            if data.group == groupName then
                pcall(function()
                    data.highlight:Destroy()
                    if data.billboard then data.billboard:Destroy() end
                end)
                self.objects[object] = nil
            end
        end
    end,
    ClearAllGroups = function(self)
        for object, data in pairs(self.objects) do
            pcall(function()
                data.highlight:Destroy()
                if data.billboard then data.billboard:Destroy() end
            end)
        end
        self.objects = {}
    end
}

-- Game checks
local function isMurderMystery2()
    return ReplicatedStorage:FindFirstChild("Remotes") 
        and ReplicatedStorage.Remotes:FindFirstChild("Gameplay")
end

local function getMap()
    for _, o in ipairs(Workspace:GetChildren()) do
        if o:GetAttribute("MapID") and o:FindFirstChild("CoinContainer") and o:FindFirstChild("Spawns") then
            return o
        end
    end
    return nil
end

-- Role detection
local function findMurderer()
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Murderer" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character then
            if plr.Backpack:FindFirstChild("Knife") or (plr.Character and plr.Character:FindFirstChild("Knife")) then
                return plr
            end
        end
    end
    return nil
end

local function findSheriff()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local function findSheriffThatsNotMe()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" and Players:FindFirstChild(player) ~= localplayer then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

-- ESP functions
local function reloadESP()
    if not espActive then return end
    espcontainer:RemoveGroup("players")
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= localplayer then
            task.spawn(function()
                if player == findMurderer() then
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(1, 0, 0.0156863),
                        ArrowShow = true,
                        ArrowMinDistance = 999999,
                        ArrowSize = UDim2.new(0, 40, 0, 40),
                        LabelText = "Murderer",
                        ShowLabel = true,
                        GroupName = "players"
                    })
                elseif player == findSheriff() then
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(0, 0.6, 1),
                        ArrowShow = false,
                        ShowLabel = false,
                        GroupName = "players"
                    })
                else
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(0, 1, 0.0313725),
                        ArrowShow = false,
                        ShowLabel = false,
                        GroupName = "players"
                    })
                end
            end)
        end
    end
end

-- Predicted position
local function getPredictedPosition(player, shootOffset)
    local success, result = pcall(function()
        if not player.Character then
            return Vector3.new(0, 0, 0)
        end
        local playerHRP = player.Character:FindFirstChild("UpperTorso")
        local playerHum = player.Character:FindFirstChild("Humanoid")
        if not playerHRP or not playerHum then
            return Vector3.new(0, 0, 0)
        end
        local playerPosition = playerHRP.Position
        local velocity = playerHRP.AssemblyLinearVelocity
        local playerMoveDirection = playerHum.MoveDirection
        local predictedPosition = playerPosition + (velocity * Vector3.new(0, 0.5, 0)) * (shootOffset / 15) + playerMoveDirection * shootOffset
        predictedPosition = predictedPosition * (((localplayer:GetNetworkPing() * 1000) * ((OFFSET_TO_PING_MULT - 1) * 0.01)) + 1)
        return predictedPosition
    end)
    if not success then
        return Vector3.new(0, 0, 0)
    end
    return result
end

-- Shoot Murderer
local function shootMurderer()
    if tick() - lastShot < 0.5 then return end 
    lastShot = tick()
    if findSheriff() ~= localplayer then
        return
    end
    local murderer = findMurderer() or findSheriffThatsNotMe()
    if not murderer then
        return
    end
    if not localplayer.Character:FindFirstChild("Gun") then
        local hum = localplayer.Character:FindFirstChild("Humanoid")
        if localplayer.Backpack:FindFirstChild("Gun") then
            hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
            task.wait(math.random(0.05, 0.1) + ANTI_CHEAT_DELAY)
        else
            return
        end
    end
    local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
    if not murdererHRP then
        return
    end
    local predictedPosition = getPredictedPosition(murderer, SHOOT_OFFSET)
    if predictedPosition == Vector3.new(0, 0, 0) then return end
    local args = {
        [1] = 1,
        [2] = predictedPosition,
        [3] = "AH2"
    }
    pcall(function()
        localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
    end)
    task.wait(math.random(0, ANTI_CHEAT_DELAY))
end

-- AutoFarm Coins
local function autoFarmCoins()
    local k = TweenService
    local g = Players.LocalPlayer
    local r = g.Character or g.CharacterAdded:Wait()
    local A = r:WaitForChild("HumanoidRootPart", 5)
    local a = r:WaitForChild("Humanoid", 5)
    if not A or not a then
        return
    end
    local function findMap()
        for _, E in ipairs(Workspace:GetChildren()) do
            if E:GetAttribute("MapID") and E:FindFirstChild("CoinContainer") then
                return E
            end
        end
        task.wait(0.5)
        return nil
    end
    local function findCoin()
        local C = findMap()
        if not C or not C:FindFirstChild("CoinContainer") then return nil end
        local D, i = nil, math.huge
        for _, l in ipairs(C.CoinContainer:GetChildren()) do
            local q = l:FindFirstChild("CoinVisual")
            if q and not q:GetAttribute("Collected") and l.Parent then
                local dist = (A.Position - l.Position).Magnitude
                if dist < i and dist < MAX_COIN_DISTANCE then
                    D = l
                    i = dist
                end
            end
        end
        return D
    end
    local function moveToCoin(B)
        if not B or not B.Parent then return end
        a:ChangeState(11)
        local t = (A.Position - B.Position).Magnitude
        if t > MAX_COIN_DISTANCE then return end
        local offset = Vector3.new(math.random(-5, 5)/10, 0, math.random(-5, 5)/10)
        local f = k:Create(A, TweenInfo.new(t / 25, Enum.EasingStyle.Linear), {CFrame = B.CFrame * CFrame.Angles(0, math.rad(math.random(-10, 10)), 0) + offset})
        f:Play()
        f.Completed:Wait()
    end
    while autoFarm do
        local z = findCoin()
        if z then
            moveToCoin(z)
            local h = z:FindFirstChild("CoinVisual")
            while h and not h:GetAttribute("Collected") and h.Parent and autoFarm do
                local x = findCoin()
                if x and x ~= z then
                    break
                end
                task.wait(0.1 + math.random(0, ANTI_CHEAT_DELAY))
            end
        end
        task.wait(math.random(0.1, 0.3))
    end
end

-- Auto-Shoot when Sheriff and Autofarm is Active
local function checkLineOfSight(startPos, endPos)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {localplayer.Character, Workspace:FindFirstChild("CoinContainer")}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.IgnoreWater = true
    local raycastResult = Workspace:Raycast(startPos, (endPos - startPos).Unit * (endPos - startPos).Magnitude, raycastParams)
    return not raycastResult or raycastResult.Instance:IsDescendantOf(findMurderer().Character)
end

-- Thêm biến để giới hạn tần suất killAll
local lastKillAll = tick()

-- Auto-Shoot khi là Sheriff và Auto-Kill khi là Murderer trong AutoFarm
RunService.Heartbeat:Connect(function()
    if not autoFarm or not isScriptRunning then return end
    
    -- Kiểm tra Sheriff
    if findSheriff() == localplayer then
        local murderer = findMurderer()
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") and localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart") then
            local startPos = localplayer.Character.HumanoidRootPart.Position
            local endPos = murderer.Character.HumanoidRootPart.Position
            if checkLineOfSight(startPos, endPos) then
                task.spawn(shootMurderer)
            end
        end
    end
    
    -- Kiểm tra Murderer và gọi killAll
    if findMurderer() == localplayer and tick() - lastKillAll >= 1 then
        lastKillAll = tick()
        if not localplayer.Character:FindFirstChild("Knife") then
            local hum = localplayer.Character:FindFirstChild("Humanoid")
            if localplayer.Backpack:FindFirstChild("Knife") then
                hum:EquipTool(localplayer.Backpack:FindFirstChild("Knife"))
                task.wait(0.1)
            else
                fu.notification("You don't have the knife..?")
                return
            end
        end

        for _, player in ipairs(game.Players:GetPlayers()) do
            if player ~= localplayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPart = player.Character:FindFirstChild("HumanoidRootPart")
                targetPart.Anchored = true
                targetPart.CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 1
                task.wait(0.05)
            end
        end

        local args = { [1] = "Slash" }
        localplayer.Character.Knife.Stab:FireServer(unpack(args))
        task.wait(0.1)
        for _, player in ipairs(game.Players:GetPlayers()) do
            if player ~= localplayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character:FindFirstChild("HumanoidRootPart").Anchored = false
            end
        end
        fu.notification("Auto Kill All executed.")
    end
end)

function miniFling(playerToFling)
    local Character = localplayer.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = playerToFling.Character
    local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter and TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter and TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")

    if not Character or not Humanoid or not RootPart or not TCharacter then
        fu.notification("Không tìm thấy nhân vật hợp lệ của bạn hoặc mục tiêu.")
        return
    end

    if not TRootPart and not THead and not Handle then
        fu.notification("Không tìm thấy bộ phận hợp lệ để fling.")
        return
    end

    if THumanoid and THumanoid.Sit then
        fu.notification("Mục tiêu đang ngồi, không thể fling.")
        return
    end

    -- Lưu vị trí gốc
    if RootPart.Velocity.Magnitude < 50 then
        getgenv().OldPos = RootPart.CFrame
    end

    -- Chuyển camera tới mục tiêu
    if THead then
        workspace.CurrentCamera.CameraSubject = THead
    elseif Handle then
        workspace.CurrentCamera.CameraSubject = Handle
    elseif THumanoid then
        workspace.CurrentCamera.CameraSubject = THumanoid
    end

    -- Hàm di chuyển và fling
    local function FPos(BasePart, Pos, Ang)
        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
        Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
        RootPart.Velocity = Vector3.new(9e7, 9e7, 9e7)
        RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
    end

    -- Hàm thực hiện fling
    local function SFBasePart(BasePart)
        local TimeToWait = 2
        local Time = tick()
        local Angle = 0

        repeat
            if RootPart and THumanoid and BasePart and BasePart.Parent and Humanoid.Health > 0 then
                if BasePart.Velocity.Magnitude < 50 then
                    Angle = Angle + 100
                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                else
                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                    task.wait()
                end
            else
                break
            end
        until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TCharacter or not TCharacter.Parent or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
    end

    -- Vô hiệu hóa FallenPartsDestroyHeight
    workspace.FallenPartsDestroyHeight = 0/0

    -- Tạo BodyVelocity để tăng lực fling
    local BV = Instance.new("BodyVelocity")
    BV.Name = "FlingVelocity"
    BV.Parent = RootPart
    BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

    -- Vô hiệu hóa trạng thái ngồi
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

    -- Chọn bộ phận để fling
    if TRootPart and THead and (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
        SFBasePart(THead)
    elseif TRootPart then
        SFBasePart(TRootPart)
    elseif THead then
        SFBasePart(THead)
    elseif Handle then
        SFBasePart(Handle)
    else
        fu.notification("Không tìm thấy bộ phận hợp lệ để fling.")
    end

    -- Dọn dẹp
    BV:Destroy()
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    workspace.CurrentCamera.CameraSubject = Humanoid

    -- Trở về vị trí gốc
    if getgenv().OldPos then
        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, 0.5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, 0.5, 0))
            Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
            for _, part in ipairs(Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Velocity = Vector3.new(0, 0, 0)
                    part.RotVelocity = Vector3.new(0, 0, 0)
                end
            end
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
    end
    workspace.FallenPartsDestroyHeight = getgenv().FPDH or -500
    fu.notification("Đã fling " .. playerToFling.Name)
end

-- Event connections
Workspace.ChildAdded:Connect(function(ch)
    if ch == getMap() and espActive then
        task.spawn(function()
            task.wait(math.random(1, 2))
            if findMurderer() then
                reloadESP()
            end
        end)
    end
end)

Workspace.ChildRemoved:Connect(function(ch)
    if ch == getMap() and espActive then
        playerData = {}
        espcontainer:ClearAllGroups()
    end
end)

localplayer.CharacterAdded:Connect(function()
    task.wait(math.random(0.5, 1.5))
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
    if espActive then
        reloadESP()
    end
end)

Players.PlayerAdded:Connect(function(player)
    if player ~= localplayer then
        player.CharacterAdded:Connect(function()
            if espActive then
                task.wait(math.random(0.5, 1.5))
                reloadESP()
            end
        end)
    end
end)

Players.PlayerRemoving:Connect(function()
    if espActive then
        task.wait(math.random(0.5, 1.5))
        reloadESP()
    end
end)

--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalizationService = game:GetService("LocalizationService")
local LocalPlayer = Players.LocalPlayer

--// GUI Setup
local playerGui = LocalPlayer:WaitForChild("PlayerGui")
local gui = Instance.new("ScreenGui")
gui.Name = "zX9qW2"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = playerGui

--========================
-- Helpers
--========================
local function attachButtonEffects(btn, shrinkPx)
    local orig = btn.Size
    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(70,70,70)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(55,55,55)}):Play()
    end)
    btn.MouseButton1Click:Connect(function()
        local s = shrinkPx or 3
        local toSmall = UDim2.new(orig.X.Scale, math.max(0, orig.X.Offset - s), orig.Y.Scale, math.max(0, orig.Y.Offset - s))
        local t1 = TweenService:Create(btn, TweenInfo.new(0.08), {Size = toSmall})
        local t2 = TweenService:Create(btn, TweenInfo.new(0.08), {Size = orig})
        t1:Play(); t1.Completed:Wait(); t2:Play()
    end)
end

local function makeSmoothDraggable(frame, speed)
    speed = speed or 0.2
    local dragging, dragInput, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        local goal = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        TweenService:Create(frame, TweenInfo.new(speed, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = goal}):Play()
    end
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then update(input) end
    end)
end

--// Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

--// Helpers
local function makeSmoothDraggable(frame, speed)
    speed = speed or 0.2
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        local goal = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        TweenService:Create(frame, TweenInfo.new(speed, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = goal}):Play()
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

--// GUI Setup
local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local gui = Instance.new("ScreenGui")
gui.Name = "DhuyxMenu"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = playerGui

--// Helpers (Button Effects)
local function attachButtonEffects(btn, shrinkPx)
    local orig = btn.Size
    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(75, 75, 75)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(55, 55, 55)}):Play()
    end)
    btn.MouseButton1Click:Connect(function()
        local s = shrinkPx or 3
        local toSmall = UDim2.new(orig.X.Scale, math.max(0, orig.X.Offset - s), orig.Y.Scale, math.max(0, orig.Y.Offset - s))
        local t1 = TweenService:Create(btn, TweenInfo.new(0.08), {Size = toSmall})
        local t2 = TweenService:Create(btn, TweenInfo.new(0.08), {Size = orig})
        t1:Play(); t1.Completed:Wait(); t2:Play()
    end)
end

--// Toggle Button (kéo được, tránh chồng vào Settings)
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 45, 0, 45)
ToggleButton.Position = UDim2.new(0, 15, 0, 250)
ToggleButton.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ToggleButton.Text = "≡"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 20
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Parent = gui
Instance.new("UICorner", ToggleButton).CornerRadius = UDim.new(0, 10)
attachButtonEffects(ToggleButton, 5)
makeSmoothDraggable(ToggleButton, 0.18)

--// MainFrame (kéo mượt)
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 320, 0, 240)
MainFrame.Position = UDim2.new(0.08, 0, 0.2, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
MainFrame.Visible = false
MainFrame.Parent = gui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 12)
makeSmoothDraggable(MainFrame, 0.2)

-- Shadow
local shadow = Instance.new("ImageLabel", MainFrame)
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Position = UDim2.new(0, -15, 0, -15)
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.fromRGB(0,0,0)
shadow.ImageTransparency = 0.4
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10,10,118,118)
shadow.ZIndex = -1
shadow.BackgroundTransparency = 1

-- Title
local Title = Instance.new("TextLabel", MainFrame)
Title.Size = UDim2.new(1, -10, 0, 35)
Title.Position = UDim2.new(0, 5, 0, 5)
Title.Text = "DhuyxDtuyen"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1

--// Tabs
local TabHolder = Instance.new("Frame", MainFrame)
TabHolder.Size = UDim2.new(1, -10, 0, 30)
TabHolder.Position = UDim2.new(0, 5, 0, 40)
TabHolder.BackgroundTransparency = 1
local TabLayout = Instance.new("UIListLayout", TabHolder)
TabLayout.FillDirection = Enum.FillDirection.Horizontal
TabLayout.Padding = UDim.new(0, 5)

local function createTab(name)
    local btn = Instance.new("TextButton", TabHolder)
    btn.Size = UDim2.new(0, 150, 1, 0)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    attachButtonEffects(btn, 3)
    return btn
end

local Tab1Btn = createTab("Functions")
local Tab2Btn = createTab("Info")

-- Pages container
local Pages = Instance.new("Frame", MainFrame)
Pages.Size = UDim2.new(1, -10, 1, -80)
Pages.Position = UDim2.new(0, 5, 0, 75)
Pages.BackgroundTransparency = 1
Pages.ClipsDescendants = true

local Page1 = Instance.new("Frame", Pages) -- Functions
Page1.Size = UDim2.new(1,0,1,0)
Page1.BackgroundTransparency = 1

local Page2 = Instance.new("Frame", Pages) -- Info
Page2.Size = UDim2.new(1,0,1,0)
Page2.BackgroundTransparency = 1
Page2.Visible = false

local function switchPage(page)
    Page1.Visible = (page == Page1)
    Page2.Visible = (page == Page2)
end

Tab1Btn.MouseButton1Click:Connect(function() switchPage(Page1) end)
Tab2Btn.MouseButton1Click:Connect(function() switchPage(Page2) end)

--// FUNCTIONS PAGE (2 cột, 8 nút)
local LeftCol = Instance.new("Frame", Page1)
LeftCol.Size = UDim2.new(0.5, -5, 1, 0)
LeftCol.Position = UDim2.new(0, 0, 0, 0)
LeftCol.BackgroundTransparency = 1
local LeftLayout = Instance.new("UIListLayout", LeftCol)
LeftLayout.Padding = UDim.new(0, 8)
LeftLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
LeftLayout.VerticalAlignment = Enum.VerticalAlignment.Top

local RightCol = Instance.new("Frame", Page1)
RightCol.Size = UDim2.new(0.5, -5, 1, 0)
RightCol.Position = UDim2.new(0.5, 5, 0, 0)
RightCol.BackgroundTransparency = 1
local RightLayout = Instance.new("UIListLayout", RightCol)
RightLayout.Padding = UDim.new(0, 8)
RightLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
RightLayout.VerticalAlignment = Enum.VerticalAlignment.Top

local function createFuncButton(name, text, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Name = name
    btn.Text = text
    btn.Size = UDim2.new(0, 130, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(65, 65, 75)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 13
    btn.AutoButtonColor = false
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    local stroke = Instance.new("UIStroke", btn)
    stroke.Thickness = 1.5
    stroke.Color = Color3.fromRGB(100, 100, 120)
    attachButtonEffects(btn, 3)
    return btn
end

local autoFarmBtn     = createFuncButton("jH4mP8",      "AutoFarm (Off)", LeftCol)
local shootBtn        = createFuncButton("tR7nY5",      "Shoot",          LeftCol)
local espBtn          = createFuncButton("uP5kQ3",      "ESP (Off)",      LeftCol)
local autoGunBtn      = createFuncButton("vQ2zW9",      "AutoGun",        LeftCol)

local flingMurdererBtn= createFuncButton("flingMurderer","Fling Murderer", RightCol)
local flingSheriffBtn = createFuncButton("flingSheriff", "Fling Sheriff",  RightCol)
local killAllBtn      = createFuncButton("killAll",      "Kill All",       RightCol)
local tpLobbyBtn      = createFuncButton("tpLobby",      "TP Lobby",       RightCol)

--// INFO PAGE (mỗi thông tin 1 dòng)
local Avatar = Instance.new("ImageLabel", Page2)
Avatar.Size = UDim2.new(0,80,0,80)
Avatar.Position = UDim2.new(0,10,0,10)
Avatar.BackgroundTransparency = 1
Avatar.Image = "rbxthumb://type=AvatarHeadShot&id="..game:GetService("Players").LocalPlayer.UserId.."&w=150&h=150"

local InfoPanel = Instance.new("Frame", Page2)
InfoPanel.Position = UDim2.new(0,100,0,10)
InfoPanel.Size = UDim2.new(1,-110,1,-20)
InfoPanel.BackgroundTransparency = 1
InfoPanel.ClipsDescendants = true

local InfoLayout = Instance.new("UIListLayout", InfoPanel)
InfoLayout.Padding = UDim.new(0, 6)
InfoLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
InfoLayout.VerticalAlignment = Enum.VerticalAlignment.Top

local function mkLine()
    local l = Instance.new("TextLabel")
    l.Size = UDim2.new(1, -10, 0, 22)
    l.BackgroundTransparency = 1
    l.Font = Enum.Font.Gotham
    l.TextSize = 14
    l.TextColor3 = Color3.fromRGB(220,220,220)
    l.TextXAlignment = Enum.TextXAlignment.Left
    l.TextWrapped = false
    l.ClipsDescendants = true
    l.Parent = InfoPanel
    return l
end

local lineDisplay = mkLine()
local lineUser    = mkLine()
local lineFPS     = mkLine()
local lineTime    = mkLine()
local lineCountry = mkLine()
local lineFriends = mkLine()

lineDisplay.Text = "Display Name : "..game:GetService("Players").LocalPlayer.DisplayName
lineUser.Text    = "Username     : @"..game:GetService("Players").LocalPlayer.Name

task.spawn(function()
    local c = "Unknown"
    pcall(function()
        c = game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(game:GetService("Players").LocalPlayer) or "Unknown"
    end)
    lineCountry.Text = "Country      : "..c
end)

task.spawn(function()
    local ok, list = pcall(function() return game:GetService("Players"):GetFriendsOnline() end)
    local count = (ok and type(list)=="table") and #list or 0
    lineFriends.Text = "Friends Online: "..count
end)

local lastDt = 1/60
game:GetService("RunService").RenderStepped:Connect(function(dt) lastDt = dt end)
task.spawn(function()
    while task.wait(0.5) do
        local fps = math.clamp(math.floor(1 / (lastDt > 0 and lastDt or 1/240)), 1, 999)
        lineFPS.Text  = "FPS          : "..fps
        lineTime.Text = "Time         : "..os.date("%H:%M")
    end
end)

--// Toggle open/close
ToggleButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

-- AutoFarm Toggle
autoFarmBtn.MouseButton1Click:Connect(function()
    autoFarm = not autoFarm
    autoFarmBtn.Text = "AutoFarm (" .. (autoFarm and "On" or "Off") .. ")"
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
end)

-- Shoot Murderer
shootBtn.MouseButton1Click:Connect(function()
    task.spawn(shootMurderer)
end)

-- Toggle ESP
espBtn.MouseButton1Click:Connect(function()
    espActive = not espActive
    espBtn.Text = "ESP (" .. (espActive and "On" or "Off") .. ")"
    if espActive then
        reloadESP()
    else
        espcontainer:ClearAllGroups()
    end
end)

-- AutoGun
autoGunBtn.MouseButton1Click:Connect(function()
    local map = getMap()
    if not map or not map:FindFirstChild("GunDrop") then
        fu.notification("No dropped gun to be teleported to.")
        return
    end
    local hrp = localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local previousPosition = hrp.CFrame
        hrp.CFrame = map:FindFirstChild("GunDrop"):GetPivot() + Vector3.new(0, 2, 0)
        localplayer.Backpack.ChildAdded:Wait()
        hrp.CFrame = previousPosition
        fu.notification("Gun picked up.")
    else
        fu.notification("No valid character to teleport.")
    end
end)

-- Fling Murderer
flingMurdererBtn.MouseButton1Click:Connect(function()
    local target = findMurderer()
    if target then
        miniFling(target)
    else
        fu.notification("Không tìm thấy murderer.")
    end
end)

-- Fling Sheriff
flingSheriffBtn.MouseButton1Click:Connect(function()
    local target = findSheriff()
    if target then
        miniFling(target)
    else
        fu.notification("Không tìm thấy sheriff.")
    end
end)

-- Kill All
killAllBtn.MouseButton1Click:Connect(function()
    if findMurderer() ~= localplayer then
        fu.notification("You're not murderer.")
        return
    end
    if not localplayer.Character:FindFirstChild("Knife") then
        local hum = localplayer.Character:FindFirstChild("Humanoid")
        if localplayer.Backpack:FindFirstChild("Knife") then
            hum:EquipTool(localplayer.Backpack:FindFirstChild("Knife"))
            task.wait(0.1)
        else
            fu.notification("You don't have the knife..?")
            return
        end
    end
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localplayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetPart = player.Character:FindFirstChild("HumanoidRootPart")
            targetPart.Anchored = true
            targetPart.CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 1
            task.wait(0.05)
        end
    end
    local args = { [1] = "Slash" }
    localplayer.Character.Knife.Stab:FireServer(unpack(args))
    task.wait(0.1)
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localplayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character:FindFirstChild("HumanoidRootPart").Anchored = false
        end
    end
    fu.notification("Auto Kill All executed.")
end)

tpLobbyBtn.MouseButton1Click:Connect(function()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart") or character:WaitForChild("HumanoidRootPart")

    -- Thay tọa độ này bằng địa chỉ bạn muốn TP tới
    hrp.CFrame = CFrame.new(-107, 152, 41)
end)

-- Input bindings
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent or not isScriptRunning then return end
    if input.KeyCode == Enum.KeyCode.T then
        espActive = not espActive
        espBtn.Text = "ESP (" .. (espActive and "On" or "Off") .. ")"
        if espActive then
            reloadESP()
        else
            espcontainer:ClearAllGroups()
        end
    elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
        task.spawn(shootMurderer)
    elseif input.KeyCode == Enum.KeyCode.Z then
        autoFarm = not autoFarm
        autoFarmBtn.Text = "AutoFarm (" .. (autoFarm and "On" or "Off") .. ")"
        if autoFarm then
            task.spawn(autoFarmCoins)
        end
    end
end)

-- Initialize
local function initialize()
    local success = pcall(function()
        localplayer:WaitForChild("PlayerGui", 10)
        ReplicatedStorage:WaitForChild("Remotes", 10):WaitForChild("Gameplay", 10):WaitForChild("PlayerDataChanged", 10)
    end)
    if not success or not isMurderMystery2() then
        return
    end
    isScriptRunning = true
    pcall(function()
        local gameplay = ReplicatedStorage.Remotes.Gameplay.PlayerDataChanged
        gameplay.OnClientEvent:Connect(function(data)
            playerData = data
            if espActive then
                reloadESP()
            end
        end)
    end)
    if espActive then
        reloadESP()
    end
end

pcall(initialize)