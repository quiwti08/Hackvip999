-- Load Rayfield UI Library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "MM2 NIGGALOL (anhchangm52)",
    Icon = 0, -- No icon
    LoadingTitle = "MM2 NIGGALOL",
    LoadingSubtitle = "by anhchangm52",
    ShowText = "MM2NIGGALOL", -- Text for mobile users to unhide GUI
    Theme = "Default",
    ToggleUIKeybind = "Z", -- Toggle GUI with Q key
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MM2AuraConfig",
        FileName = "Config"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false
})

-- Services
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- Configuration
local ESP_ENABLED = false
local SHOOT_OFFSET = 2.8
local OFFSET_TO_PING_MULT = 1
local UPDATE_INTERVAL = 0.5
local RANDOM_DELAY = 0.1
local MAX_COIN_DISTANCE = 100
local ANTI_CHEAT_DELAY = 0.05
getgenv().HitboxEnabled = false
getgenv().HitboxTransparency = 0.9
getgenv().HitboxSize = 15

-- Variables
local playerData = {}
local espActive = ESP_ENABLED
local lastUpdate = tick()
local autoFarm = false
local lastShot = tick()
local isScriptRunning = false
local lastKillAll = tick()

-- ESP Container
local espcontainer = {
    objects = {},
    Add = function(self, object, config)
        if not espActive then return end
        pcall(function()
            if self.objects[object] then
                self.objects[object].highlight:Destroy()
                self.objects[object] = nil
            end
            local highlight = Instance.new("Highlight")
            highlight.Parent = object
            highlight.FillColor = config.AccentColor
            highlight.OutlineColor = config.AccentColor
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            self.objects[object] = { highlight = highlight, group = config.GroupName }
            if config.ShowLabel then
                local billboard = Instance.new("BillboardGui")
                billboard.Parent = object
                billboard.Size = UDim2.new(0, 100, 0, 30)
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.AlwaysOnTop = true
                local textLabel = Instance.new("TextLabel")
                textLabel.Parent = billboard
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.Text = config.LabelText
                textLabel.TextColor3 = config.AccentColor
                textLabel.TextScaled = true
                self.objects[object].billboard = billboard
            end
        end)
    end,
    RemoveGroup = function(self, groupName)
        for object, data in pairs(self.objects) do
            if data.group == groupName then
                pcall(function()
                    data.highlight:Destroy()
                    if data.billboard then data.billboard:Destroy() end
                end)
                self.objects[object] = nil
            end
        end
    end,
    ClearAllGroups = function(self)
        for object, data in pairs(self.objects) do
            pcall(function()
                data.highlight:Destroy()
                if data.billboard then data.billboard:Destroy() end
            end)
        end
        self.objects = {}
    end
}

-- Game checks
local function isMurderMystery2()
    return ReplicatedStorage:FindFirstChild("Remotes") 
        and ReplicatedStorage.Remotes:FindFirstChild("Gameplay")
end

local function getMap()
    for _, o in ipairs(Workspace:GetChildren()) do
        if o:GetAttribute("MapID") and o:FindFirstChild("CoinContainer") and o:FindFirstChild("Spawns") then
            return o
        end
    end
    return nil
end

-- Role detection
local function findMurderer()
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Murderer" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character then
            if plr.Backpack:FindFirstChild("Knife") or (plr.Character and plr.Character:FindFirstChild("Knife")) then
                return plr
            end
        end
    end
    return nil
end

local function findSheriff()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local function findSheriffThatsNotMe()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" and Players:FindFirstChild(player) ~= LocalPlayer then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

-- ESP functions
local function reloadESP()
    if not espActive then return end
    espcontainer:RemoveGroup("players")
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= LocalPlayer then
            task.spawn(function()
                if player == findMurderer() then
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(1, 0, 0.0156863),
                        ArrowShow = true,
                        ArrowMinDistance = 999999,
                        ArrowSize = UDim2.new(0, 40, 0, 40),
                        LabelText = "Murderer",
                        ShowLabel = true,
                        GroupName = "players"
                    })
                elseif player == findSheriff() then
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(0, 0.6, 1),
                        ArrowShow = false,
                        ShowLabel = false,
                        GroupName = "players"
                    })
                else
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(0, 1, 0.0313725),
                        ArrowShow = false,
                        ShowLabel = false,
                        GroupName = "players"
                    })
                end
            end)
        end
    end
end

-- Predicted position
local function getPredictedPosition(player, shootOffset)
    local success, result = pcall(function()
        if not player.Character then
            return Vector3.new(0, 0, 0)
        end
        local playerHRP = player.Character:FindFirstChild("UpperTorso")
        local playerHum = player.Character:FindFirstChild("Humanoid")
        if not playerHRP or not playerHum then
            return Vector3.new(0, 0, 0)
        end
        local playerPosition = playerHRP.Position
        local velocity = playerHRP.AssemblyLinearVelocity
        local playerMoveDirection = playerHum.MoveDirection
        local predictedPosition = playerPosition + (velocity * Vector3.new(0, 0.5, 0)) * (shootOffset / 15) + playerMoveDirection * shootOffset
        predictedPosition = predictedPosition * (((LocalPlayer:GetNetworkPing() * 1000) * ((OFFSET_TO_PING_MULT - 1) * 0.01)) + 1)
        return predictedPosition
    end)
    if not success then
        return Vector3.new(0, 0, 0)
    end
    return result
end

-- Shoot Murderer
local function shootMurderer()
    if tick() - lastShot < 0.5 then return end 
    lastShot = tick()
    if findSheriff() ~= LocalPlayer then
        Rayfield:Notify({Title = "Error", Content = "You are not the Sheriff.", Duration = 3})
        return
    end
    local murderer = findMurderer() or findSheriffThatsNotMe()
    if not murderer then
        Rayfield:Notify({Title = "Error", Content = "No valid target found.", Duration = 3})
        return
    end
    if not LocalPlayer.Character:FindFirstChild("Gun") then
        local hum = LocalPlayer.Character:FindFirstChild("Humanoid")
        if LocalPlayer.Backpack:FindFirstChild("Gun") then
            hum:EquipTool(LocalPlayer.Backpack:FindFirstChild("Gun"))
            task.wait(math.random(0.05, 0.1) + ANTI_CHEAT_DELAY)
        else
            Rayfield:Notify({Title = "Error", Content = "No gun found.", Duration = 3})
            return
        end
    end
    local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
    if not murdererHRP then
        Rayfield:Notify({Title = "Error", Content = "Target has no HumanoidRootPart.", Duration = 3})
        return
    end
    local predictedPosition = getPredictedPosition(murderer, SHOOT_OFFSET)
    if predictedPosition == Vector3.new(0, 0, 0) then return end
    local args = {
        [1] = 1,
        [2] = predictedPosition,
        [3] = "AH2"
    }
    pcall(function()
        LocalPlayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
    end)
    task.wait(math.random(0, ANTI_CHEAT_DELAY))
    Rayfield:Notify({Title = "Action", Content = "Shot fired at target.", Duration = 3})
end

-- AutoFarm Coins
local function autoFarmCoins()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart", 5)
    local humanoid = character:WaitForChild("Humanoid", 5)
    if not hrp or not humanoid then
        Rayfield:Notify({Title = "Error", Content = "No valid character found.", Duration = 3})
        return
    end
    local function findMap()
        for _, E in ipairs(Workspace:GetChildren()) do
            if E:GetAttribute("MapID") and E:FindFirstChild("CoinContainer") then
                return E
            end
        end
        task.wait(0.5)
        return nil
    end
    local function findCoin()
        local map = findMap()
        if not map or not map:FindFirstChild("CoinContainer") then return nil end
        local closestCoin, minDist = nil, math.huge
        for _, coin in ipairs(map.CoinContainer:GetChildren()) do
            local coinVisual = coin:FindFirstChild("CoinVisual")
            if coinVisual and not coinVisual:GetAttribute("Collected") and coin.Parent then
                local dist = (hrp.Position - coin.Position).Magnitude
                if dist < minDist and dist < MAX_COIN_DISTANCE then
                    closestCoin = coin
                    minDist = dist
                end
            end
        end
        return closestCoin
    end
    local function moveToCoin(coin)
        if not coin or not coin.Parent then return end
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        local distance = (hrp.Position - coin.Position).Magnitude
        if distance > MAX_COIN_DISTANCE then return end
        local offset = Vector3.new(math.random(-5, 5)/10, 0, math.random(-5, 5)/10)
        local tween = TweenService:Create(hrp, TweenInfo.new(distance / 25, Enum.EasingStyle.Linear), {CFrame = coin.CFrame * CFrame.Angles(0, math.rad(math.random(-10, 10)), 0) + offset})
        tween:Play()
        tween.Completed:Wait()
    end
    while autoFarm do
        local coin = findCoin()
        if coin then
            moveToCoin(coin)
            local coinVisual = coin:FindFirstChild("CoinVisual")
            while coinVisual and not coinVisual:GetAttribute("Collected") and coinVisual.Parent and autoFarm do
                local newCoin = findCoin()
                if newCoin and newCoin ~= coin then
                    break
                end
                task.wait(0.1 + math.random(0, ANTI_CHEAT_DELAY))
            end
        end
        task.wait(math.random(0.1, 0.3))
    end
end

-- Check Line of Sight
local function checkLineOfSight(startPos, endPos)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, Workspace:FindFirstChild("CoinContainer")}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.IgnoreWater = true
    local raycastResult = Workspace:Raycast(startPos, (endPos - startPos).Unit * (endPos - startPos).Magnitude, raycastParams)
    return not raycastResult or raycastResult.Instance:IsDescendantOf(findMurderer().Character)
end

-- Auto-Shoot and Auto-Kill
RunService.Heartbeat:Connect(function()
    if not autoFarm or not isScriptRunning then return end
    if findSheriff() == LocalPlayer then
        local murderer = findMurderer()
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local startPos = LocalPlayer.Character.HumanoidRootPart.Position
            local endPos = murderer.Character.HumanoidRootPart.Position
            if checkLineOfSight(startPos, endPos) then
                task.spawn(shootMurderer)
            end
        end
    end
    if findMurderer() == LocalPlayer and tick() - lastKillAll >= 1 then
        lastKillAll = tick()
        if not LocalPlayer.Character:FindFirstChild("Knife") then
            local hum = LocalPlayer.Character:FindFirstChild("Humanoid")
            if LocalPlayer.Backpack:FindFirstChild("Knife") then
                hum:EquipTool(LocalPlayer.Backpack:FindFirstChild("Knife"))
                task.wait(0.1)
            else
                Rayfield:Notify({Title = "Error", Content = "You don't have the knife.", Duration = 3})
                return
            end
        end
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPart = player.Character:FindFirstChild("HumanoidRootPart")
                targetPart.Anchored = true
                targetPart.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame + LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 1
                task.wait(0.05)
            end
        end
        local args = { [1] = "Slash" }
        LocalPlayer.Character.Knife.Stab:FireServer(unpack(args))
        task.wait(0.1)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character:FindFirstChild("HumanoidRootPart").Anchored = false
            end
        end
        Rayfield:Notify({Title = "Action", Content = "Auto Kill All executed.", Duration = 3})
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if getgenv().HitboxEnabled then
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    player.Character.HumanoidRootPart.Size = Vector3.new(getgenv().HitboxSize, getgenv().HitboxSize, getgenv().HitboxSize)
                    player.Character.HumanoidRootPart.Transparency = getgenv().HitboxTransparency
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    player.Character.HumanoidRootPart.Material = "Neon"
                    player.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    else
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    player.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                    player.Character.HumanoidRootPart.Transparency = 1
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                    player.Character.HumanoidRootPart.Material = "Plastic"
                    player.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    end
end)

-- Mini Fling Function
local function miniFling(playerToFling)
    local Character = LocalPlayer.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart
    local TCharacter = playerToFling.Character
    local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter and TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter and TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")

    if not Character or not Humanoid or not RootPart or not TCharacter then
        Rayfield:Notify({Title = "Error", Content = "Invalid character or target.", Duration = 3})
        return
    end
    if not TRootPart and not THead and not Handle then
        Rayfield:Notify({Title = "Error", Content = "No valid parts to fling.", Duration = 3})
        return
    end
    if THumanoid and THumanoid.Sit then
        Rayfield:Notify({Title = "Error", Content = "Target is sitting, cannot fling.", Duration = 3})
        return
    end
    if RootPart.Velocity.Magnitude < 50 then
        getgenv().OldPos = RootPart.CFrame
    end
    if THead then
        Workspace.CurrentCamera.CameraSubject = THead
    elseif Handle then
        Workspace.CurrentCamera.CameraSubject = Handle
    elseif THumanoid then
        Workspace.CurrentCamera.CameraSubject = THumanoid
    end
    local function FPos(BasePart, Pos, Ang)
        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
        Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
        RootPart.Velocity = Vector3.new(9e7, 9e7, 9e7)
        RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
    end
    local function SFBasePart(BasePart)
        local TimeToWait = 2
        local Time = tick()
        local Angle = 0
        repeat
            if RootPart and THumanoid and BasePart and BasePart.Parent and Humanoid.Health > 0 then
                if BasePart.Velocity.Magnitude < 50 then
                    Angle = Angle + 100
                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                    task.wait()
                else
                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                    task.wait()
                    FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                    task.wait()
                end
            else
                break
            end
        until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TCharacter or not TCharacter.Parent or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
    end
    Workspace.FallenPartsDestroyHeight = 0/0
    local BV = Instance.new("BodyVelocity")
    BV.Name = "FlingVelocity"
    BV.Parent = RootPart
    BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    if TRootPart and THead and (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
        SFBasePart(THead)
    elseif TRootPart then
        SFBasePart(TRootPart)
    elseif THead then
        SFBasePart(THead)
    elseif Handle then
        SFBasePart(Handle)
    else
        Rayfield:Notify({Title = "Error", Content = "No valid parts to fling.", Duration = 3})
    end
    BV:Destroy()
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    Workspace.CurrentCamera.CameraSubject = Humanoid
    if getgenv().OldPos then
        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, 0.5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, 0.5, 0))
            Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
            for _, part in ipairs(Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Velocity = Vector3.new(0, 0, 0)
                    part.RotVelocity = Vector3.new(0, 0, 0)
                end
            end
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
    end
    Workspace.FallenPartsDestroyHeight = getgenv().FPDH or -500
    Rayfield:Notify({Title = "Action", Content = "Flung " .. playerToFling.Name, Duration = 3})
end

-- AutoGun Function
local function autoGun()
    local map = getMap()
    if not map or not map:FindFirstChild("GunDrop") then
        Rayfield:Notify({Title = "Error", Content = "No dropped gun to be teleported to.", Duration = 3})
        return
    end
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local previousPosition = hrp.CFrame
        hrp.CFrame = map:FindFirstChild("GunDrop"):GetPivot() + Vector3.new(0, 2, 0)
        LocalPlayer.Backpack.ChildAdded:Wait()
        hrp.CFrame = previousPosition
        Rayfield:Notify({Title = "Action", Content = "Gun picked up.", Duration = 3})
    else
        Rayfield:Notify({Title = "Error", Content = "No valid character to teleport.", Duration = 3})
    end
end

-- TP to Lobby
local function tpToLobby()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart") or character:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-107, 152, 41)
    Rayfield:Notify({Title = "Action", Content = "Teleported to Lobby.", Duration = 3})
end

-- Event Connections
Workspace.ChildAdded:Connect(function(ch)
    if ch == getMap() and espActive then
        task.spawn(function()
            task.wait(math.random(1, 2))
            if findMurderer() then
                reloadESP()
            end
        end)
    end
end)

Workspace.ChildRemoved:Connect(function(ch)
    if ch == getMap() and espActive then
        playerData = {}
        espcontainer:ClearAllGroups()
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(math.random(0.5, 1.5))
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
    if espActive then
        reloadESP()
    end
end)

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            if espActive then
                task.wait(math.random(0.5, 1.5))
                reloadESP()
            end
        end)
    end
end)

Players.PlayerRemoving:Connect(function()
    if espActive then
        task.wait(math.random(0.5, 1.5))
        reloadESP()
    end
end)

-- Standalone Shoot Button (Circular)
local shootGui = Instance.new("ScreenGui")
shootGui.Name = "ShootQuickToggle"
shootGui.ResetOnSpawn = false
shootGui.Parent = game.CoreGui

local shootQuickButton = Instance.new("TextButton")
shootQuickButton.Size = UDim2.new(0, 60, 0, 60)
shootQuickButton.Position = UDim2.new(0, 30, 0.8, 0)
shootQuickButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
shootQuickButton.TextColor3 = Color3.fromRGB(255, 255, 255)
shootQuickButton.Font = Enum.Font.GothamBold
shootQuickButton.TextSize = 16
shootQuickButton.Text = "Shoot"
shootQuickButton.Parent = shootGui
shootQuickButton.Active = true
shootQuickButton.Draggable = true

local shootCorner = Instance.new("UICorner")
shootCorner.CornerRadius = UDim.new(1, 0) -- Circular corners
shootCorner.Parent = shootQuickButton

local shootStroke = Instance.new("UIStroke")
shootStroke.Color = Color3.fromRGB(255, 179, 186)
shootStroke.Thickness = 2
shootStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
shootStroke.Parent = shootQuickButton

shootQuickButton.MouseEnter:Connect(function()
    TweenService:Create(shootQuickButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(75, 75, 75)}):Play()
end)
shootQuickButton.MouseLeave:Connect(function()
    TweenService:Create(shootQuickButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}):Play()
end)
shootQuickButton.MouseButton1Click:Connect(function()
    local origSize = shootQuickButton.Size
    local shrinkPx = 3
    local toSmall = UDim2.new(origSize.X.Scale, math.max(0, origSize.X.Offset - shrinkPx), origSize.Y.Scale, math.max(0, origSize.Y.Offset - shrinkPx))
    local t1 = TweenService:Create(shootQuickButton, TweenInfo.new(0.08), {Size = toSmall})
    local t2 = TweenService:Create(shootQuickButton, TweenInfo.new(0.08), {Size = origSize})
    t1:Play(); t1.Completed:Wait(); t2:Play()
    task.spawn(shootMurderer)
end)

-- Standalone Autogun Button (Circular)
local autogunGui = Instance.new("ScreenGui")
autogunGui.Name = "AutogunToggle"
autogunGui.ResetOnSpawn = false
autogunGui.Parent = game.CoreGui

local autogunButton = Instance.new("TextButton")
autogunButton.Size = UDim2.new(0, 60, 0, 60)
autogunButton.Position = UDim2.new(0, 100, 0.8, 0)
autogunButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
autogunButton.TextColor3 = Color3.fromRGB(255, 255, 255)
autogunButton.Font = Enum.Font.GothamBold
autogunButton.TextSize = 16
autogunButton.Text = "Autogun"
autogunButton.Parent = autogunGui
autogunButton.Active = true
autogunButton.Draggable = true

local autogunCorner = Instance.new("UICorner")
autogunCorner.CornerRadius = UDim.new(1, 0) -- Circular corners
autogunCorner.Parent = autogunButton

local autogunStroke = Instance.new("UIStroke")
autogunStroke.Color = Color3.fromRGB(255, 179, 186)
autogunStroke.Thickness = 2
autogunStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
autogunStroke.Parent = autogunButton

autogunButton.MouseEnter:Connect(function()
    TweenService:Create(autogunButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(75, 75, 75)}):Play()
end)
autogunButton.MouseLeave:Connect(function()
    TweenService:Create(autogunButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}):Play()
end)
autogunButton.MouseButton1Click:Connect(function()
    local origSize = autogunButton.Size
    local shrinkPx = 3
    local toSmall = UDim2.new(origSize.X.Scale, math.max(0, origSize.X.Offset - shrinkPx), origSize.Y.Scale, math.max(0, origSize.Y.Offset - shrinkPx))
    local t1 = TweenService:Create(autogunButton, TweenInfo.new(0.08), {Size = toSmall})
    local t2 = TweenService:Create(autogunButton, TweenInfo.new(0.08), {Size = origSize})
    t1:Play(); t1.Completed:Wait(); t2:Play()
    task.spawn(autoGun)
end)

-- MM2 Tab
local MM2Tab = Window:CreateTab("MM2", 4483362458)

MM2Tab:CreateToggle({
    Name = "AutoFarm",
    CurrentValue = false,
    Flag = "AutoFarmToggle",
    Callback = function(Value)
        autoFarm = Value
        Rayfield:Notify({
            Title = "AutoFarm",
            Content = Value and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
        if Value then
            task.spawn(autoFarmCoins)
        end
    end
})

MM2Tab:CreateButton({
    Name = "Shoot",
    Callback = function()
        task.spawn(shootMurderer)
    end
})

MM2Tab:CreateToggle({
    Name = "ESP",
    CurrentValue = false,
    Flag = "ESPToggle",
    Callback = function(Value)
        espActive = Value
        Rayfield:Notify({
            Title = "ESP",
            Content = Value and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
        if Value then
            reloadESP()
        else
            espcontainer:ClearAllGroups()
        end
    end
})

MM2Tab:CreateButton({
    Name = "AutoGun",
    Callback = function()
        task.spawn(autoGun)
    end
})

MM2Tab:CreateButton({
    Name = "Fling Murderer",
    Callback = function()
        local target = findMurderer()
        if target then
            miniFling(target)
        else
            Rayfield:Notify({Title = "Error", Content = "No murderer found.", Duration = 3})
        end
    end
})

MM2Tab:CreateButton({
    Name = "Fling Sheriff",
    Callback = function()
        local target = findSheriff()
        if target then
            miniFling(target)
        else
            Rayfield:Notify({Title = "Error", Content = "No sheriff found.", Duration = 3})
        end
    end
})

MM2Tab:CreateButton({
    Name = "Kill All",
    Callback = function()
        if findMurderer() ~= LocalPlayer then
            Rayfield:Notify({Title = "Error", Content = "You are not the murderer.", Duration = 3})
            return
        end
        if not LocalPlayer.Character:FindFirstChild("Knife") then
            local hum = LocalPlayer.Character:FindFirstChild("Humanoid")
            if LocalPlayer.Backpack:FindFirstChild("Knife") then
                hum:EquipTool(LocalPlayer.Backpack:FindFirstChild("Knife"))
                task.wait(0.1)
            else
                Rayfield:Notify({Title = "Error", Content = "You don't have the knife.", Duration = 3})
                return
            end
        end
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPart = player.Character:FindFirstChild("HumanoidRootPart")
                targetPart.Anchored = true
                targetPart.CFrame = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame + LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 1
                task.wait(0.05)
            end
        end
        local args = { [1] = "Slash" }
        LocalPlayer.Character.Knife.Stab:FireServer(unpack(args))
        task.wait(0.1)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character:FindFirstChild("HumanoidRootPart").Anchored = false
            end
        end
        Rayfield:Notify({Title = "Action", Content = "Auto Kill All executed.", Duration = 3})
    end
})

MM2Tab:CreateButton({
    Name = "TP Lobby",
    Callback = function()
        task.spawn(tpToLobby)
    end
})

-- Hitbox Toggle
MM2Tab:CreateToggle({
    Name = "Hitbox",
    CurrentValue = false,
    Flag = "HitboxToggle",
    Callback = function(Value)
        getgenv().HitboxEnabled = Value
        Rayfield:Notify({
            Title = "Hitbox",
            Content = Value and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
    end
})

-- Hitbox Transparency Slider
MM2Tab:CreateSlider({
    Name = "Hitbox Transparency",
    Range = {0, 1},
    Increment = 0.1,
    CurrentValue = 0.9,
    Flag = "HitboxTransparencySlider",
    Callback = function(Value)
        getgenv().HitboxTransparency = Value
        Rayfield:Notify({
            Title = "Hitbox Transparency",
            Content = "Set to " .. Value,
            Duration = 3,
            Image = 4483362458
        })
    end
})

-- Hitbox Size Slider
MM2Tab:CreateSlider({
    Name = "Hitbox Size",
    Range = {5, 50},
    Increment = 1,
    CurrentValue = 15,
    Flag = "HitboxSizeSlider",
    Callback = function(Value)
        getgenv().HitboxSize = Value
        Rayfield:Notify({
            Title = "Hitbox Size",
            Content = "Set to " .. Value,
            Duration = 3,
            Image = 4483362458
        })
    end
})

-- Aura and Animation Tabs (from second script)
local angelWingsEnabled = false
local angelWingsInstances = {}
local angelWingsHrp = nil
local angelWingsColor = Color3.new(1, 1, 1)

local function destroyAngelWings()
    for _, inst in pairs(angelWingsInstances) do
        pcall(function() inst:Destroy() end)
    end
    angelWingsInstances = {}
end

local function createAngelWings()
    local character = LocalPlayer.Character
    if not character then return end
    angelWingsHrp = character:FindFirstChild("UpperTorso")
    if not angelWingsHrp then return end
    
    destroyAngelWings()
    
    local att1 = Instance.new("Attachment")
    att1.Name = "AngelAttachment1"
    att1.CFrame = CFrame.new(0, 4.25, 0)
    att1.Parent = angelWingsHrp
    table.insert(angelWingsInstances, att1)
    
    local pe1 = Instance.new("ParticleEmitter")
    pe1.Name = "AngelParticle1"
    pe1.Acceleration = Vector3.new(0, -6, 0)
    pe1.Brightness = 1
    pe1.Color = ColorSequence.new(angelWingsColor)
    pe1.Drag = 0
    pe1.EmissionDirection = Enum.NormalId.Bottom
    pe1.Enabled = true
    pe1.Lifetime = NumberRange.new(1, 2)
    pe1.LightEmission = 1
    pe1.LightInfluence = 1
    pe1.LockedToPart = true
    pe1.Orientation = Enum.ParticleOrientation.FacingCamera
    pe1.Rate = 50
    pe1.RotSpeed = NumberRange.new(-100, 100)
    pe1.Rotation = NumberRange.new(-360, 360)
    pe1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.5, 0.3), NumberSequenceKeypoint.new(1, 0.5, 0.3)})
    pe1.Speed = NumberRange.new(2.5, 2.5)
    pe1.SpreadAngle = Vector2.new(0, 360)
    pe1.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    pe1.Texture = "rbxassetid://7511321694"
    pe1.TimeScale = 1
    pe1.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1),
        NumberSequenceKeypoint.new(0.1, 0),
        NumberSequenceKeypoint.new(0.3, 0),
        NumberSequenceKeypoint.new(0.8, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    pe1.VelocityInheritance = 0
    pe1.WindAffectsDrag = false
    pe1.ZOffset = 0
    pe1.Parent = att1
    table.insert(angelWingsInstances, pe1)
    
    local pe2 = Instance.new("ParticleEmitter")
    pe2.Name = "AngelParticle2"
    pe2.Acceleration = Vector3.new(0, -6, 0)
    pe2.Brightness = 1
    pe2.Color = ColorSequence.new(angelWingsColor)
    pe2.Drag = 0
    pe2.EmissionDirection = Enum.NormalId.Bottom
    pe2.Enabled = true
    pe2.Lifetime = NumberRange.new(1, 2)
    pe2.LightEmission = 1
    pe2.LightInfluence = 1
    pe2.LockedToPart = true
    pe2.Orientation = Enum.ParticleOrientation.FacingCamera
    pe2.Rate = 50 * 2
    pe2.RotSpeed = NumberRange.new(-100, 100)
    pe2.Rotation = NumberRange.new(-360, 360)
    pe2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.5, 0.3), NumberSequenceKeypoint.new(1, 0.5, 0.3)})
    pe2.Speed = NumberRange.new(2.5, 2.5)
    pe2.SpreadAngle = Vector2.new(0, 360)
    pe2.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    pe2.Texture = "rbxassetid://1084976679"
    pe2.TimeScale = 1
    pe2.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1),
        NumberSequenceKeypoint.new(0.2, 0),
        NumberSequenceKeypoint.new(0.8, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    pe2.VelocityInheritance = 0
    pe2.WindAffectsDrag = false
    pe2.ZOffset = 0
    pe2.Parent = att1
    table.insert(angelWingsInstances, pe2)
    
    local att2 = Instance.new("Attachment")
    att2.Name = "AngelAttachment2"
    att2.CFrame = CFrame.new(0, 0.75, 0.5)
    att2.Parent = angelWingsHrp
    table.insert(angelWingsInstances, att2)
    
    local att3 = Instance.new("Attachment")
    att3.Name = "AngelAttachment3"
    att3.CFrame = CFrame.new(-5.25, 0, 2) * CFrame.fromMatrix(Vector3.new(0,0,0), Vector3.new(0.866025388, 0, 0.5), Vector3.new(0,1,0), Vector3.new(-0.5, 0, 0.866025388))
    att3.Parent = angelWingsHrp
    table.insert(angelWingsInstances, att3)
    
    local att4 = Instance.new("Attachment")
    att4.Name = "AngelAttachment4"
    att4.CFrame = CFrame.new(5.25, 0, 2) * CFrame.fromMatrix(Vector3.new(0,0,0), Vector3.new(0.866025388, 0, -0.5), Vector3.new(0,1,0), Vector3.new(0.5, 0, 0.866025388))
    att4.Parent = angelWingsHrp
    table.insert(angelWingsInstances, att4)
    
    local beam1 = Instance.new("Beam")
    beam1.Name = "AngelBeam1"
    beam1.Attachment0 = att2
    beam1.Attachment1 = att3
    beam1.Brightness = 1
    beam1.Color = ColorSequence.new(angelWingsColor)
    beam1.CurveSize0 = 2
    beam1.CurveSize1 = 2
    beam1.Enabled = true
    beam1.FaceCamera = false
    beam1.LightEmission = 1
    beam1.LightInfluence = 1
    beam1.Segments = 10
    beam1.Texture = "rbxassetid://9544400688"
    beam1.TextureLength = 1
    beam1.TextureMode = Enum.TextureMode.Stretch
    beam1.TextureSpeed = 0
    beam1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    beam1.Width0 = 4
    beam1.Width1 = 6
    beam1.ZOffset = 0
    beam1.Parent = angelWingsHrp
    table.insert(angelWingsInstances, beam1)
    
    local beam2 = Instance.new("Beam")
    beam2.Name = "AngelBeam2"
    beam2.Attachment0 = att2
    beam2.Attachment1 = att4
    beam2.Brightness = 1
    beam2.Color = ColorSequence.new(angelWingsColor)
    beam2.CurveSize0 = -2
    beam2.CurveSize1 = -2
    beam2.Enabled = true
    beam2.FaceCamera = false
    beam2.LightEmission = 1
    beam2.LightInfluence = 1
    beam2.Segments = 10
    beam2.Texture = "rbxassetid://9544400688"
    beam2.TextureLength = 1
    beam2.TextureMode = Enum.TextureMode.Stretch
    beam2.TextureSpeed = 0
    beam2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    beam2.Width0 = 4
    beam2.Width1 = 6
    beam2.ZOffset = 0
    beam2.Parent = angelWingsHrp
    table.insert(angelWingsInstances, beam2)
    
    local pl = Instance.new("PointLight")
    pl.Name = "AngelPointLight"
    pl.Brightness = 1
    pl.Color = angelWingsColor
    pl.Enabled = true
    pl.Range = 5
    pl.Shadows = false
    pl.Parent = angelWingsHrp
    table.insert(angelWingsInstances, pl)
end

local function updateAngelWingsColor(Value)
    angelWingsColor = Value
    if angelWingsEnabled then
        for _, inst in pairs(angelWingsInstances) do
            if inst:IsA("ParticleEmitter") or inst:IsA("Beam") then
                inst.Color = ColorSequence.new(angelWingsColor)
            elseif inst:IsA("PointLight") then
                inst.Color = angelWingsColor
            end
        end
    end
end

local blueheatEnabled = false
local blueheatInstances = {}
local blueheatColor = Color3.new(0.0588235, 0.0588235, 1)

local function destroyBlueheat()
    for _, inst in pairs(blueheatInstances) do
        pcall(function() inst:Destroy() end)
    end
    blueheatInstances = {}
end

local function createBlueheat()
    local character = LocalPlayer.Character
    if not character then return end
    
    destroyBlueheat()
    
    local parts = {}
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            table.insert(parts, part)
        end
    end
    
    for _, part in pairs(parts) do
        local atom1 = Instance.new("ParticleEmitter")
        atom1.Name = "BhAtom1"
        atom1.Acceleration = Vector3.new(0, 1, 0)
        atom1.Brightness = 10
        atom1.Color = ColorSequence.new(blueheatColor)
        atom1.Drag = 50
        atom1.EmissionDirection = Enum.NormalId.Top
        atom1.Enabled = true
        atom1.Lifetime = NumberRange.new(0.4, 0.6)
        atom1.LightEmission = 1
        atom1.LightInfluence = 0
        atom1.LockedToPart = false
        atom1.Orientation = Enum.ParticleOrientation.FacingCamera
        atom1.Rate = 20
        atom1.RotSpeed = NumberRange.new(0, 0)
        atom1.Rotation = NumberRange.new(-360, 360)
        atom1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.125), NumberSequenceKeypoint.new(1, 0)})
        atom1.Speed = NumberRange.new(30, 40)
        atom1.SpreadAngle = Vector2.new(90, 90)
        atom1.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        atom1.Texture = "rbxassetid://11448304274"
        atom1.TimeScale = 0.75
        atom1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.500529, 0), NumberSequenceKeypoint.new(1, 1)})
        atom1.VelocityInheritance = 0
        atom1.WindAffectsDrag = false
        atom1.ZOffset = -1
        atom1.Parent = part
        table.insert(blueheatInstances, atom1)
        
        local flame1 = Instance.new("ParticleEmitter")
        flame1.Name = "BhFlame1"
        flame1.Acceleration = Vector3.new(0, 1, 0)
        flame1.Brightness = 10
        flame1.Color = ColorSequence.new(blueheatColor)
        flame1.Drag = 0
        flame1.EmissionDirection = Enum.NormalId.Top
        flame1.Enabled = true
        flame1.Lifetime = NumberRange.new(0.4, 0.6)
        flame1.LightEmission = 1
        flame1.LightInfluence = 0
        flame1.LockedToPart = false
        flame1.Orientation = Enum.ParticleOrientation.FacingCamera
        flame1.Rate = 20 * 7.5
        flame1.RotSpeed = NumberRange.new(0, 0)
        flame1.Rotation = NumberRange.new(-360, 360)
        flame1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(1, 0)})
        flame1.Speed = NumberRange.new(1, 2)
        flame1.SpreadAngle = Vector2.new(90, 90)
        flame1.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        flame1.Texture = "rbxassetid://10545078665"
        flame1.TimeScale = 0.75
        flame1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.500529, 0), NumberSequenceKeypoint.new(1, 1)})
        flame1.VelocityInheritance = 0
        flame1.WindAffectsDrag = false
        flame1.ZOffset = -1
        flame1.Parent = part
        table.insert(blueheatInstances, flame1)
        
        local flame2 = Instance.new("ParticleEmitter")
        flame2.Name = "BhFlame2"
        flame2.Acceleration = Vector3.new(0, 1, 0)
        flame2.Brightness = 10
        flame2.Color = ColorSequence.new(blueheatColor)
        flame2.Drag = 0
        flame2.EmissionDirection = Enum.NormalId.Top
        flame2.Enabled = true
        flame2.Lifetime = NumberRange.new(0.3, 0.4)
        flame2.LightEmission = 1
        flame2.LightInfluence = 0
        flame2.LockedToPart = false
        flame2.Orientation = Enum.ParticleOrientation.FacingCamera
        flame2.Rate = 20 * 7.5
        flame2.RotSpeed = NumberRange.new(0, 0)
        flame2.Rotation = NumberRange.new(-360, 360)
        flame2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1.1875), NumberSequenceKeypoint.new(1, 0)})
        flame2.Speed = NumberRange.new(2, 3)
        flame2.SpreadAngle = Vector2.new(90, 90)
        flame2.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        flame2.Texture = "rbxassetid://10545078665"
        flame2.TimeScale = 0.75
        flame2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.500529, 0), NumberSequenceKeypoint.new(1, 1)})
        flame2.VelocityInheritance = 0
        flame2.WindAffectsDrag = false
        flame2.ZOffset = -1.10000002
        flame2.Parent = part
        table.insert(blueheatInstances, flame2)
        
        local glow = Instance.new("ParticleEmitter")
        glow.Name = "BhGlow"
        glow.Acceleration = Vector3.new(0, 1, 0)
        glow.Brightness = 10
        glow.Color = ColorSequence.new(blueheatColor)
        glow.Drag = 0
        glow.EmissionDirection = Enum.NormalId.Top
        glow.Enabled = true
        glow.FlipbookFramerate = NumberRange.new(30, 30)
        glow.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
        glow.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
        glow.Lifetime = NumberRange.new(0.4, 0.6)
        glow.LightEmission = 1
        glow.LightInfluence = 0
        glow.LockedToPart = true
        glow.Orientation = Enum.ParticleOrientation.FacingCamera
        glow.Rate = 20 * 10
        glow.RotSpeed = NumberRange.new(0, 0)
        glow.Rotation = NumberRange.new(-360, 360)
        glow.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.5), NumberSequenceKeypoint.new(1, 0.5)})
        glow.Speed = NumberRange.new(0.1, 0.1)
        glow.SpreadAngle = Vector2.new(360, 360)
        glow.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        glow.Texture = "rbxassetid://8451174579"
        glow.TimeScale = 0.75
        glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5, 0.9125), NumberSequenceKeypoint.new(1, 1)})
        glow.VelocityInheritance = 0
        glow.WindAffectsDrag = false
        glow.ZOffset = 1
        glow.Parent = part
        table.insert(blueheatInstances, glow)
        
        local steam = Instance.new("ParticleEmitter")
        steam.Name = "BhSteam"
        steam.Acceleration = Vector3.new(0, 1, 0)
        steam.Brightness = 10
        steam.Color = ColorSequence.new(blueheatColor)
        steam.Drag = 5
        steam.EmissionDirection = Enum.NormalId.Top
        steam.Enabled = true
        steam.Lifetime = NumberRange.new(0.4, 0.6)
        steam.LightEmission = 1
        steam.LightInfluence = 0
        steam.LockedToPart = false
        steam.Orientation = Enum.ParticleOrientation.FacingCamera
        steam.Rate = 20 * 5
        steam.RotSpeed = NumberRange.new(0, 0)
        steam.Rotation = NumberRange.new(-360, 360)
        steam.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 2.4375), NumberSequenceKeypoint.new(1, 0)})
        steam.Speed = NumberRange.new(8, 10)
        steam.SpreadAngle = Vector2.new(90, 90)
        steam.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        steam.Texture = "rbxassetid://11156590261"
        steam.TimeScale = 0.75
        steam.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.499471, 0.8875), NumberSequenceKeypoint.new(1, 1)})
        steam.VelocityInheritance = 0
        steam.WindAffectsDrag = false
        steam.ZOffset = -1
        steam.Parent = part
        table.insert(blueheatInstances, steam)
    end
end

local function updateBlueheatColor(Value)
    blueheatColor = Value
    if blueheatEnabled then
        for _, inst in pairs(blueheatInstances) do
            if inst:IsA("ParticleEmitter") then
                inst.Color = ColorSequence.new(blueheatColor)
            end
        end
    end
end

local AuraTab = Window:CreateTab("Auralist", 4483362458)

AuraTab:CreateToggle({
    Name = "Angel Wings",
    CurrentValue = false,
    Flag = "AngelWingsToggle",
    Callback = function(Value)
        angelWingsEnabled = Value
        Rayfield:Notify({
            Title = "Angel Wings",
            Content = Value and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
        if Value then
            createAngelWings()
        else
            destroyAngelWings()
        end
    end
})

AuraTab:CreateColorPicker({
    Name = "Angel Wings Color",
    Color = Color3.new(1, 1, 1),
    Flag = "AngelWingsColor",
    Callback = function(Value)
        updateAngelWingsColor(Value)
        Rayfield:Notify({
            Title = "Angel Wings Color",
            Content = "Color changed",
            Duration = 3,
            Image = 4483362458
        })
    end
})

AuraTab:CreateToggle({
    Name = "Blueheat Aura",
    CurrentValue = false,
    Flag = "BlueheatToggle",
    Callback = function(Value)
        blueheatEnabled = Value
        Rayfield:Notify({
            Title = "Blueheat Aura",
            Content = Value and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
        if Value then
            createBlueheat()
        else
            destroyBlueheat()
        end
    end
})

AuraTab:CreateColorPicker({
    Name = "Blueheat Color",
    Color = Color3.new(0.0588235, 0.0588235, 1),
    Flag = "BlueheatColor",
    Callback = function(Value)
        updateBlueheatColor(Value)
        Rayfield:Notify({
            Title = "Blueheat Color",
            Content = "Color changed",
            Duration = 3,
            Image = 4483362458
        })
    end
})

AuraTab:CreateDropdown({
    Name = "Select Aura Effect",
    Options = {"Angel Wings", "Blueheat Aura", "None"},
    CurrentOption = {"None"},
    MultipleOptions = false,
    Flag = "AuraEffect",
    Callback = function(Options)
        local option = Options[1]
        if option == "Angel Wings" then
            angelWingsEnabled = true
            blueheatEnabled = false
            createAngelWings()
            destroyBlueheat()
            Rayfield:Notify({
                Title = "Aura Effect",
                Content = "Selected Angel Wings",
                Duration = 3,
                Image = 4483362458
            })
        elseif option == "Blueheat Aura" then
            angelWingsEnabled = false
            blueheatEnabled = true
            createBlueheat()
            destroyAngelWings()
            Rayfield:Notify({
                Title = "Aura Effect",
                Content = "Selected Blueheat Aura",
                Duration = 3,
                Image = 4483362458
            })
        else
            angelWingsEnabled = false
            blueheatEnabled = false
            destroyAngelWings()
            destroyBlueheat()
            Rayfield:Notify({
                Title = "Aura Effect",
                Content = "No aura selected",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

local AnimationTab = Window:CreateTab("Animations", 4483362458)

local animationBaseUrl = "http://www.roblox.com/asset/?id="
local animations = {
    R15 = { idle=animationBaseUrl.."2510196951", walk=animationBaseUrl.."2510202577", run=animationBaseUrl.."2510198475", jump=animationBaseUrl.."2510197830", climb=animationBaseUrl.."2510192778", fall=animationBaseUrl.."2510195892" },
    Loser = { idle=animationBaseUrl.."782841498", walk=animationBaseUrl.."616168032", run=animationBaseUrl.."616163682", jump=animationBaseUrl.."1083218792", climb=animationBaseUrl.."1083439238", fall=animationBaseUrl.."707829716" },
    Astronaut = { idle=animationBaseUrl.."891621366", jump=animationBaseUrl.."891627522", fall=animationBaseUrl.."891617961", walk=animationBaseUrl.."891667138", run=animationBaseUrl.."891636393", climb=animationBaseUrl.."891609353" },
    Bubbly = { idle=animationBaseUrl.."910004836", jump=animationBaseUrl.."910016857", fall=animationBaseUrl.."910001910", walk=animationBaseUrl.."910034870", run=animationBaseUrl.."910025107", climb=animationBaseUrl.."940996062" },
    Cartoony = { idle=animationBaseUrl.."742637544", jump=animationBaseUrl.."742637942", fall=animationBaseUrl.."742637151", walk=animationBaseUrl.."742640026", run=animationBaseUrl.."742638842", climb=animationBaseUrl.."742636889" },
    Confident = { idle=animationBaseUrl.."1069977950", jump=animationBaseUrl.."1069984524", fall=animationBaseUrl.."1069973677", walk=animationBaseUrl.."1070017263", run=animationBaseUrl.."1070001516", climb=animationBaseUrl.."1069946257" },
    Cowboy = { idle=animationBaseUrl.."1014390418", jump=animationBaseUrl.."1014394726", fall=animationBaseUrl.."1014384571", walk=animationBaseUrl.."1014421541", run=animationBaseUrl.."1014401683", climb=animationBaseUrl.."1014380606" },
    Elder = { idle=animationBaseUrl.."845397899", jump=animationBaseUrl.."845398858", fall=animationBaseUrl.."845396048", walk=animationBaseUrl.."845403856", run=animationBaseUrl.."845386501", climb=animationBaseUrl.."845392038" },
    Knight = { idle=animationBaseUrl.."657595757", jump=animationBaseUrl.."658409194", fall=animationBaseUrl.."657600338", walk=animationBaseUrl.."657552124", run=animationBaseUrl.."657564596", climb=animationBaseUrl.."658360781" },
    Levitation = { idle=animationBaseUrl.."616006778", jump=animationBaseUrl.."616008936", fall=animationBaseUrl.."616005863", walk=animationBaseUrl.."616013216", run=animationBaseUrl.."616010382", climb=animationBaseUrl.."616003713" },
    Mage = { idle=animationBaseUrl.."707742142", jump=animationBaseUrl.."707853694", fall=animationBaseUrl.."707829716", walk=animationBaseUrl.."707897309", run=animationBaseUrl.."707861613", climb=animationBaseUrl.."707826056" },
    Ninja = { idle=animationBaseUrl.."656117400", jump=animationBaseUrl.."656117878", fall=animationBaseUrl.."656115606", walk=animationBaseUrl.."656121766", run=animationBaseUrl.."656118852", climb=animationBaseUrl.."656114359" },
    Patrol = { idle=animationBaseUrl.."1149612882", jump=animationBaseUrl.."1148811837", fall=animationBaseUrl.."1148863382", walk=animationBaseUrl.."1151231493", run=animationBaseUrl.."1150967949", climb=animationBaseUrl.."1148811837" },
    Pirate = { idle=animationBaseUrl.."750781874", jump=animationBaseUrl.."750782230", fall=animationBaseUrl.."750780242", walk=animationBaseUrl.."750785693", run=animationBaseUrl.."750783738", climb=animationBaseUrl.."750779899" },
    Popstar = { idle=animationBaseUrl.."1212900985", jump=animationBaseUrl.."1212954642", fall=animationBaseUrl.."1212900995", walk=animationBaseUrl.."1212980338", run=animationBaseUrl.."1212980348", climb=animationBaseUrl.."1213044953" },
    Princess = { idle=animationBaseUrl.."941003647", jump=animationBaseUrl.."941008832", fall=animationBaseUrl.."941000007", walk=animationBaseUrl.."941028902", run=animationBaseUrl.."941015281", climb=animationBaseUrl.."940996062" },
    Robot = { idle=animationBaseUrl.."616088211", jump=animationBaseUrl.."616090535", fall=animationBaseUrl.."616087089", walk=animationBaseUrl.."616095330", run=animationBaseUrl.."616091570", climb=animationBaseUrl.."616086039" },
    Sneaky = { idle=animationBaseUrl.."1132473842", jump=animationBaseUrl.."1132489853", fall=animationBaseUrl.."1132469004", walk=animationBaseUrl.."1132510133", run=animationBaseUrl.."1132494274", climb=animationBaseUrl.."1132461372" },
    Stylish = { idle=animationBaseUrl.."616136790", jump=animationBaseUrl.."616139451", fall=animationBaseUrl.."616134815", walk=animationBaseUrl.."616146177", run=animationBaseUrl.."616140816", climb=animationBaseUrl.."616133594" },
    Superhero = { idle=animationBaseUrl.."616111295", jump=animationBaseUrl.."616115533", fall=animationBaseUrl.."616108001", walk=animationBaseUrl.."616122287", run=animationBaseUrl.."616117076", climb=animationBaseUrl.."616104706" },
    Toy = { idle=animationBaseUrl.."782841498", jump=animationBaseUrl.."782847020", fall=animationBaseUrl.."782846423", walk=animationBaseUrl.."782843345", run=animationBaseUrl.."782842708", climb=animationBaseUrl.."782843869" },
    Vampire = { idle=animationBaseUrl.."1083445855", jump=animationBaseUrl.."1083455352", fall=animationBaseUrl.."1083443587", walk=animationBaseUrl.."1083473930", run=animationBaseUrl.."1083462077", climb=animationBaseUrl.."1083439238" },
    Werewolf = { idle=animationBaseUrl.."1083195517", jump=animationBaseUrl.."1083218792", fall=animationBaseUrl.."1083189019", walk=animationBaseUrl.."1083178339", run=animationBaseUrl.."1083216690", climb=animationBaseUrl.."1083182000" },
    Zombie = { idle=animationBaseUrl.."616158929", jump=animationBaseUrl.."616161997", fall=animationBaseUrl.."616157476", walk=animationBaseUrl.."616168032", run=animationBaseUrl.."616163682", climb=animationBaseUrl.."616156119" },
    RealisticZombie = { idle=animationBaseUrl.."3489171152", jump=animationBaseUrl.."616161997", fall=animationBaseUrl.."616157476", walk=animationBaseUrl.."3489174223", run=animationBaseUrl.."3489173414", climb=animationBaseUrl.."616156119" },
}

local currentAnimationPresets = { idle="Zombie", walk="R15", run="Zombie", jump="Ninja", climb="R15", fall="Mage" }
local animationPresetNames = {}
for k,_ in pairs(animations) do table.insert(animationPresetNames, k) end

local function applyAnimation(animate, presetName, animationType)
    local preset = animations[presetName]
    if not preset then return end
    local animId = preset[animationType]
    if not animId then return end
    if animationType == "idle" and animate.idle and animate.idle:FindFirstChild("Animation1") then
        animate.idle.Animation1.AnimationId = animId
    elseif animationType == "walk" and animate.walk and animate.walk:FindFirstChild("WalkAnim") then
        animate.walk.WalkAnim.AnimationId = animId
    elseif animationType == "run" and animate.run and animate.run:FindFirstChild("RunAnim") then
        animate.run.RunAnim.AnimationId = animId
    elseif animationType == "jump" and animate.jump and animate.jump:FindFirstChild("JumpAnim") then
        animate.jump.JumpAnim.AnimationId = animId
    elseif animationType == "climb" and animate.climb and animate.climb:FindFirstChild("ClimbAnim") then
        animate.climb.ClimbAnim.AnimationId = animId
    elseif animationType == "fall" and animate.fall and animate.fall:FindFirstChild("FallAnim") then
        animate.fall.FallAnim.AnimationId = animId
    end
end

local function applySelectedAnimation(animationType)
    local char = LocalPlayer.Character
    if not char then return end
    local animate = char:FindFirstChild("Animate")
    if not animate then return end
    local presetName = currentAnimationPresets[animationType]
    applyAnimation(animate, presetName, animationType)
end

local animationTypes = {"idle", "walk", "run", "jump", "climb", "fall"}
for _, animType in ipairs(animationTypes) do
    local displayName = animType:sub(1,1):upper()..animType:sub(2)
    AnimationTab:CreateDropdown({
        Name = displayName.." Animation",
        Options = animationPresetNames,
        CurrentOption = {"R15"},
        MultipleOptions = false,
        Flag = displayName.."Animation",
        Callback = function(Options)
            local value = Options[1]
            currentAnimationPresets[animType] = value
            applySelectedAnimation(animType)
            Rayfield:Notify({
                Title = displayName.." Animation",
                Content = "Selected: "..value,
                Duration = 3,
                Image = 4483362458
            })
        end
    })
end

LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("HumanoidRootPart", 5)
    if angelWingsEnabled then
        createAngelWings()
    end
    if blueheatEnabled then
        createBlueheat()
    end
    for _, animType in ipairs(animationTypes) do
        applySelectedAnimation(animType)
    end
end)

local initialChar = LocalPlayer.Character
if initialChar then
    initialChar:WaitForChild("HumanoidRootPart", 5)
    if angelWingsEnabled then
        createAngelWings()
    end
    if blueheatEnabled then
        createBlueheat()
    end
    for _, animType in ipairs(animationTypes) do
        applySelectedAnimation(animType)
    end
end

local ThemeTab = Window:CreateTab("Settings", 4483362458) -- Tạo tab mới cho cài đặt

ThemeTab:CreateDropdown({
    Name = "Select Theme",
    Options = {"Default", "Dark", "Light", "Aqua", "Jester", "Vape", "Rose", "Midnight"},
    CurrentOption = {"Default"},
    MultipleOptions = false,
    Flag = "ThemeSelector",
    Callback = function(Option)
        Rayfield:SetTheme(Option[1]) -- Cập nhật theme
        Rayfield:Notify({
            Title = "Theme Changed",
            Content = "Switched to " .. Option[1] .. " theme.",
            Duration = 3,
            Image = 4483362458
        })
    end
})

-- Input Bindings
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent or not isScriptRunning then return end
    if input.KeyCode == Enum.KeyCode.T then
        espActive = not espActive
        Rayfield:Notify({
            Title = "ESP",
            Content = espActive and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
        if espActive then
            reloadESP()
        else
            espcontainer:ClearAllGroups()
        end
    elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
        task.spawn(shootMurderer)
    elseif input.KeyCode == Enum.KeyCode.Z then
        autoFarm = not autoFarm
        Rayfield:Notify({
            Title = "AutoFarm",
            Content = autoFarm and "ON" or "OFF",
            Duration = 3,
            Image = 4483362458
        })
        if autoFarm then
            task.spawn(autoFarmCoins)
        end
    end
end)

-- Initialize
local function initialize()
    local success = pcall(function()
        LocalPlayer:WaitForChild("PlayerGui", 10)
        ReplicatedStorage:WaitForChild("Remotes", 10):WaitForChild("Gameplay", 10):WaitForChild("PlayerDataChanged", 10)
    end)
    if not success or not isMurderMystery2() then
        Rayfield:Notify({Title = "Error", Content = "Failed to initialize. Not in Murder Mystery 2?", Duration = 5})
        return
    end
    isScriptRunning = true
    pcall(function()
        local gameplay = ReplicatedStorage.Remotes.Gameplay.PlayerDataChanged
        gameplay.OnClientEvent:Connect(function(data)
            playerData = data
            if espActive then
                reloadESP()
            end
        end)
    end)
    if espActive then
        reloadESP()
    end
    Rayfield:Notify({
        Title = "MM2 & Aura GUI",
        Content = "GUI loaded successfully!",
        Duration = 5,
        Image = 4483362458
    })
end

pcall(initialize)
