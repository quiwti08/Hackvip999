local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TextChatService = game:GetService("TextChatService")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local AIM_RADIUS = 300
local AIM_FOV = 100
local jumpHappierKey = Enum.KeyCode.C
local jumpHappierAnim = "http://www.roblox.com/asset/?id=15609995579"
local currentTrack = nil
local autostomp = false
local AIM_SMOOTHNESS = 0.9
local TriggerBotEnabled = true
local tracerEnabled = false
local tracers = {}
local rainbowMode = false
local increasing = false
local autobringplayer = true
local colorValue = 255
local fovRadius = 20
local movementEnabled = false
local jumpPower = 50
local walkSpeed = 16
local teamCheck = false
local HitboxEnabled = false
local bringEnabled = false
local originalCollides = {}  -- Table lưu {part = originalCanCollide}
local HitboxTransparency = 1
local HitboxSize = 15
local aimStatusKey = Enum.KeyCode.H  -- Default H cho Aim Status
local killModeKey = Enum.KeyCode.Y   -- Default Y cho Kill Mode
local KillModeType = "Below"  
local CsyncRadius = 10        
local CsyncHeight = -8     
local CsyncSpeed = 1        
local awEnabled = false
local awInstances = {}
local awHrp = nil
local awColor = Color3.new(1, 1, 1)
local bhEnabled = false
local bhInstances = {}
local bhColor = Color3.new(0.0588235, 0.0588235, 1)
local CurrentFOV = Camera.FieldOfView
local korbloxEnabled = true
local addedAccessories = {}
local runServiceConn
local Time = 1
local RightUpperLegAccessories = {
    {id = 18457575895}, 
}
local FlyEnabled = false
local FlySpeed = 35
local AntiLockEnabled = false
local AntiLockType = "Behind" -- Chế độ mặc định
local AntiLockModes = {
    "Behind",
    "Down",
    "Forward",
    "Left",
    "One",
    "Right",
    "Up",
    "Zero"
}
local possibleRemotes = {
    "MAINEVENT",
    "MainEvent",
    "Remote",
    "Packages",
    "MainRemotes"
}

-- Initialize Venyx UI
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zxciaz/VenyxUI/main/Reuploaded"))()

local themes = {
    Background = Color3.fromRGB(24, 24, 24),
    Glow = Color3.fromRGB(255, 255, 255),
    Accent = Color3.fromRGB(10, 10, 10),
    LightContrast = Color3.fromRGB(20, 20, 20),
    DarkContrast = Color3.fromRGB(14, 14, 14),
    TextColor = Color3.fromRGB(255, 255, 255)
}

local venyx = library.new("nigga.lol | vhuy-anhchangm52", 5013109572)

-- Initialize Notifications tables
local Notifications = {}
local TargetNotifications = {}
local lastSubject = nil
local defaultMinDistance = nil 
local defaultCameraType = nil  

-- Global settings
getgenv().YeuTuyen = {
    Status = true,
    Hitpart = "Head",
    SelectedTargets = {},
    ESPEnabled = true,
    Mode = "Aimlock",
    CheckIfJumped = true,
    CheckIfJumpedAimPart = "HumanoidRootPart",
    AutoPingSets = true,
    UseShake = true,
    ShakePower = 1,
    PredictMovement = false,
    PredictionVelocity = 0.17221418,
    UnderGround = true,
    DetectDesync = true,
    Detection = 75,
}

-- FOV Circle
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Radius = AIM_FOV
fovCircle.Thickness = 2
fovCircle.NumSides = 100
fovCircle.Color = Color3.fromRGB(255, 255, 255)
fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

task.spawn(function()
    while true do
        task.wait(0.01)
        
        if not rainbowMode then
            -- Đổi trắng <-> đen
            if increasing then
                colorValue = colorValue + 1
                if colorValue >= 255 then
                    increasing = false
                end
            else
                colorValue = colorValue - 1
                if colorValue <= 0 then
                    increasing = true
                end
            end
            fovCircle.Color = Color3.fromRGB(colorValue, colorValue, colorValue)
        else
            -- Rainbow Mode
            local hue = tick() % 5 / 5
            fovCircle.Color = Color3.fromHSV(hue, 1, 1)
        end
    end
end)

local function applyThemeNow()
    for k, c in pairs(themes) do
        pcall(function() venyx:setTheme(k, c) end)
        pcall(function() library:setTheme(k, c) end)
    end
end
applyThemeNow()

-- Notification function
local function sendNotification(title, text, duration)
    local notifGui = Instance.new("ScreenGui")
    notifGui.Name = "DhuyxNotification_" .. tostring(tick())
    notifGui.Parent = game:GetService("CoreGui")
    notifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    notifGui.DisplayOrder = 999999 - #Notifications
    notifGui.IgnoreGuiInset = true
    notifGui.ResetOnSpawn = false
    local offsetY = 20 + (#Notifications * 80)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 280, 0, 70)
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frame.BorderSizePixel = 0
    frame.AnchorPoint = Vector2.new(1, 1)
    frame.Position = UDim2.new(1, -20, 1, -offsetY)
    frame.Transparency = 1
    frame.Parent = notifGui
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 40))
    }
    gradient.Rotation = 90
    gradient.Parent = frame
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 255, 255)
    stroke.Thickness = 2
    stroke.Transparency = 0.5
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = frame
    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.ZIndex = -1
    shadow.BackgroundTransparency = 1
    shadow.Parent = frame
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 0, 25)
    titleLabel.Position = UDim2.new(0, 5, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "Nigga.lol"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextTruncate = Enum.TextTruncate.AtEnd
    titleLabel.Parent = frame
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -10, 1, -35)
    textLabel.Position = UDim2.new(0, 5, 0, 30)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text or "Notification"
    textLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 14
    textLabel.TextWrapped = true
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextTruncate = Enum.TextTruncate.AtEnd
    textLabel.Parent = frame
    table.insert(Notifications, notifGui)
    local fadeIn = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
    fadeIn:Play()
    task.spawn(function()
        task.wait(duration or 3)
        local fadeOut = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Transparency = 1})
        fadeOut:Play()
        fadeOut.Completed:Connect(function()
            for i, gui in ipairs(Notifications) do
                if gui == notifGui then
                    table.remove(Notifications, i)
                    break
                end
            end
            notifGui:Destroy()
            for i, gui in ipairs(Notifications) do
                local frame = gui:FindFirstChildOfClass("Frame")
                if frame then
                    local newOffsetY = 20 + ((i - 1) * 80)
                    local tween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 1, -newOffsetY)})
                    tween:Play()
                end
            end
        end)
    end)
end

-- Target notification function
local function sendTargetNotification(plr)
    local notifGui = Instance.new("ScreenGui")
    notifGui.Name = "TargetNotification_" .. plr.Name
    notifGui.Parent = game:GetService("CoreGui")
    notifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    notifGui.IgnoreGuiInset = true
    notifGui.ResetOnSpawn = false
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 250, 0, 150)
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frame.BorderSizePixel = 0
    frame.Position = UDim2.new(0, 20, 0.5, -75)
    frame.Transparency = 0
    frame.Parent = notifGui
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 40))
    }
    gradient.Rotation = 90
    gradient.Parent = frame
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 255, 255)
    stroke.Thickness = 2
    stroke.Transparency = 0.5
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = frame
    local avatar = Instance.new("ImageLabel")
    avatar.Size = UDim2.new(0, 50, 0, 50)
    avatar.Position = UDim2.new(0, 10, 0, 10)
    avatar.BackgroundTransparency = 1
    avatar.Image = Players:GetUserThumbnailAsync(plr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size48x48)
    avatar.Parent = frame
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -70, 0, 25)
    titleLabel.Position = UDim2.new(0, 70, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "Target"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = frame
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, -10, 0, 20)
    nameLabel.Position = UDim2.new(0, 10, 0, 60)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = plr.DisplayName .. " (@" .. plr.Name .. ")"
    nameLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    nameLabel.Font = Enum.Font.Gotham
    nameLabel.TextSize = 14
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    nameLabel.Parent = frame
    local ageLabel = Instance.new("TextLabel")
    ageLabel.Size = UDim2.new(1, -10, 0, 20)
    ageLabel.Position = UDim2.new(0, 10, 0, 80)
    ageLabel.BackgroundTransparency = 1
    ageLabel.Text = "Age: " .. plr.AccountAge .. " days"
    ageLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    ageLabel.Font = Enum.Font.Gotham
    ageLabel.TextSize = 14
    ageLabel.TextXAlignment = Enum.TextXAlignment.Left
    ageLabel.Parent = frame
    local status = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character.Humanoid.Health > 0 and "Alive" or "Dead"
    local health = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character.Humanoid.Health or 0
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, -10, 0, 20)
    statusLabel.Position = UDim2.new(0, 10, 0, 100)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Status: " .. status .. " | Health: " .. math.floor(health)
    statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextSize = 14
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.Parent = frame
    table.insert(TargetNotifications, notifGui)
    task.spawn(function()
        task.wait(3)
        local slideOut = TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(0, -300, 0.5, -75)})
        slideOut:Play()
        slideOut.Completed:Connect(function()
            for i, gui in ipairs(TargetNotifications) do
                if gui == notifGui then
                    table.remove(TargetNotifications, i)
                    break
                end
            end
            notifGui:Destroy()
        end)
    end)
end

-- Remove ESP
local function removeESP(plr)
    if plr.Character then
        local char = plr.Character
        local hl = char:FindFirstChild("ESPHighlight")
        if hl then hl:Destroy() end
        local gui = char:FindFirstChild("NameESP")
        if gui then gui:Destroy() end
    end
end

local function updateESP(plr)
    if plr == LocalPlayer then return end
    if not plr.Character or not plr.Character:FindFirstChild("Head") then return end
    local char = plr.Character
    local head = char.Head
    
    -- Highlight
    local hl = char:FindFirstChild("ESPHighlight")
    if not hl then
        hl = Instance.new("Highlight")
        hl.Name = "ESPHighlight"
        hl.Adornee = char
        hl.FillTransparency = 0.4
        hl.OutlineTransparency = 0
        hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        hl.Parent = char
    end
    local isSelected = getgenv().YeuTuyen.SelectedTargets[plr.Name]
    hl.FillColor = rainbowMode and getRainbowColor() or (isSelected and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255))
    hl.OutlineColor = rainbowMode and getRainbowColor() or Color3.fromRGB(255, 255, 255)

    -- Name Billboard
    local gui = char:FindFirstChild("NameESP")
    if not gui then
        gui = Instance.new("BillboardGui")
        gui.Name = "NameESP"
        gui.Adornee = head
        gui.Size = UDim2.new(0, 200, 0, 30)
        gui.StudsOffset = Vector3.new(0, 2.5, 0)
        gui.AlwaysOnTop = true
        gui.Parent = char
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Name = "NameLabel"
        nameLabel.Size = UDim2.new(1, 0, 1, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.TextStrokeTransparency = 0.5
        nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        nameLabel.Font = Enum.Font.SourceSansBold
        nameLabel.TextScaled = true
        nameLabel.Parent = gui
    end
    local nameLabel = gui:FindFirstChild("NameLabel")
    if nameLabel then
        nameLabel.Text = plr.DisplayName .. " (" .. plr.Name .. ")"
        nameLabel.TextColor3 = rainbowMode and getRainbowColor() or (isSelected and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255))
    end

    -- Tracer
    if tracerEnabled then
        local tracer = tracers[plr.Name]
        if not tracer then
            tracer = Drawing.new("Line")
            tracer.Thickness = 2
            tracer.Transparency = 1
            tracers[plr.Name] = tracer
        end
        local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
        if onScreen then
            tracer.Visible = true
            tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
            tracer.To = Vector2.new(screenPos.X, screenPos.Y)
            tracer.Color = rainbowMode and getRainbowColor() or (isSelected and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255))
        else
            tracer.Visible = false
        end
    else
        if tracers[plr.Name] then
            tracers[plr.Name]:Remove()
            tracers[plr.Name] = nil
        end
    end
end

-- Rainbow update
local rainbowHue = 0
RunService.RenderStepped:Connect(function()
    rainbowHue = (rainbowHue + 0.01) % 1
end)

local function getRainbowColor()
    return Color3.fromHSV(rainbowHue, 1, 1)
end

-- Hit effect (2 giây rainbow outline)
local function RainbowHitEffect(char)
    if not char then return end
    local hl = char:FindFirstChild("ESPHighlight")
    if not hl then return end

    local effect = Instance.new("Highlight")
    effect.Adornee = char
    effect.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    effect.FillTransparency = 1
    effect.OutlineTransparency = 0
    effect.Parent = char

    local t = 0
    local conn
    conn = RunService.RenderStepped:Connect(function(dt)
        if t > 2 then
            effect:Destroy()
            conn:Disconnect()
        else
            t += dt
            effect.OutlineColor = getRainbowColor()
        end
    end)
end

RunService.RenderStepped:Connect(function()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local char = plr.Character
            local head = char and char:FindFirstChild("Head")
            local hum = char and char:FindFirstChildOfClass("Humanoid")

            if char and head and hum and hum.Health > 0 then
                -- ESP
                if getgenv().YeuTuyen.ESPEnabled then
                    local hl = char:FindFirstChild("ESPHighlight") or Instance.new("Highlight")
                    hl.Name = "ESPHighlight"
                    hl.Adornee = char
                    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    hl.FillTransparency = 0.4
                    hl.OutlineTransparency = 0
                    hl.Parent = char

                    local gui = char:FindFirstChild("NameESP") or Instance.new("BillboardGui")
                    if not char:FindFirstChild("NameESP") then
                        gui.Name = "NameESP"
                        gui.Adornee = head
                        gui.Size = UDim2.new(0, 200, 0, 30)
                        gui.StudsOffset = Vector3.new(0, 2.5, 0)
                        gui.AlwaysOnTop = true
                        gui.Parent = char
                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Name = "NameLabel"
                        nameLabel.Size = UDim2.new(1, 0, 1, 0)
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.TextStrokeTransparency = 0.5
                        nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                        nameLabel.Font = Enum.Font.SourceSansBold
                        nameLabel.TextScaled = true
                        nameLabel.Parent = gui
                    end
                    local nameLabel = gui:FindFirstChild("NameLabel")

                    -- Kiểm tra target
                    local isTarget = getgenv().YeuTuyen.SelectedTargets[plr.Name]
                    local color = Color3.fromRGB(255, 255, 255) -- mặc định trắng
                    if isTarget then
                        color = rainbowMode and getRainbowColor() or Color3.fromRGB(0, 255, 0)
                    end

                    hl.FillColor = color
                    hl.OutlineColor = color
                    if nameLabel then
                        nameLabel.Text = plr.DisplayName .. " (" .. plr.Name .. ")"
                        nameLabel.TextColor3 = color
                    end
                else
                    local hl = char:FindFirstChild("ESPHighlight")
                    if hl then hl:Destroy() end
                    local gui = char:FindFirstChild("NameESP")
                    if gui then gui:Destroy() end
                end

                -- Tracer
                if tracerEnabled then
                    local tracer = tracers[plr.Name] or Drawing.new("Line")
                    tracers[plr.Name] = tracer
                    tracer.Thickness = 2

                    local isTarget = getgenv().YeuTuyen.SelectedTargets[plr.Name]
                    if not isTarget then
                        -- Không còn target => xoá tracer
                        if tracers[plr.Name] then
                            tracers[plr.Name]:Remove()
                            tracers[plr.Name] = nil
                        end
                    else
                        local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                        if onScreen then
                            tracer.Visible = true
                            tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                            tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                            tracer.Color = rainbowMode and getRainbowColor() or Color3.fromRGB(0, 255, 0)
                        else
                            tracer.Visible = false
                        end
                    end
                else
                    if tracers[plr.Name] then
                        tracers[plr.Name]:Remove()
                        tracers[plr.Name] = nil
                    end
                end
            else
                -- Xoá ESP + Tracer khi chết
                if tracers[plr.Name] then
                    tracers[plr.Name]:Remove()
                    tracers[plr.Name] = nil
                end
                local hl = char and char:FindFirstChild("ESPHighlight")
                if hl then hl:Destroy() end
                local gui = char and char:FindFirstChild("NameESP")
                if gui then gui:Destroy() end
            end
        end
    end

    -- Circle update
    if fovCircle.Visible and rainbowMode then
        fovCircle.Color = getRainbowColor()
    elseif fovCircle.Visible then
        fovCircle.Color = Color3.fromRGB(255, 255, 255)
    end
end)

local function checkTeam(player)
    if teamCheck and player.Team == LocalPlayer.Team then
        return true  -- cùng team => bỏ qua
    end
    return false   -- khác team => hợp lệ
end

local function getPlayerList()
    local list = {}
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local display = plr.DisplayName .. " (@" .. plr.Name .. ")"
            if getgenv().YeuTuyen.SelectedTargets[plr.Name] then
                display = display .. " ✔"
            end
            table.insert(list, display)
        end
    end
    return list
end

-- Refresh dropdown khi player join/leave
Players.PlayerAdded:Connect(function() venyx:RefreshDropdown("Player List", getPlayerList()) end)
Players.PlayerRemoving:Connect(function() venyx:RefreshDropdown("Player List", getPlayerList()) end)

-- GetBestTarget for Aimlock
local function GetBestTarget()
    if not getgenv().YeuTuyen or not getgenv().YeuTuyen.SelectedTargets then return end
    local bestTarget, bestPart, bestHumanoid = nil, nil, nil
    local closestDist = math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and getgenv().YeuTuyen.SelectedTargets[player.Name] and not checkTeam(player) then
            local char = player.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            local part = char and char:FindFirstChild(getgenv().YeuTuyen.Hitpart)
            if humanoid and humanoid.Health > 0 and part and not humanoid.PlatformStand then
                local bodyEffects = char:FindFirstChild("BodyEffects")
                local isKOd = bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value
                local isGrabbed = char:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
                if not isKOd and not isGrabbed then
                    local myRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    if myRoot then
                        local dist = (myRoot.Position - part.Position).Magnitude
                        if dist < closestDist then
                            local origin = Camera.CFrame.Position
                            local direction = (part.Position - origin).Unit * 500
                            local params = RaycastParams.new()
                            params.FilterType = Enum.RaycastFilterType.Blacklist
                            params.FilterDescendantsInstances = {LocalPlayer.Character}
                            params.IgnoreWater = true
                            local result = Workspace:Raycast(origin, direction, params)
                            if result and result.Instance:IsDescendantOf(char) then
                                bestTarget = player
                                bestPart = part
                                bestHumanoid = humanoid
                                closestDist = dist
                            end
                        end
                    end
                end
            end
        end
    end
    return bestTarget, bestPart, bestHumanoid
end

-- GetAimbotTarget for Aimbot
local function GetAimbotTarget()
    local bestTarget, bestPart, bestHumanoid = nil, nil, nil
    local closestScreenDist = AIM_FOV
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local char = player.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            local part = char and char:FindFirstChild(getgenv().YeuTuyen.Hitpart)
            if humanoid and humanoid.Health > 0 and part and not humanoid.PlatformStand and not checkTeam(player) then
                local bodyEffects = char:FindFirstChild("BodyEffects")
                local isKOd = bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value
                local isGrabbed = char:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
                if not isKOd and not isGrabbed then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    if onScreen then
                        local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                        local screenDist = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                        if screenDist <= AIM_FOV and screenDist < closestScreenDist then
                            local origin = Camera.CFrame.Position
                            local direction = (part.Position - origin).Unit * 500
                            local params = RaycastParams.new()
                            params.FilterType = Enum.RaycastFilterType.Blacklist
                            params.FilterDescendantsInstances = {LocalPlayer.Character}
                            params.IgnoreWater = true
                            local result = Workspace:Raycast(origin, direction, params)
                            if result and result.Instance:IsDescendantOf(char) then
                                bestTarget = player
                                bestPart = part
                                bestHumanoid = humanoid
                                closestScreenDist = screenDist
                            end
                        end
                    end
                end
            end
        end
    end
    return bestTarget, bestPart, bestHumanoid
end

-- Select closest to mouse
local function SelectClosestToMouse()
    local closestPlayer = nil
    local closestScreenDist = AIM_RADIUS
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
            if onScreen then
                local mousePos = Vector2.new(Mouse.X, Mouse.Y)
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                if dist < closestScreenDist then
                    closestScreenDist = dist
                    closestPlayer = player
                end
            end
        end
    end
    if closestPlayer then
        local name = closestPlayer.Name
        if getgenv().YeuTuyen.SelectedTargets[name] then
            getgenv().YeuTuyen.SelectedTargets[name] = nil
            sendNotification("Target", "Deselected: " .. name, 2)
            updateESP(closestPlayer)
        else
            getgenv().YeuTuyen.SelectedTargets[name] = true
            sendNotification("Target", "Selected: " .. name, 2)
            sendTargetNotification(closestPlayer)
            updateESP(closestPlayer)
        end
    else
        sendNotification("Target", "No target found near mouse!", 2)
    end
end

local function isAlive(plr)
    if not plr or not plr.Character then return false end
    local hum = plr.Character:FindFirstChildOfClass("Humanoid")
    if not hum or hum.Health <= 0 then return false end
    local be = plr.Character:FindFirstChild("BodyEffects")
    if be then
        local ko = be:FindFirstChild("K.O")
        local grabbed = be:FindFirstChild("GRABBING_CONSTRAINT")
        if (ko and ko.Value) or (grabbed and grabbed.Value) then return false end
    end
    return true
end

local function UpdateFly()
    if FlyEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local root = LocalPlayer.Character.HumanoidRootPart
        local moveDirection = LocalPlayer.Character.Humanoid.MoveDirection
        local flySpeed = FlySpeed
        local vertical = UIS:IsKeyDown(Enum.KeyCode.Space) and flySpeed / 8 or UIS:IsKeyDown(Enum.KeyCode.LeftControl) and -flySpeed / 8 or 0
        root.CFrame = root.CFrame + moveDirection * deltaTime * flySpeed * 10
        root.CFrame = root.CFrame + Vector3.new(0, vertical, 0)
        root.Velocity = root.Velocity * Vector3.new(1, 0, 1) + Vector3.new(0, 1.9, 0)
    end
end

local function getBestTargetForKill()
    local closestTarget = nil
    local closestDist = math.huge
    local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not myHRP then return nil end

    for name, _ in pairs(getgenv().YeuTuyen.SelectedTargets) do
        local plr = Players:FindFirstChild(name)
        if plr and plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local hum = plr.Character:FindFirstChildOfClass("Humanoid")
            local bodyEffects = plr.Character:FindFirstChild("BodyEffects")
            local isKO = bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value
            local isGrabbed = plr.Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
            if hum and hum.Health > 0 and not isKO and not isGrabbed then
                local dist = (myHRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                if dist < closestDist then
                    closestTarget = plr
                    closestDist = dist
                end
            end
        end
    end
    return closestTarget
end

local function getBestInvalidTargetForKill()
    local closestTarget = nil
    local closestDist = math.huge
    local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not myHRP then return nil end

    for name, _ in pairs(getgenv().YeuTuyen.SelectedTargets) do
        local plr = Players:FindFirstChild(name)
        if plr and plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local hum = plr.Character:FindFirstChildOfClass("Humanoid")
            local bodyEffects = plr.Character:FindFirstChild("BodyEffects")
            local isKO = bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value
            local isGrabbed = plr.Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
            if hum and hum.Health > 0 and (isKO or isGrabbed) then
                local dist = (myHRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                if dist < closestDist then
                    closestTarget = plr
                    closestDist = dist
                end
            end
        end
    end
    return closestTarget
end

local function AutoStomp()
    if not autostomp then return end
    
    local chosenRemote = nil
    
    -- kiểm tra xem có Remote nào tồn tại không
    for _, name in ipairs(possibleRemotes) do
        local obj = ReplicatedStorage:FindFirstChild(name)
        if obj and obj:IsA("RemoteEvent") then
            chosenRemote = obj
            break
        end
    end

    if chosenRemote then
        -- Nếu tìm thấy Remote thì dùng FireServer
        chosenRemote:FireServer("Stomp")
    else
        -- fallback: giả lập nhấn phím E
        local vim = game:GetService("VirtualInputManager")
        for i = 1, 5 do
            vim:SendKeyEvent(true, Enum.KeyCode.E, false, game)  
            task.wait(0.1)  
            vim:SendKeyEvent(false, Enum.KeyCode.E, false, game) 
        end
    end
end

local function AutoGrab()
    if not autobringplayer then return end
    
    local chosenRemote = nil

    -- tìm remote có thể dùng
    for _, name in ipairs(possibleRemotes) do
        local obj = ReplicatedStorage:FindFirstChild(name)
        if obj and obj:IsA("RemoteEvent") then
            chosenRemote = obj
            break
        end
    end

    if chosenRemote then
        -- ưu tiên gọi FireServer
        chosenRemote:FireServer("Grabbing", true)
    else
        -- fallback: bấm phím G
        for i = 1, 1 do
            vim:SendKeyEvent(true, Enum.KeyCode.G, false, game)  
            task.wait(0.1)  
            vim:SendKeyEvent(false, Enum.KeyCode.G, false, game) 
        end
    end
end

local function integrateKillMode()
    if getgenv().YeuTuyen.KillMode then
        pcall(function()
            local myChar = LocalPlayer.Character
            local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
            if not myHRP then return end

            if originalPosition == nil then
                originalPosition = myHRP.CFrame
            end

            -- Kiểm tra mục tiêu hợp lệ trước
            local target = getBestTargetForKill()

            -- Nếu không có target hợp lệ thì check target bị K.O.
            if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") or not target.Character:FindFirstChild("Head") then
                local invalidTarget = getBestInvalidTargetForKill()
                if invalidTarget and invalidTarget.Character then
                    local targetChar = invalidTarget.Character
                    local bodyEffects = targetChar:FindFirstChild("BodyEffects")
                    local isKO = bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value

                    if isKO then  -- Chỉ xử lý nếu target bị K.O.
                        local targetUpperTorso = targetChar:FindFirstChild("UpperTorso") or targetChar:FindFirstChild("Torso")
                        if targetUpperTorso then
                            -- Teleport đến UpperTorso
                            myHRP.CFrame = CFrame.new(targetUpperTorso.Position + Vector3.new(0, 2, 0))

                            AutoGrab()

                            AutoStomp()

                            task.wait(0.4)

                            myHRP.CFrame = originalPosition
                            task.wait(0.4)

                            originalPosition = nil
                            getgenv().YeuTuyen.KillMode = false
                        end
                    end
                end
            end

            -- Logic cho mục tiêu hợp lệ (positioning quanh target alive)
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and target.Character:FindFirstChild("Head") then
                local targetHRP = target.Character.HumanoidRootPart
                local targetPos = targetHRP.Position

                local offset = Vector3.new(0, CsyncHeight, 0)

                if KillModeType == "Orbit" then
                    local t = tick() * CsyncSpeed
                    offset = Vector3.new(
                        math.cos(t) * CsyncRadius,
                        CsyncHeight,
                        math.sin(t) * CsyncRadius
                    )
                elseif KillModeType == "Random" then
                    local randX = (math.random() * 2 - 1) * CsyncRadius
                    local randZ = (math.random() * 2 - 1) * CsyncRadius
                    offset = Vector3.new(randX, CsyncHeight, randZ)
                end

                myHRP.CFrame = CFrame.new(targetPos + offset, targetPos)

                if Camera.CameraSubject ~= target.Character.Head then
                    lastSubject = Camera.CameraSubject
                    Camera.CameraSubject = target.Character.Head
                end
                Camera.MinZoomDistance = 5
                if Camera.CameraType == Enum.CameraType.Fixed or Camera.CameraType == Enum.CameraType.FirstPerson then
                    Camera.CameraType = Enum.CameraType.Classic
                end
            else
                -- Nếu không có mục tiêu hợp lệ, teleport về vị trí cũ và reset camera
                Camera.CameraSubject = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") or lastSubject
                Camera.CameraType = Enum.CameraType.Custom
                Camera.MinZoomDistance = defaultMinDistance or 0.5
                if LocalPlayer.Character then
                    LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(0, 0, 0)
                end
            end
        end)
    end
end

local hitParts = {
    "Head", "HumanoidRootPart", "UpperTorso", "LowerTorso", "LeftUpperArm", "LeftLowerArm", "LeftHand",
    "RightUpperArm", "RightLowerArm", "RightHand", "LeftUpperLeg", "LeftLowerLeg", "LeftFoot",
    "RightUpperLeg", "RightLowerLeg", "RightFoot", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"
}

local function validPart(p)
    if not p or not p.Parent or not p.Parent:FindFirstChild("Humanoid") then return false end
    local player = Players:GetPlayerFromCharacter(p.Parent)
    if not player or not getgenv().YeuTuyen.SelectedTargets[player.Name] then return false end
    for _, n in ipairs(hitParts) do
        if p.Name:lower() == n:lower() then return true end
    end
    return false
end

if not mouse1press then
    function mouse1press()
        local pos = game:GetService("UserInputService"):GetMouseLocation()
        VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, true, game, 0)
    end
end

if not mouse1release then
    function mouse1release()
        local pos = game:GetService("UserInputService"):GetMouseLocation()
        VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, false, game, 0)
    end
end

local function click()
    if UserInputService.TouchEnabled then
        local touchPos = UserInputService:GetMouseLocation()
        VirtualInputManager:SendTouchEvent(0, Enum.UserInputState.Begin, touchPos)
        task.wait()
        VirtualInputManager:SendTouchEvent(0, Enum.UserInputState.End, touchPos)
    else
        if mouse1press then
            mouse1press()
            mouse1release()
        elseif mouse1click then
            mouse1click()
        end
    end
end

local function distToCursor(part)
    local v, vis = Camera:WorldToViewportPoint(part.Position)
    if not vis then return math.huge end
    local m = UserInputService.TouchEnabled and Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) or UserInputService:GetMouseLocation()
    return (Vector2.new(v.X, v.Y) - Vector2.new(m.X, m.Y)).Magnitude
end

local function GetBestTargetPart()
    local bestPart, bestDist = nil, fovRadius
    for name, _ in pairs(getgenv().YeuTuyen.SelectedTargets) do
        local plr = Players:FindFirstChild(name)
        if plr and plr ~= LocalPlayer and isAlive(plr) and plr.Character then 
            for _, partName in ipairs(hitParts) do
                local part = plr.Character:FindFirstChild(partName)
                if part and part:IsA("BasePart") then
                    local dist = distToCursor(part)
                    if dist < bestDist then
                        bestPart = part
                        bestDist = dist
                    end
                end
            end
        end
    end
    return bestPart
end

-- Rainbow effect
local rainbowHue = 0
task.spawn(function()
    while true do
        rainbowHue = (rainbowHue + 0.01) % 1
        task.wait(0.01)
    end
end)

local function getRainbowColor()
    return Color3.fromHSV(rainbowHue, 1, 1)
end

-- UI Setup
local aimPage = venyx:addPage("Aimbot", 5012544693)
local aimSection = aimPage:addSection("Aimbot Settings")

-- Toggle Aim Status
aimSection:addToggle("Aim Status", getgenv().YeuTuyen.Status, function(value)
    getgenv().YeuTuyen.Status = value
    sendNotification("Aim Status", value and "Enabled" or "Disabled", 2)
end)

-- Keybind cho Aim Status (ô chỉnh key)
aimSection:addKeybind("Aim Status Key", aimStatusKey, function()
    -- Không cần callback ở đây vì listener xử lý
end, function(newKey)
    aimStatusKey = newKey
    sendNotification("Aim Status Key", "Set to " .. newKey.Name, 2)
end)

aimSection:addButton("Switch Aim Mode", function()
    if getgenv().YeuTuyen.Mode == "Aimbot" then
        getgenv().YeuTuyen.Mode = "Aimlock"
        fovCircle.Visible = false
    else
        getgenv().YeuTuyen.Mode = "Aimbot"
        fovCircle.Visible = true
    end

    -- Reset target list khi đổi chế độ
    getgenv().YeuTuyen.SelectedTargets = {}

    sendNotification("Mode Switch", "Switched to " .. getgenv().YeuTuyen.Mode .. " (Targets Cleared)", 2)
end)

aimSection:addDropdown("Aim Part", {"Head", "UpperTorso", "HumanoidRootPart", "Torso"}, function(value)
    getgenv().YeuTuyen.Hitpart = value
    sendNotification("Aim Part", "Set to " .. value, 2)
end)

aimSection:addToggle("Auto Prediction", false, function(value)
    getgenv().YeuTuyen.PredictMovement = value
    sendNotification("Auto Prediction", value and "Enabled" or "Disabled", 2)
end)

aimSection:addToggle("TeamCheck", false, function(value)
    teamCheck = value
    sendNotification("TeamCheck", value and "Enabled" or "Disabled", 2)
end)

-- FOV Circle Toggle and Slider
aimSection:addToggle("FOV Circle", fovCircle.Visible, function(value)
    fovCircle.Visible = value
end)

aimSection:addSlider("FOV Radius", AIM_FOV, 20, 500, function(value)
    AIM_FOV = value
    fovCircle.Radius = value
end)

-- Aim Smoothness Slider
aimSection:addSlider("Aim Smoothness", AIM_SMOOTHNESS * 100, 0, 100, function(value)
    AIM_SMOOTHNESS = value / 100
end)

aimSection:addToggle("Triggerbot", true, function(value)
    TriggerBotEnabled = value
    sendNotification("Triggerbot", value and "ON" or "OFF")
end)

-- Triggerbot FOV Radius
aimSection:addSlider("Triggerbot FOV", fovRadius, 10, 200, function(value)
    fovRadius = value
end)

aimSection:addToggle("AntiLock", false, function(value)
    AntiLockEnabled = value
    sendNotification("AntiLock", value and "ON (" .. AntiLockType .. ")" or "OFF")
end)

-- Dropdown cho các chế độ AntiLock
aimSection:addDropdown("AntiLock Mode", AntiLockModes, function(mode)
    AntiLockType = mode
    if AntiLockEnabled then
        sendNotification("AntiLock", "Mode set to: " .. mode)
    end
end)

local selectedPlayerDisplay = nil
aimSection:addDropdown("Player List", getPlayerList(), function(value)
    selectedPlayerDisplay = value
end)

aimSection:addButton("Select Player", function()
    if not selectedPlayerDisplay then return end
    -- Parse username từ display (ví dụ: tìm phần giữa @ và ) )
    local username = selectedPlayerDisplay:match("@(.-)%)")
    if username then
        if getgenv().YeuTuyen.SelectedTargets[username] then
            getgenv().YeuTuyen.SelectedTargets[username] = nil
            sendNotification("Target", "Deselected: " .. username)
        else
            getgenv().YeuTuyen.SelectedTargets[username] = true
            sendNotification("Target", "Selected: " .. username)
            sendTargetNotification(Players[username])
        end
        -- Refresh dropdown để cập nhật tích
        venyx:RefreshDropdown("Player List", getPlayerList())
        updateESP(Players[username])  -- Nếu cần update ESP ngay
    end
end)

aimSection:addToggle("Bring Selected Players", false, function(value)
    bringEnabled = value
    sendNotification("Bring", value and "Enabled" or "Disabled")
    local char = LocalPlayer.Character
    if not char then return end
    
    if value then
        -- Lưu và set CanCollide false
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                originalCollides[part] = part.CanCollide
                part.CanCollide = false
            end
        end
    else
        -- Khôi phục
        for part, orig in pairs(originalCollides) do
            if part.Parent then  -- Kiểm tra part còn tồn tại
                part.CanCollide = orig
            end
        end
        originalCollides = {}
    end
end)

aimSection:addToggle("Kill Mode", false, function(value)
    getgenv().YeuTuyen.KillMode = value
    sendNotification("Kill Mode", value and "Enabled" or "Disabled", 2)

    if not value then
        pcall(function()
            Camera.CameraSubject = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") or lastSubject
            Camera.CameraType = Enum.CameraType.Custom
            Camera.MinZoomDistance = defaultMinDistance or 0.5
            if LocalPlayer.Character then
                LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(0, 0, 0)
            end
        end)
    else
        defaultMinDistance = Camera.MinZoomDistance
        defaultCameraType = Camera.CameraType

        originalPosition = nil
    end
end)

-- Keybind cho Kill Mode (ô chỉnh key)
aimSection:addKeybind("Kill Mode Key", killModeKey, function()
    -- Không cần callback ở đây vì listener xử lý
end, function(newKey)
    killModeKey = newKey
    sendNotification("Kill Mode Key", "Set to " .. newKey.Name, 2)
end)

-- Dropdown cho chế độ
aimSection:addDropdown("Kill Mode Type", {"Below", "Orbit", "Random"}, function(value)
    KillModeType = value
    sendNotification("Kill Mode Type", "Set to " .. value, 2)
end)

aimSection:addToggle("AutoBring", true, function(value)
    autobringplayer = value
    if value then
        autostomp = false
    end
end)

aimSection:addToggle("AutoStomp", false, function(value)
    autostomp = value
    if value then
        autobringplayer = false
    end
end)

-- Sliders
aimSection:addSlider("Csync Radius", 10, 1, 200, function(value)
    CsyncRadius = value
end)

aimSection:addSlider("Csync Height", -8, -50, 200, function(value)
    CsyncHeight = value
end)

aimSection:addSlider("Csync Speed", 1, 1, 200, function(value)
    CsyncSpeed = value
end)

-- Sound definitions
local sounds = {
    ["RIFK7"] = "rbxassetid://9102080552",
    ["Bubble"] = "rbxassetid://9102092728",
    ["Minecraft"] = "rbxassetid://5869422451",
    ["Cod"] = "rbxassetid://160432334",
    ["Bameware"] = "rbxassetid://6565367558",
    ["Neverlose"] = "rbxassetid://6565370984",
    ["Gamesense"] = "rbxassetid://4817809188",
    ["Yamete"] = "rbxassetid://103267082494666",
}

-- Create Sound instance
local SoundService = game:GetService("SoundService")
local hitSound = Instance.new("Sound")
hitSound.Volume = 3
hitSound.Parent = SoundService

-- Sound pool for multiple sound playback
local soundPool = {}
local soundIndex = 1

local function getNextSound()
    if soundIndex > #soundPool then
        local s = hitSound:Clone()
        s.Parent = workspace
        s.Looped = false
        table.insert(soundPool, s)
    end
    local s = soundPool[soundIndex]
    soundIndex = soundIndex + 1
    return s
end

local function playHitSound()
    local s = getNextSound()
    s:Stop()
    s:Play()
end

-- UI Setup for HitSound
local aimSection = aimPage:addSection("HitSound Settings")
aimSection:addToggle("HitSoundEnabled", true, function(value)
    getgenv().YeuTuyen.HitSoundEnabled = value
    sendNotification("HitSound", value and "Enabled" or "Disabled", 2)
end)

aimSection:addDropdown("HitSoundSelect", {"RIFK7", "Bubble", "Minecraft", "Cod", "Bameware", "Neverlose", "Gamesense", "Yamete"}, function(value)
    local id = sounds[value]
    if id then
        hitSound.SoundId = id
        getgenv().YeuTuyen.HitSoundSelect = value
        sendNotification("HitSound", "Selected: " .. value, 2)
    end
end)

-- Global variable to store hit sound settings
getgenv().YeuTuyen.HitSoundEnabled = true
getgenv().YeuTuyen.HitSoundSelect = "Neverlose"

UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == aimStatusKey then
        getgenv().YeuTuyen.Status = not getgenv().YeuTuyen.Status
        sendNotification("Aim Status", getgenv().YeuTuyen.Status and "Enabled" or "Disabled", 2)
    elseif input.KeyCode == killModeKey then
        getgenv().YeuTuyen.KillMode = not getgenv().YeuTuyen.KillMode
        sendNotification("Kill Mode", getgenv().YeuTuyen.KillMode and "Enabled" or "Disabled", 2)

        if not getgenv().YeuTuyen.KillMode then
            -- Reset camera và movement (sửa vấn đề không di chuyển được)
            pcall(function()
                Camera.CameraSubject = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") or lastSubject
                Camera.CameraType = Enum.CameraType.Custom  -- Reset về default để cho phép di chuyển
                Camera.MinZoomDistance = defaultMinDistance or 0.5
                if LocalPlayer.Character then
                    LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(0, 0, 0)  
                end
            end)
        else
            defaultMinDistance = Camera.MinZoomDistance
            defaultCameraType = Camera.CameraType
            originalPosition = nil
        end
    end
end)

RunService.RenderStepped:Connect(function(deltaTime)

    UpdateFly(deltaTime)

    if TriggerBotEnabled then
        local part = GetBestTargetPart()
        if part then
            task.spawn(function()
                local cap = part
                task.wait(0)
                if distToCursor(cap) <= fovRadius then
                    local origin = Camera.CFrame.Position
                    local direction = (cap.Position - origin)
                    local rayParams = RaycastParams.new()
                    rayParams.FilterType = Enum.RaycastFilterType.Blacklist
                    rayParams.FilterDescendantsInstances = {LocalPlayer.Character}
                    local result = workspace:Raycast(origin, direction, rayParams)
                    if result and result.Instance:IsDescendantOf(cap.Parent) then
                        click()
                    end
                end
            end)
        end
    end
end)

aimSection:addToggle("Hitbox", false, function(value)
    HitboxEnabled = value
    sendNotification("Hitbox", value and "ON" or "OFF")
end)
aimSection:addSlider("Hitbox Transparency", 0.9, 0, 1, function(value)
    HitboxTransparency = value
end)
aimSection:addSlider("Hitbox Size", 15, 5, 50, function(value)
    HitboxSize = value
end)

RunService.RenderStepped:Connect(function()
    if HitboxEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Name ~= LocalPlayer.Name then
                pcall(function()
                    player.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                    player.Character.HumanoidRootPart.Transparency = HitboxTransparency
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    player.Character.HumanoidRootPart.Material = "Neon"
                    player.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    else
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Name ~= LocalPlayer.Name then
                pcall(function()
                    player.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                    player.Character.HumanoidRootPart.Transparency = 1
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                    player.Character.HumanoidRootPart.Material = "Plastic"
                    player.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    end
end)

-- ESP Toggle
aimSection:addToggle("ESP", getgenv().YeuTuyen.ESPEnabled, function(value)
    getgenv().YeuTuyen.ESPEnabled = value
    sendNotification("ESP", value and "ESP Enabled" or "ESP Disabled", 2)
end)

-- Tracer Toggle
aimSection:addToggle("Tracer", false, function(value)
    tracerEnabled = value
    sendNotification("Tracer", value and "Tracer Enabled" or "Tracer Disabled", 2)
    if not value then
        for _, tracer in pairs(tracers) do
            tracer:Remove()
        end
        tracers = {}
    end
end)

-- Rainbow Mode Toggle
aimSection:addToggle("Rainbow Mode", false, function(value)
    rainbowMode = value
    sendNotification("Rainbow Mode", value and "Rainbow Mode Enabled" or "Rainbow Mode Disabled", 2)
end)

-- Set Target Keybind
local targetKey = Enum.KeyCode.Q
aimSection:addKeybind("Set Target Key", targetKey, function()
    SelectClosestToMouse()
end, function(newKey)
    targetKey = newKey
    sendNotification("Set Target Key", "Set to " .. newKey.Name, 2)
end)

-- Select default page
venyx:SelectPage(venyx.pages[1], true)

-- Aim loop
local lastTarget = nil
local lastHealth = {}

RunService.RenderStepped:Connect(function(delta)
    local target, part, hum = nil, nil, nil
    if getgenv().YeuTuyen.Mode == "Aimlock" then
        if getgenv().YeuTuyen.Status then
            target, part, hum = GetBestTarget()
        end
    elseif getgenv().YeuTuyen.Mode == "Aimbot" then
        target, part, hum = GetAimbotTarget()
        if fovCircle then
            fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        end
    end

    -- Update ESP colors for previous target
    if lastTarget and lastTarget ~= target and lastTarget.Character then
        local hl = lastTarget.Character:FindFirstChild("ESPHighlight")
        local gui = lastTarget.Character:FindFirstChild("NameESP")
        if hl then
            hl.FillColor = rainbowMode and getRainbowColor() or Color3.fromRGB(255, 255, 255)
            hl.OutlineColor = rainbowMode and getRainbowColor() or Color3.fromRGB(255, 255, 255)
        end
        if gui and gui:FindFirstChild("NameLabel") then
            gui.NameLabel.TextColor3 = rainbowMode and getRainbowColor() or Color3.fromRGB(255, 255, 255)
        end
    end

    if target and part and hum and target.Character then
        -- Chọn aimpart dựa trên CheckIfJumped
        local aimPartName = getgenv().YeuTuyen.Hitpart
        if getgenv().YeuTuyen.CheckIfJumped and hum:GetState() == Enum.HumanoidStateType.Freefall then
            aimPartName = getgenv().YeuTuyen.CheckIfJumpedAimPart
        end
        local aimPart = target.Character:FindFirstChild(aimPartName) or part 

        -- Áp dụng UseShake
        if getgenv().YeuTuyen.UseShake and aimPart then
            pcall(function()
                local shakeVec = Vector3.new(
                    math.random(-getgenv().YeuTuyen.ShakePower, getgenv().YeuTuyen.ShakePower),
                    math.random(-getgenv().YeuTuyen.ShakePower, getgenv().YeuTuyen.ShakePower),
                    math.random(-getgenv().YeuTuyen.ShakePower, getgenv().YeuTuyen.ShakePower)
                ) * 0.1
                aimPart.Velocity = aimPart.Velocity + shakeVec
                aimPart.AssemblyLinearVelocity = aimPart.AssemblyLinearVelocity + shakeVec
            end)
        end

        -- Áp dụng UnderGround
        if getgenv().YeuTuyen.UnderGround and aimPart then
            pcall(function()
                aimPart.Velocity = Vector3.new(aimPart.Velocity.X, 0, aimPart.Velocity.Z)
                aimPart.AssemblyLinearVelocity = Vector3.new(aimPart.AssemblyLinearVelocity.X, 0, aimPart.AssemblyLinearVelocity.Z)
            end)
        end

        -- Áp dụng DetectDesync
        if getgenv().YeuTuyen.DetectDesync and target.Character:FindFirstChild("HumanoidRootPart") and
            target.Character.HumanoidRootPart.Velocity.Magnitude > getgenv().YeuTuyen.Detection and aimPart then
            pcall(function()
                aimPart.Velocity = Vector3.new(0, 0, 0)
                aimPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
            end)
        end

        -- Áp dụng AutoPingSets
        if getgenv().YeuTuyen.AutoPingSets then
            pcall(function()
                local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                local split = string.split(pingvalue, "(")
                local ping = tonumber(split[1]) or 0
                if ping > 190 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.206547
                elseif ping > 180 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.19284
                elseif ping > 170 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.1923111
                elseif ping > 160 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.1823111
                elseif ping > 150 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.171
                elseif ping > 140 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.165773
                elseif ping > 130 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.1223333
                elseif ping > 120 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.143765
                elseif ping > 110 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.1455
                elseif ping > 100 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.130340
                elseif ping > 90 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.136
                elseif ping > 80 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.1347
                elseif ping > 70 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.119
                elseif ping > 60 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.12731
                elseif ping > 50 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.127668
                elseif ping > 40 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.125
                elseif ping > 30 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.11
                elseif ping > 20 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.12588
                elseif ping > 10 then
                    getgenv().YeuTuyen.PredictionVelocity = 0.9
                end
            end)
        end

        -- Dự đoán chuyển động
        local predictVec = aimPart.Position
        if getgenv().YeuTuyen.PredictMovement and aimPart then
            predictVec = aimPart.Position + aimPart.Velocity * getgenv().YeuTuyen.PredictionVelocity
        end

        if getgenv().YeuTuyen.Status then
            local currentLookAt = Camera.CFrame.LookVector * 1000 + Camera.CFrame.Position
            local targetLookAt = predictVec
            local lerpedLookAt = currentLookAt:Lerp(targetLookAt, AIM_SMOOTHNESS)
            Camera.CFrame = CFrame.lookAt(Camera.CFrame.Position, lerpedLookAt)
        end

        -- Update ESP for current target
        getgenv().YeuTuyen.SelectedTargets[target.Name] = true
        if updateESP then
            updateESP(target)
        end

        -- Show target notification
        if lastTarget ~= target and sendTargetNotification then
            sendTargetNotification(target)
        end

        -- Health change detection
        local currentHealth = hum.Health
        local prevHealth = lastHealth[target] or currentHealth
        if currentHealth < prevHealth then
            local hl = target.Character:FindFirstChild("ESPHighlight")
            if hl and getRainbowColor then
                local originalOutlineColor = hl.OutlineColor
                local originalFillColor = hl.FillColor
                hl.OutlineColor = getRainbowColor()
                if getgenv().YeuTuyen.ESPEnabled then
                    hl.FillTransparency = 0.4
                end
                task.delay(2, function()
                    if hl and hl.Parent then
                        hl.OutlineColor = originalOutlineColor
                        hl.FillColor = originalFillColor
                        hl.FillTransparency = 0.4
                    end
                end)
            end
        end
        lastHealth[target] = currentHealth
    end

    lastTarget = target
end)

-- Teleport Section (simplified)
local function getBestTargetForTeleport()
    local closestTarget, closestDist = nil, math.huge
    local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not myHRP then return nil end

    for name, _ in pairs(getgenv().YeuTuyen.SelectedTargets) do
        local plr = Players:FindFirstChild(name)
        if plr and plr.Character then
            local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local dist = (myHRP.Position - hrp.Position).Magnitude
                if dist < closestDist then
                    closestTarget = plr
                    closestDist = dist
                end
            end
        end
    end

    return closestTarget
end

local function teleportToTarget()
    local target = getBestTargetForTeleport()
    if not target or not getgenv().YeuTuyen.SelectedTargets[target.Name] then
        sendNotification("Teleport", "No valid target in selected list.", 2)
        return
    end

    local char = target.Character
    if not char then return end

    local targetPart = char:FindFirstChild("UpperTorso") or char:FindFirstChild("Torso")
    local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

    if not targetPart or not myHRP then
        sendNotification("Teleport", "Cannot teleport to " .. target.Name, 2)
        return
    end

    myHRP.CFrame = CFrame.new(targetPart.Position + Vector3.new(0, 0, 0))
    sendNotification("Teleport", "Teleported to: " .. target.Name, 2)
end

-- Hotkey: T to teleport
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.T then
        teleportToTarget()
    end
end)

-- Theo dõi máu để gọi hiệu ứng
local function TrackHealth(plr)
    local char = plr.Character
    if not char then return end
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    local lastHealth = hum.Health
    hum.HealthChanged:Connect(function(newHealth)
        if newHealth < lastHealth then
            RainbowHitEffect(char)
            if getgenv().YeuTuyen.HitSoundEnabled then
                playHitSound()
            end
        end
        lastHealth = newHealth
    end)
end

-- Theo dõi player spawn
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function()
        task.wait(1)
        TrackHealth(plr)
    end)
end)
for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= LocalPlayer then
        if plr.Character then TrackHealth(plr) end
        plr.CharacterAdded:Connect(function()
            task.wait(1)
            TrackHealth(plr)
        end)
    end
end

-- KO detection
local lastDowned = {}
RunService.Heartbeat:Connect(function()
    for name, _ in pairs(getgenv().YeuTuyen.SelectedTargets) do
        local plr = Players:FindFirstChild(name)
        if plr and plr.Character then
            local bodyEffects = plr.Character:FindFirstChild("BodyEffects")
            local isKO = bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value
            if isKO and not lastDowned[name] then
                lastDowned[name] = true
                sendNotification("KO Alert", name .. " just got knocked out!", 2)
            elseif not isKO then
                lastDowned[name] = false
            end
        end
    end
    if getgenv().YeuTuyen.KillMode then
        integrateKillMode()
    end
end)

-- Player join/leave notifications
Players.PlayerAdded:Connect(function(player)
    task.wait(1)
    if getgenv().YeuTuyen.SelectedTargets[player.Name] then
        sendNotification("Player", player.Name .. " rejoined the game.", 2)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if getgenv().YeuTuyen.SelectedTargets[player.Name] then
        sendNotification("Player", player.Name .. " left the game.", 2)
    end
end)

local miscPage = venyx:addPage("Misc", 12978113090)
local miscSection = miscPage:addSection("Miscellaneous")

miscSection:addButton("Auto Armor", function()
    local player = LocalPlayer
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end

    local hrp = char.HumanoidRootPart
    local originalCFrame = hrp.CFrame

    hrp.CFrame = CFrame.new(-934.26, -28.50, 566.75)
    task.wait(0.5)

    local Ignored = workspace:FindFirstChild("Ignored") or workspace:FindFirstChild("MAP") or workspace:FindFirstChild("Blacklisted")
    if Ignored then
        local Shop = Ignored:FindFirstChild("Shop") or Ignored:FindFirstChild("Shops") or Ignored:FindFirstChild("Pads") or Ignored:FindFirstChild("BuyPads") or Ignored:FindFirstChild("Bought")
        if Shop then
            for _, model in ipairs(Shop:GetChildren()) do
                if model.Name:lower():find("armor") and model:IsA("Model") then
                    local cd = model:FindFirstChildOfClass("ClickDetector")
                    local head = model:FindFirstChild("Head") or model:FindFirstChild("Part")
                    if cd and head and head:IsA("BasePart") then
                        local dist = (head.Position - hrp.Position).Magnitude
                        if dist <= 10 then
                            for i = 1, 5 do
                                pcall(function() fireclickdetector(cd) end)
                                task.wait(0.05)
                            end
                        end
                    end
                end
            end
        end
    end

    task.wait(0.5)
    if char and char:FindFirstChild("HumanoidRootPart") then
        hrp.CFrame = originalCFrame
    end
end)

miscSection:addSlider("FOV", 70, 70, 120, function(value)
    CurrentFOV = value
    Camera.FieldOfView = value
end)

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(0.5)
    Camera.FieldOfView = CurrentFOV
end)

local TeleportLocations = {
    ["Bank"] = CFrame.new(-442, 39, -284),
    ["Inside Bank"] = CFrame.new(-443, 23, -284),
    ["Vault"] = CFrame.new(-658, -30, -285),
    ["Mid Appartment Building"] = CFrame.new(-323, 80, -299),
    ["Revolver"] = CFrame.new(-634, 21, -132),
    ["LMG"] = CFrame.new(-626, 23, -295),
    ["Swimming Pool"] = CFrame.new(-847, 21, -279),
    ["Broken Fire Station"] = CFrame.new(-1182, 28, -521),
    ["DownHill"] = CFrame.new(-559, 8, -735),
    ["Military Base"] = CFrame.new(-40, 65, -926),
    ["Uphill"] = CFrame.new(481, 48, -602),
    ["Breaking Bad"] = CFrame.new(598, 28, -214),
    ["Church"] = CFrame.new(205, 21, -124),
    ["Police Station"] = CFrame.new(-264, 21, -93),
    ["School"] = CFrame.new(-594, 21, 173)
}

local SelectedTeleport = nil

miscSection:addDropdown("Teleport Location", {
    "Bank", "Inside Bank", "Vault", "Mid Appartment Building", "Revolver", "LMG",
    "Swimming Pool", "Broken Fire Station", "DownHill", "Military Base", "Uphill",
    "Breaking Bad", "Church", "Police Station", "School"
}, function(Value)
    SelectedTeleport = Value
end)

miscSection:addButton("Teleport", function()
    if SelectedTeleport and TeleportLocations[SelectedTeleport] then
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = TeleportLocations[SelectedTeleport]
            sendNotification("Teleport", "Teleported to " .. SelectedTeleport)
        else
            sendNotification("Teleport", "Character not found!")
        end
    else
        sendNotification("Teleport", "No location selected!")
    end
end)

local chatWindow = TextChatService:FindFirstChild("ChatWindowConfiguration")

local ChatEnabled = true
if chatWindow then
    chatWindow.Enabled = ChatEnabled
end

miscSection:addToggle("Show Chat", ChatEnabled, function(state)
    ChatEnabled = state
    if chatWindow then
        chatWindow.Enabled = state
    end
end)

local function stopAnimation()
    if currentTrack then
        currentTrack:Stop()
        currentTrack = nil
    end
end

local function playAnimation(animId)
    local char = LocalPlayer.Character
    if not char then return end
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    if hum.MoveDirection.Magnitude > 0 then return end

    stopAnimation()

    local animator = hum:FindFirstChildOfClass("Animator")
    if not animator then
        animator = Instance.new("Animator")
        animator.Parent = hum
    end

    local anim = Instance.new("Animation")
    anim.AnimationId = animId
    local track = animator:LoadAnimation(anim)
    track.Looped = false
    track:Play()
    currentTrack = track

    task.spawn(function()
        track.Stopped:Wait()
        if currentTrack == track then
            currentTrack = nil
        end
    end)
end

LocalPlayer.CharacterAdded:Connect(function(char)
    currentTrack = nil
    char:WaitForChild("Humanoid")
end)

RunService.RenderStepped:Connect(function()
    local char = LocalPlayer.Character
    if char and currentTrack then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum and hum.MoveDirection.Magnitude > 0 then
            stopAnimation()
        end
    end
end)

miscSection:addKeybind("Jump Happier Key", jumpHappierKey, function()
    playAnimation(jumpHappierAnim)
end)

getgenv().YeuTuyen.CustomAnimEnabled = true

local function applyCustomAnim(char)
    if not char then return end
    local animate = char:WaitForChild("Animate", 5)
    if animate then
        -- Chạy
        animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
        -- Nhảy
        animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=10921242013"
        -- Rơi
        animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
    end
end

-- Áp dụng ngay khi có Character
LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(1) -- chờ load đủ Animate
    applyCustomAnim(char)
end)

-- Nếu nhân vật đã tồn tại sẵn
if LocalPlayer.Character then
    applyCustomAnim(LocalPlayer.Character)
end

-- Đảm bảo luôn áp dụng khi game chạy
RunService.Stepped:Connect(function()
    if getgenv().CustomAnimEnabled then
        local char = LocalPlayer.Character
        if char then
            applyCustomAnim(char)
        end
    end
end)

local function hideRightLegAndAddAccessories(character)
    local rightUpperLeg = character:FindFirstChild("RightUpperLeg")

    if rightUpperLeg then
        rightUpperLeg.Transparency = 1
        local rightLowerLeg = character:FindFirstChild("RightLowerLeg")
        local rightFoot = character:FindFirstChild("RightFoot")
        if rightLowerLeg then rightLowerLeg:Destroy() end
        if rightFoot then rightFoot:Destroy() end

        for _, accessory in ipairs(RightUpperLegAccessories) do
            local obj = game:GetObjects("rbxassetid://" .. tostring(accessory.id))[1]
            if obj then
                obj.Parent = workspace
                local handle = obj:FindFirstChild("Handle")
                if handle then
                    handle.CFrame = rightUpperLeg.CFrame
                    local weld = Instance.new("Weld")
                    weld.Part0 = handle
                    weld.Part1 = rightUpperLeg
                    weld.C0 = CFrame.new(0, -0.12, 0)
                    weld.Parent = handle
                    obj.Parent = character
                    table.insert(addedAccessories, obj)
                end
            end
        end
    end
end

local function restoreRightLeg(character)
    local rightUpperLeg = character:FindFirstChild("RightUpperLeg")
    if rightUpperLeg then
        rightUpperLeg.Transparency = 0
    end
    for _, acc in ipairs(addedAccessories) do
        if acc and acc.Parent then
            acc:Destroy()
        end
    end
    addedAccessories = {}
end

local function enableKorblox(character)
    task.wait(Time)
    hideRightLegAndAddAccessories(character)
end

local function disableKorblox(character)
    restoreRightLeg(character)
end

LocalPlayer.CharacterAdded:Connect(function(char)
    if korbloxEnabled then
        task.wait(1)
        enableKorblox(char)
    else
        disableKorblox(char)
    end
end)

miscSection:addToggle("CustomAnim", true, function(state)
    getgenv().YeuTuyen.CustomAnimEnabled = state
end)

-- Anti Slowdown (tự động hoạt động, bỏ qua nếu game không có các yếu tố này)
spawn(function()
    RunService.Heartbeat:Connect(function()
        local player = LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("BodyEffects") then
            local bodyEffects = player.Character.BodyEffects

            if bodyEffects:FindFirstChild("Movement") then
                local movement = bodyEffects.Movement
                local bodyeffectsBoundaries = movement:FindFirstChild("NoJumping") 
                    or movement:FindFirstChild("ReduceWalk") 
                    or movement:FindFirstChild("NoWalkSpeed")

                if bodyeffectsBoundaries then
                    pcall(function()
                        bodyeffectsBoundaries:Destroy()
                    end)
                end
            end

            local reload = bodyEffects:FindFirstChild("Reload")
            if reload and reload:IsA("BoolValue") and reload.Value == true then
                reload.Value = false
            end
        end
    end)
end)

miscSection:addToggle("Korblox", true, function(state)
    korbloxEnabled = state
    local char = LocalPlayer.Character
    if char then
        if korbloxEnabled then
            enableKorblox(char)
            applyKorbloxAnimations()
        else
            disableKorblox(char)
            restoreAnimations()
        end
    end
end)

miscSection:addButton("Rejoin", function()
    local ts = game:GetService("TeleportService")
    local p = LocalPlayer
    ts:Teleport(game.PlaceId, p)
end)

miscSection:addToggle("Fly", false, function(value)
    FlyEnabled = value
    sendNotification("Fly", value and "ON" or "OFF")
end)
miscSection:addKeybind("Fly Key", Enum.KeyCode.F, function()
    FlyEnabled = not FlyEnabled
    sendNotification("Fly", FlyEnabled and "ON" or "OFF")
end, function()
end)
miscSection:addSlider("Fly Speed", 35, 1, 100, function(value)
    FlySpeed = value
end)

miscSection:addToggle("Movement", false, function(value)
    movementEnabled = value
    sendNotification("Movement", value and "ON" or "OFF", 2)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character.Humanoid.UseJumpPower = true
    end
end)

-- Keybind
miscSection:addKeybind("Toggle Movement Key", Enum.KeyCode.Z, function()
    movementEnabled = not movementEnabled
    sendNotification("Movement", movementEnabled and "ON" or "OFF", 2)
end, function(newKey)
    movementKey = newKey
    sendNotification("Movement Key", "Set to " .. newKey.Name, 2)
end)

-- Sliders
miscSection:addSlider("WalkSpeed", 30, 16, 300, function(value)
    walkSpeed = value
end)

miscSection:addSlider("JumpPower", 60, 50, 300, function(value)
    jumpPower = value
end)

RunService.Heartbeat:Connect(function(dt)
    if movementEnabled then 
        local char = LocalPlayer.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if hrp and hum then
            -- bước di chuyển
            local stepY = jumpPower * dt
            local stepXZ = walkSpeed * dt
            
            local moveDir = hum.MoveDirection
            if moveDir.Magnitude > 0 then
                hrp.CFrame = hrp.CFrame + (moveDir * stepXZ) + Vector3.new(0, stepY, 0)
            else
                hrp.CFrame = hrp.CFrame + Vector3.new(0, stepY, 0)
            end
        end
    end

if not bringEnabled then return end
    local myChar = LocalPlayer.Character
    local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
    if not myHRP then return end
    
    for name, _ in pairs(getgenv().YeuTuyen.SelectedTargets) do
        local plr = Players:FindFirstChild(name)
        if plr and plr.Character and isAlive(plr) then
            local targetHRP = plr.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                -- Bring đến trước mặt cách 2 stud
                local bringPos = myHRP.CFrame * CFrame.new(0, 0, -2)
                targetHRP.CFrame = bringPos
            end
        end
    end
end)

-- GUI Toggle Keybind
miscSection:addKeybind("Toggle GUI", Enum.KeyCode.RightShift, function()
    venyx:toggle()
    sendNotification("GUI", venyx.isEnabled and "GUI Shown" or "GUI Hidden", 2)
end, function()
    sendNotification("GUI Keybind", "Changed GUI toggle keybind", 2)
end)

-- Auralist Page
local auralistPage = venyx:addPage("Auralist", 5012543246)
local auralistSection = auralistPage:addSection("Aura Features")

local awEnabled = false
local awInstances = {}
local awHrp = nil
local awColor = Color3.new(1, 1, 1) -- Default white for Angel Wings

local function destroyAw()
    for _, inst in pairs(awInstances) do
        pcall(function() inst:Destroy() end)
    end
    awInstances = {}
end

local function createAw()
    local character = game.Players.LocalPlayer.Character
    if not character then return end
    awHrp = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")
    if not awHrp then return end

    destroyAw()

    -- Attachment1 at (0, 4.25, 0)
    local att1 = Instance.new("Attachment")
    att1.Name = "AngelAttachment1"
    att1.CFrame = CFrame.new(0, 4.25, 0)
    att1.Parent = awHrp
    table.insert(awInstances, att1)

    -- ParticleEmitter1 in att1
    local pe1 = Instance.new("ParticleEmitter")
    pe1.Name = "AngelParticle1"
    pe1.Acceleration = Vector3.new(0, -6, 0)
    pe1.Brightness = 1
    pe1.Color = ColorSequence.new(awColor)
    pe1.Drag = 0
    pe1.EmissionDirection = Enum.NormalId.Bottom
    pe1.Enabled = true
    pe1.Lifetime = NumberRange.new(1, 2)
    pe1.LightEmission = 1
    pe1.LightInfluence = 1
    pe1.LockedToPart = true
    pe1.Orientation = Enum.ParticleOrientation.FacingCamera
    pe1.Rate = 50
    pe1.RotSpeed = NumberRange.new(-100, 100)
    pe1.Rotation = NumberRange.new(-360, 360)
    pe1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.5, 0.3), NumberSequenceKeypoint.new(1, 0.5, 0.3)})
    pe1.Speed = NumberRange.new(2.5, 2.5)
    pe1.SpreadAngle = Vector2.new(0, 360)
    pe1.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    pe1.Texture = "rbxassetid://7511321694"
    pe1.TimeScale = 1
    pe1.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1),
        NumberSequenceKeypoint.new(0.1, 0),
        NumberSequenceKeypoint.new(0.3, 0),
        NumberSequenceKeypoint.new(0.8, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    pe1.VelocityInheritance = 0
    pe1.WindAffectsDrag = false
    pe1.ZOffset = 0
    pe1.Parent = att1
    table.insert(awInstances, pe1)

    -- ParticleEmitter2 in att1
    local pe2 = Instance.new("ParticleEmitter")
    pe2.Name = "AngelParticle2"
    pe2.Acceleration = Vector3.new(0, -6, 0)
    pe2.Brightness = 1
    pe2.Color = ColorSequence.new(awColor)
    pe2.Drag = 0
    pe2.EmissionDirection = Enum.NormalId.Bottom
    pe2.Enabled = true
    pe2.Lifetime = NumberRange.new(1, 2)
    pe2.LightEmission = 1
    pe2.LightInfluence = 1
    pe2.LockedToPart = true
    pe2.Orientation = Enum.ParticleOrientation.FacingCamera
    pe2.Rate = 100
    pe2.RotSpeed = NumberRange.new(-100, 100)
    pe2.Rotation = NumberRange.new(-360, 360)
    pe2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.5, 0.3), NumberSequenceKeypoint.new(1, 0.5, 0.3)})
    pe2.Speed = NumberRange.new(2.5, 2.5)
    pe2.SpreadAngle = Vector2.new(0, 360)
    pe2.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    pe2.Texture = "rbxassetid://1084976679"
    pe2.TimeScale = 1
    pe2.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1),
        NumberSequenceKeypoint.new(0.2, 0),
        NumberSequenceKeypoint.new(0.8, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    pe2.VelocityInheritance = 0
    pe2.WindAffectsDrag = false
    pe2.ZOffset = 0
    pe2.Parent = att1
    table.insert(awInstances, pe2)

    -- Attachment2 at (0, 0.75, 0.5)
    local att2 = Instance.new("Attachment")
    att2.Name = "AngelAttachment2"
    att2.CFrame = CFrame.new(0, 0.75, 0.5)
    att2.Parent = awHrp
    table.insert(awInstances, att2)

    -- Attachment3 at (-5.25, 0, 2)
    local att3 = Instance.new("Attachment")
    att3.Name = "AngelAttachment3"
    att3.CFrame = CFrame.new(-5.25, 0, 2) * CFrame.fromMatrix(Vector3.new(0,0,0), Vector3.new(0.866025388, 0, 0.5), Vector3.new(0,1,0), Vector3.new(-0.5, 0, 0.866025388))
    att3.Parent = awHrp
    table.insert(awInstances, att3)

    -- Attachment4 at (5.25, 0, 2)
    local att4 = Instance.new("Attachment")
    att4.Name = "AngelAttachment4"
    att4.CFrame = CFrame.new(5.25, 0, 2) * CFrame.fromMatrix(Vector3.new(0,0,0), Vector3.new(0.866025388, 0, -0.5), Vector3.new(0,1,0), Vector3.new(0.5, 0, 0.866025388))
    att4.Parent = awHrp
    table.insert(awInstances, att4)

    -- Beam1: att2 to att3
    local beam1 = Instance.new("Beam")
    beam1.Name = "AngelBeam1"
    beam1.Attachment0 = att2
    beam1.Attachment1 = att3
    beam1.Brightness = 1
    beam1.Color = ColorSequence.new(awColor)
    beam1.CurveSize0 = 2
    beam1.CurveSize1 = 2
    beam1.Enabled = true
    beam1.FaceCamera = false
    beam1.LightEmission = 1
    beam1.LightInfluence = 1
    beam1.Segments = 10
    beam1.Texture = "rbxassetid://9544400688"
    beam1.TextureLength = 1
    beam1.TextureMode = Enum.TextureMode.Stretch
    beam1.TextureSpeed = 0
    beam1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    beam1.Width0 = 4
    beam1.Width1 = 6
    beam1.ZOffset = 0
    beam1.Parent = awHrp
    table.insert(awInstances, beam1)

    -- Beam2: att2 to att4
    local beam2 = Instance.new("Beam")
    beam2.Name = "AngelBeam2"
    beam2.Attachment0 = att2
    beam2.Attachment1 = att4
    beam2.Brightness = 1
    beam2.Color = ColorSequence.new(awColor)
    beam2.CurveSize0 = -2
    beam2.CurveSize1 = -2
    beam2.Enabled = true
    beam2.FaceCamera = false
    beam2.LightEmission = 1
    beam2.LightInfluence = 1
    beam2.Segments = 10
    beam2.Texture = "rbxassetid://9544400688"
    beam2.TextureLength = 1
    beam2.TextureMode = Enum.TextureMode.Stretch
    beam2.TextureSpeed = 0
    beam2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
    beam2.Width0 = 4
    beam2.Width1 = 6
    beam2.ZOffset = 0
    beam2.Parent = awHrp
    table.insert(awInstances, beam2)

    -- PointLight
    local pl = Instance.new("PointLight")
    pl.Name = "AngelPointLight"
    pl.Brightness = 4
    pl.Color = awColor
    pl.Enabled = true
    pl.Range = 5
    pl.Shadows = false
    pl.Parent = awHrp
    table.insert(awInstances, pl)
end

local function updateAwColor(newColor)
    awColor = newColor
    if awEnabled then
        for _, inst in pairs(awInstances) do
            if inst:IsA("ParticleEmitter") or inst:IsA("Beam") then
                inst.Color = ColorSequence.new(awColor)
            elseif inst:IsA("PointLight") then
                inst.Color = awColor
            end
        end
    end
end

-- Blueheat Aura
local bhEnabled = false
local bhInstances = {}
local bhColor = Color3.new(0.0588235, 0.0588235, 1) -- Default dark blue

local function destroyBh()
    for _, inst in pairs(bhInstances) do
        pcall(function() inst:Destroy() end)
    end
    bhInstances = {}
end

local function createBh()
    local character = game.Players.LocalPlayer.Character
    if not character then return end

    destroyBh()

    -- Get all parts except HumanoidRootPart
    local parts = {}
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            table.insert(parts, part)
        end
    end

    for _, part in pairs(parts) do
        -- Atom1
        local atom1 = Instance.new("ParticleEmitter")
        atom1.Name = "BhAtom1"
        atom1.Acceleration = Vector3.new(0, 1, 0)
        atom1.Brightness = 10
        atom1.Color = ColorSequence.new(bhColor)
        atom1.Drag = 50
        atom1.EmissionDirection = Enum.NormalId.Top
        atom1.Enabled = true
        atom1.Lifetime = NumberRange.new(0.4, 0.6)
        atom1.LightEmission = 1
        atom1.LightInfluence = 0
        atom1.LockedToPart = false
        atom1.Orientation = Enum.ParticleOrientation.FacingCamera
        atom1.Rate = 20
        atom1.RotSpeed = NumberRange.new(0, 0)
        atom1.Rotation = NumberRange.new(-360, 360)
        atom1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.125), NumberSequenceKeypoint.new(1, 0)})
        atom1.Speed = NumberRange.new(30, 40)
        atom1.SpreadAngle = Vector2.new(90, 90)
        atom1.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        atom1.Texture = "rbxassetid://11448304274"
        atom1.TimeScale = 0.75
        atom1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.500529, 0), NumberSequenceKeypoint.new(1, 1)})
        atom1.VelocityInheritance = 0
        atom1.WindAffectsDrag = false
        atom1.ZOffset = -1
        atom1.Parent = part
        table.insert(bhInstances, atom1)

        -- Flame1
        local flame1 = Instance.new("ParticleEmitter")
        flame1.Name = "BhFlame1"
        flame1.Acceleration = Vector3.new(0, 1, 0)
        flame1.Brightness = 10
        flame1.Color = ColorSequence.new(bhColor)
        flame1.Drag = 0
        flame1.EmissionDirection = Enum.NormalId.Top
        flame1.Enabled = true
        flame1.Lifetime = NumberRange.new(0.4, 0.6)
        flame1.LightEmission = 1
        flame1.LightInfluence = 0
        flame1.LockedToPart = false
        flame1.Orientation = Enum.ParticleOrientation.FacingCamera
        flame1.Rate = 150
        flame1.RotSpeed = NumberRange.new(0, 0)
        flame1.Rotation = NumberRange.new(-360, 360)
        flame1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(1, 0)})
        flame1.Speed = NumberRange.new(1, 2)
        flame1.SpreadAngle = Vector2.new(90, 90)
        flame1.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        flame1.Texture = "rbxassetid://10545078665"
        flame1.TimeScale = 0.75
        flame1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.500529, 0), NumberSequenceKeypoint.new(1, 1)})
        flame1.VelocityInheritance = 0
        flame1.WindAffectsDrag = false
        flame1.ZOffset = -1
        flame1.Parent = part
        table.insert(bhInstances, flame1)

        -- Flame2
        local flame2 = Instance.new("ParticleEmitter")
        flame2.Name = "BhFlame2"
        flame2.Acceleration = Vector3.new(0, 1, 0)
        flame2.Brightness = 10
        flame2.Color = ColorSequence.new(bhColor)
        flame2.Drag = 0
        flame2.EmissionDirection = Enum.NormalId.Top
        flame2.Enabled = true
        flame2.Lifetime = NumberRange.new(0.3, 0.4)
        flame2.LightEmission = 1
        flame2.LightInfluence = 0
        flame2.LockedToPart = false
        flame2.Orientation = Enum.ParticleOrientation.FacingCamera
        flame2.Rate = 150
        flame2.RotSpeed = NumberRange.new(0, 0)
        flame2.Rotation = NumberRange.new(-360, 360)
        flame2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1.1875), NumberSequenceKeypoint.new(1, 0)})
        flame2.Speed = NumberRange.new(2, 3)
        flame2.SpreadAngle = Vector2.new(90, 90)
        flame2.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        flame2.Texture = "rbxassetid://10545078665"
        flame2.TimeScale = 0.75
        flame2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.500529, 0), NumberSequenceKeypoint.new(1, 1)})
        flame2.VelocityInheritance = 0
        flame2.WindAffectsDrag = false
        flame2.ZOffset = -1.10000002
        flame2.Parent = part
        table.insert(bhInstances, flame2)

        -- Glow
        local glow = Instance.new("ParticleEmitter")
        glow.Name = "BhGlow"
        glow.Acceleration = Vector3.new(0, 1, 0)
        glow.Brightness = 10
        glow.Color = ColorSequence.new(bhColor)
        glow.Drag = 0
        glow.EmissionDirection = Enum.NormalId.Top
        glow.Enabled = true
        glow.FlipbookFramerate = NumberRange.new(30, 30)
        glow.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
        glow.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
        glow.Lifetime = NumberRange.new(0.4, 0.6)
        glow.LightEmission = 1
        glow.LightInfluence = 0
        glow.LockedToPart = true
        glow.Orientation = Enum.ParticleOrientation.FacingCamera
        glow.Rate = 200
        glow.RotSpeed = NumberRange.new(0, 0)
        glow.Rotation = NumberRange.new(-360, 360)
        glow.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.5), NumberSequenceKeypoint.new(1, 0.5)})
        glow.Speed = NumberRange.new(0.1, 0.1)
        glow.SpreadAngle = Vector2.new(360, 360)
        glow.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        glow.Texture = "rbxassetid://8451174579"
        glow.TimeScale = 0.75
        glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5, 0.9125), NumberSequenceKeypoint.new(1, 1)})
        glow.VelocityInheritance = 0
        glow.WindAffectsDrag = false
        glow.ZOffset = 1
        glow.Parent = part
        table.insert(bhInstances, glow)

        -- Steam
        local steam = Instance.new("ParticleEmitter")
        steam.Name = "BhSteam"
        steam.Acceleration = Vector3.new(0, 1, 0)
        steam.Brightness = 10
        steam.Color = ColorSequence.new(bhColor)
        steam.Drag = 5
        steam.EmissionDirection = Enum.NormalId.Top
        steam.Enabled = true
        steam.Lifetime = NumberRange.new(0.4, 0.6)
        steam.LightEmission = 1
        steam.LightInfluence = 0
        steam.LockedToPart = false
        steam.Orientation = Enum.ParticleOrientation.FacingCamera
        steam.Rate = 100
        steam.RotSpeed = NumberRange.new(0, 0)
        steam.Rotation = NumberRange.new(-360, 360)
        steam.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 2.4375), NumberSequenceKeypoint.new(1, 0)})
        steam.Speed = NumberRange.new(8, 10)
        steam.SpreadAngle = Vector2.new(90, 90)
        steam.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
        steam.Texture = "rbxassetid://11156590261"
        steam.TimeScale = 0.75
        steam.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.499471, 0.8875), NumberSequenceKeypoint.new(1, 1)})
        steam.VelocityInheritance = 0
        steam.WindAffectsDrag = false
        steam.ZOffset = -1
        steam.Parent = part
        table.insert(bhInstances, steam)
    end
end

local function updateBhColor(newColor)
    bhColor = newColor
    if bhEnabled then
        for _, inst in pairs(bhInstances) do
            if inst:IsA("ParticleEmitter") then
                inst.Color = ColorSequence.new(bhColor)
            end
        end
    end
end

-- UI controls for both effects
auralistSection:addToggle("Angel Wings", false, function(value)
    awEnabled = value
    venyx:Notify("Angel Wings", value and "ON" or "OFF")
    if value then
        createAw()
    else
        destroyAw()
    end
end)

auralistSection:addColorPicker("Angel Wings Color", Color3.new(1, 1, 1), function(color)
    updateAwColor(color)
    venyx:Notify("Angel Wings Color", "Color changed")
end)

auralistSection:addToggle("Blueheat Aura", false, function(value)
    bhEnabled = value
    venyx:Notify("Blueheat Aura", value and "ON" or "OFF")
    if value then
        createBh()
    else
        destroyBh()
    end
end)

auralistSection:addColorPicker("Blueheat Color", Color3.new(0.0588235, 0.0588235, 1), function(color)
    updateBhColor(color)
    venyx:Notify("Blueheat Color", "Color changed")
end)

-- Handle character respawn for both effects
game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("HumanoidRootPart", 5)
    if awEnabled then
        createAw()
    end
    if bhEnabled then
        createBh()
    end
end)

-- Initial check for character
local initialChar = game.Players.LocalPlayer.Character
if initialChar then
    initialChar:WaitForChild("HumanoidRootPart", 5)
    if awEnabled then
        createAw()
    end
    if bhEnabled then
        createBh()
    end
end

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local animationBaseUrl = "http://www.roblox.com/asset/?id="

-- 🔥 Full Animation Presets
local animations = {
    R15 = { idle=animationBaseUrl.."2510196951", walk=animationBaseUrl.."2510202577", run=animationBaseUrl.."2510198475", jump=animationBaseUrl.."2510197830", climb=animationBaseUrl.."2510192778", fall=animationBaseUrl.."2510195892" },
    Loser = { idle=animationBaseUrl.."782841498", walk=animationBaseUrl.."616168032", run=animationBaseUrl.."616163682", jump=animationBaseUrl.."1083218792", climb=animationBaseUrl.."1083439238", fall=animationBaseUrl.."707829716" },
    Astronaut = { idle=animationBaseUrl.."891621366", jump=animationBaseUrl.."891627522", fall=animationBaseUrl.."891617961", walk=animationBaseUrl.."891667138", run=animationBaseUrl.."891636393", climb=animationBaseUrl.."891609353" },
    Bubbly = { idle=animationBaseUrl.."910004836", jump=animationBaseUrl.."910016857", fall=animationBaseUrl.."910001910", walk=animationBaseUrl.."910034870", run=animationBaseUrl.."910025107", climb=animationBaseUrl.."940996062" },
    Cartoony = { idle=animationBaseUrl.."742637544", jump=animationBaseUrl.."742637942", fall=animationBaseUrl.."742637151", walk=animationBaseUrl.."742640026", run=animationBaseUrl.."742638842", climb=animationBaseUrl.."742636889" },
    Confident = { idle=animationBaseUrl.."1069977950", jump=animationBaseUrl.."1069984524", fall=animationBaseUrl.."1069973677", walk=animationBaseUrl.."1070017263", run=animationBaseUrl.."1070001516", climb=animationBaseUrl.."1069946257" },
    Cowboy = { idle=animationBaseUrl.."1014390418", jump=animationBaseUrl.."1014394726", fall=animationBaseUrl.."1014384571", walk=animationBaseUrl.."1014421541", run=animationBaseUrl.."1014401683", climb=animationBaseUrl.."1014380606" },
    Elder = { idle=animationBaseUrl.."845397899", jump=animationBaseUrl.."845398858", fall=animationBaseUrl.."845396048", walk=animationBaseUrl.."845403856", run=animationBaseUrl.."845386501", climb=animationBaseUrl.."845392038" },
    Knight = { idle=animationBaseUrl.."657595757", jump=animationBaseUrl.."658409194", fall=animationBaseUrl.."657600338", walk=animationBaseUrl.."657552124", run=animationBaseUrl.."657564596", climb=animationBaseUrl.."658360781" },
    Levitation = { idle=animationBaseUrl.."616006778", jump=animationBaseUrl.."616008936", fall=animationBaseUrl.."616005863", walk=animationBaseUrl.."616013216", run=animationBaseUrl.."616010382", climb=animationBaseUrl.."616003713" },
    Mage = { idle=animationBaseUrl.."707742142", jump=animationBaseUrl.."707853694", fall=animationBaseUrl.."707829716", walk=animationBaseUrl.."707897309", run=animationBaseUrl.."707861613", climb=animationBaseUrl.."707826056" },
    Ninja = { idle=animationBaseUrl.."656117400", jump=animationBaseUrl.."656117878", fall=animationBaseUrl.."656115606", walk=animationBaseUrl.."656121766", run=animationBaseUrl.."656118852", climb=animationBaseUrl.."656114359" },
    Patrol = { idle=animationBaseUrl.."1149612882", jump=animationBaseUrl.."1148811837", fall=animationBaseUrl.."1148863382", walk=animationBaseUrl.."1151231493", run=animationBaseUrl.."1150967949", climb=animationBaseUrl.."1148811837" },
    Pirate = { idle=animationBaseUrl.."750781874", jump=animationBaseUrl.."750782230", fall=animationBaseUrl.."750780242", walk=animationBaseUrl.."750785693", run=animationBaseUrl.."750783738", climb=animationBaseUrl.."750779899" },
    Popstar = { idle=animationBaseUrl.."1212900985", jump=animationBaseUrl.."1212954642", fall=animationBaseUrl.."1212900995", walk=animationBaseUrl.."1212980338", run=animationBaseUrl.."1212980348", climb=animationBaseUrl.."1213044953" },
    Princess = { idle=animationBaseUrl.."941003647", jump=animationBaseUrl.."941008832", fall=animationBaseUrl.."941000007", walk=animationBaseUrl.."941028902", run=animationBaseUrl.."941015281", climb=animationBaseUrl.."940996062" },
    Robot = { idle=animationBaseUrl.."616088211", jump=animationBaseUrl.."616090535", fall=animationBaseUrl.."616087089", walk=animationBaseUrl.."616095330", run=animationBaseUrl.."616091570", climb=animationBaseUrl.."616086039" },
    Sneaky = { idle=animationBaseUrl.."1132473842", jump=animationBaseUrl.."1132489853", fall=animationBaseUrl.."1132469004", walk=animationBaseUrl.."1132510133", run=animationBaseUrl.."1132494274", climb=animationBaseUrl.."1132461372" },
    Stylish = { idle=animationBaseUrl.."616136790", jump=animationBaseUrl.."616139451", fall=animationBaseUrl.."616134815", walk=animationBaseUrl.."616146177", run=animationBaseUrl.."616140816", climb=animationBaseUrl.."616133594" },
    Superhero = { idle=animationBaseUrl.."616111295", jump=animationBaseUrl.."616115533", fall=animationBaseUrl.."616108001", walk=animationBaseUrl.."616122287", run=animationBaseUrl.."616117076", climb=animationBaseUrl.."616104706" },
    Toy = { idle=animationBaseUrl.."782841498", jump=animationBaseUrl.."782847020", fall=animationBaseUrl.."782846423", walk=animationBaseUrl.."782843345", run=animationBaseUrl.."782842708", climb=animationBaseUrl.."782843869" },
    Vampire = { idle=animationBaseUrl.."1083445855", jump=animationBaseUrl.."1083455352", fall=animationBaseUrl.."1083443587", walk=animationBaseUrl.."1083473930", run=animationBaseUrl.."1083462077", climb=animationBaseUrl.."1083439238" },
    Werewolf = { idle=animationBaseUrl.."1083195517", jump=animationBaseUrl.."1083218792", fall=animationBaseUrl.."1083189019", walk=animationBaseUrl.."1083178339", run=animationBaseUrl.."1083216690", climb=animationBaseUrl.."1083182000" },
    Zombie = { idle=animationBaseUrl.."616158929", jump=animationBaseUrl.."616161997", fall=animationBaseUrl.."616157476", walk=animationBaseUrl.."616168032", run=animationBaseUrl.."616163682", climb=animationBaseUrl.."616156119" },
    RealisticZombie = { idle=animationBaseUrl.."3489171152", jump=animationBaseUrl.."616161997", fall=animationBaseUrl.."616157476", walk=animationBaseUrl.."3489174223", run=animationBaseUrl.."3489173414", climb=animationBaseUrl.."616156119" },
}

-- Lưu preset đã chọn cho từng loại anim
local currentAnimationPresets = { idle="Zombie", walk="R15", run="Zombie", jump="Ninja", climb="R15", fall="Mage" }

-- Danh sách preset name
local animationPresetNames = {}
for k, _ in pairs(animations) do
    table.insert(animationPresetNames, k)
end

-- Áp dụng 1 anim
local function applyAnimation(animate, presetName, animationType)
    local preset = animations[presetName]
    if not preset then return end
    local animId = preset[animationType]
    if not animId then return end

    local animObject = animate:FindFirstChild(animationType)
    if not animObject then return end

    local animChild
    if animationType == "idle" then
        animChild = animObject:FindFirstChild("Animation1")
    elseif animationType == "walk" then
        animChild = animObject:FindFirstChild("WalkAnim")
    elseif animationType == "run" then
        animChild = animObject:FindFirstChild("RunAnim")
    elseif animationType == "jump" then
        animChild = animObject:FindFirstChild("JumpAnim")
    elseif animationType == "climb" then
        animChild = animObject:FindFirstChild("ClimbAnim")
    elseif animationType == "fall" then
        animChild = animObject:FindFirstChild("FallAnim")
    end

    if animChild then
        animChild.AnimationId = animId
    end
end

-- Áp dụng theo lựa chọn
local function applySelectedAnimation(animationType)
    local char = player.Character
    if not char then return end
    local animate = char:FindFirstChild("Animate")
    if not animate then return end
    local presetName = currentAnimationPresets[animationType]
    applyAnimation(animate, presetName, animationType)
end

-- Áp dụng tất cả animations
local function applyAllAnimations()
    local char = player.Character
    if not char then return end
    local animate = char:FindFirstChild("Animate")
    if not animate then return end
    for _, animType in ipairs(animationTypes) do
        applyAnimation(animate, currentAnimationPresets[animType], animType)
    end
end

-- UI (giả sử auralistSection và venyx đã được định nghĩa)
local animationTypes = {"idle", "walk", "run", "jump", "climb", "fall"}
for _, animType in ipairs(animationTypes) do
    local displayName = animType:sub(1,1):upper()..animType:sub(2)
    auralistSection:addDropdown(displayName.." Animation", animationPresetNames, function(value)
        currentAnimationPresets[animType] = value
        venyx:Notify(displayName, "Selected: "..value)
    end)
    auralistSection:addButton("Apply "..displayName, function()
        applySelectedAnimation(animType)
        venyx:Notify("Animation", displayName.." set to "..currentAnimationPresets[animType])
    end)
end

-- Auto apply khi respawn
player.CharacterAdded:Connect(function(char)
    char:WaitForChild("HumanoidRootPart", 5)
    applyAllAnimations()
end)

-- Continuous application using RunService
local lastApplied = 0
local applyInterval = 1 -- Apply every 1 second to avoid performance issues
RunService.Heartbeat:Connect(function()
    local currentTime = tick()
    if currentTime - lastApplied >= applyInterval then
        applyAllAnimations()
        lastApplied = currentTime
    end
end)
